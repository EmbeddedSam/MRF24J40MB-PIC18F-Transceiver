

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 12 15:01:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47                           	dabs	1,0x100,144,_RXBuffer1
    48                           	dabs	1,0x300,144,_RXBuffer2
    49  0000                     _ADCON1	set	4033
    50  0000                     _INTCON2bits	set	4081
    51  0000                     _INTCONbits	set	4082
    52  0000                     _LATA	set	3977
    53  0000                     _LATB	set	3978
    54  0000                     _LATC	set	3979
    55  0000                     _LATD	set	3980
    56  0000                     _LATDbits	set	3980
    57  0000                     _LATE	set	3981
    58  0000                     _LATF	set	3982
    59  0000                     _LATG	set	3983
    60  0000                     _LATH	set	3984
    61  0000                     _PIR3bits	set	4004
    62  0000                     _PORTBbits	set	3969
    63  0000                     _PORTCbits	set	3970
    64  0000                     _RCONbits	set	4048
    65  0000                     _SSP2BUF	set	3942
    66  0000                     _SSP2CON1	set	3939
    67  0000                     _SSP2CON1bits	set	3939
    68  0000                     _SSP2STAT	set	3940
    69  0000                     _SSP2STATbits	set	3940
    70  0000                     _TRISA	set	3986
    71  0000                     _TRISB	set	3987
    72  0000                     _TRISBbits	set	3987
    73  0000                     _TRISC	set	3988
    74  0000                     _TRISCbits	set	3988
    75  0000                     _TRISD	set	3989
    76  0000                     _TRISDbits	set	3989
    77  0000                     _TRISE	set	3990
    78  0000                     _TRISF	set	3991
    79  0000                     _TRISG	set	3992
    80  0000                     _TRISH	set	3993
    81                           
    82 ;;
    83 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    84 ;;
    85 ;; *************** function _main *****************
    86 ;; Defined at:
    87 ;;		line 83 in file "main.c"
    88 ;; Parameters:    Size  Location     Type
    89 ;;		None
    90 ;; Auto vars:     Size  Location     Type
    91 ;;		None
    92 ;; Return value:  Size  Location     Type
    93 ;;		None               void
    94 ;; Registers used:
    95 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    96 ;; Tracked objects:
    97 ;;		On entry : 0/0
    98 ;;		On exit  : 0/0
    99 ;;		Unchanged: 0/0
   100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   105 ;;Total ram usage:        0 bytes
   106 ;; Hardware stack levels required when called:   10
   107 ;; This function calls:
   108 ;;		_BoardInit
   109 ;;		_Delay10KTCYx
   110 ;;		_RadioDiscardPacket
   111 ;;		_RadioInit
   112 ;;		_RadioInitP2P
   113 ;;		_RadioRXPacket
   114 ;;		_RadioSetSleep
   115 ;;		_RadioTXPacket
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122  0009FA                     __ptext0:
   123                           	opt stack 0
   124                           
   125                           ; #config settings
   126  0009FA                     _main:
   127                           	opt stack 21
   128                           
   129                           ;main.c: 85: static UINT8 lastFrameNumber;
   130                           ;main.c: 86: static UINT8 ReadData;
   131                           ;main.c: 88: TRISCbits.RC2 = 1;
   132                           
   133                           ;incstack = 0
   134  0009FA  8494               	bsf	3988,2,c	;volatile
   135                           
   136                           ;main.c: 89: TRISCbits.RC3 = 1;
   137  0009FC  8694               	bsf	3988,3,c	;volatile
   138                           
   139                           ;main.c: 90: TRISH = 0xF0;
   140  0009FE  0EF0               	movlw	240
   141  000A00  6E99               	movwf	3993,c	;volatile
   142                           
   143                           ;main.c: 92: BoardInit();
   144  000A02  ECFF  F006         	call	_BoardInit	;wreg free
   145                           
   146                           ;main.c: 93: RadioInit();
   147  000A06  EC80  F006         	call	_RadioInit	;wreg free
   148                           
   149                           ;main.c: 94: RadioInitP2P();
   150  000A0A  EC28  F008         	call	_RadioInitP2P	;wreg free
   151                           
   152                           ;main.c: 97: for (i = 0; i < 3; i++) {
   153  000A0E  0E00               	movlw	0
   154  000A10  6E04               	movwf	_i+1,c
   155  000A12  0E00               	movlw	0
   156  000A14  6E03               	movwf	_i,c
   157  000A16  5004               	movf	_i+1,w,c
   158  000A18  0A80               	xorlw	128
   159  000A1A  0F80               	addlw	-128
   160  000A1C  0E03               	movlw	3
   161  000A1E  B4D8               	btfsc	status,2,c
   162  000A20  5C03               	subwf	_i,w,c
   163  000A22  B0D8               	btfsc	status,0,c
   164  000A24  D00C               	goto	l233
   165                           
   166                           ;main.c: 99: LATF = 0xFF;
   167  000A26  688E               	setf	3982,c	;volatile
   168                           
   169                           ;main.c: 100: Delay10KTCYx(30);
   170  000A28  0E1E               	movlw	30
   171  000A2A  EC66  F009         	call	_Delay10KTCYx
   172                           
   173                           ;main.c: 101: LATF = 0x00;
   174  000A2E  0E00               	movlw	0
   175  000A30  6E8E               	movwf	3982,c	;volatile
   176                           
   177                           ;main.c: 102: Delay10KTCYx(30);
   178  000A32  0E1E               	movlw	30
   179  000A34  EC66  F009         	call	_Delay10KTCYx
   180  000A38  4A03               	infsnz	_i,f,c
   181  000A3A  2A04               	incf	_i+1,f,c
   182  000A3C  D7EC               	goto	L1
   183  000A3E                     l233:
   184                           
   185                           ;main.c: 106: {
   186                           ;main.c: 107: if (PORTCbits.RC3) {
   187  000A3E  A682               	btfss	3970,3,c	;volatile
   188  000A40  D010               	goto	l234
   189                           
   190                           ;main.c: 108: RadioSetSleep(1);
   191  000A42  0E01               	movlw	1
   192  000A44  EC37  F007         	call	_RadioSetSleep
   193                           
   194                           ;main.c: 109: LATH = 0b00000000;
   195  000A48  0E00               	movlw	0
   196  000A4A  6E90               	movwf	3984,c	;volatile
   197                           
   198                           ;main.c: 110: while (PORTCbits.RC3) {
   199  000A4C  D002               	goto	l3206
   200  000A4E                     l3204:
   201                           
   202                           ;main.c: 111: LATF = 0x7F;
   203  000A4E  0E7F               	movlw	127
   204  000A50  6E8E               	movwf	3982,c	;volatile
   205  000A52                     l3206:
   206  000A52  B682               	btfsc	3970,3,c	;volatile
   207  000A54  D7FC               	goto	l3204
   208                           
   209                           ;main.c: 112: }
   210                           ;main.c: 113: LATH = 0b00000011;
   211  000A56  0E03               	movlw	3
   212  000A58  6E90               	movwf	3984,c	;volatile
   213                           
   214                           ;main.c: 114: RadioSetSleep(0);
   215  000A5A  0E00               	movlw	0
   216  000A5C  EC37  F007         	call	_RadioSetSleep
   217                           
   218                           ;main.c: 115: }
   219  000A60  D7EE               	goto	l233
   220  000A62                     l234:
   221                           
   222                           ;main.c: 116: else if (!PORTCbits.RC2)
   223  000A62  B482               	btfsc	3970,2,c	;volatile
   224  000A64  D035               	goto	l239
   225                           
   226                           ;main.c: 117: {
   227                           ;main.c: 118: if (PORTCbits.RC3)
   228  000A66  B682               	btfsc	3970,3,c	;volatile
   229  000A68  EF0C  F000         	goto	start
   230                           
   231                           ;main.c: 121: }
   232                           ;main.c: 123: for (i = 0; i < 3; i++)
   233                           
   234                           ;main.c: 119: {
   235                           ;main.c: 120: break;
   236  000A6C  0E00               	movlw	0
   237  000A6E  6E04               	movwf	_i+1,c
   238  000A70  0E00               	movlw	0
   239  000A72  6E03               	movwf	_i,c
   240  000A74  5004               	movf	_i+1,w,c
   241  000A76  0A80               	xorlw	128
   242  000A78  0F80               	addlw	-128
   243  000A7A  0E03               	movlw	3
   244  000A7C  B4D8               	btfsc	status,2,c
   245  000A7E  5C03               	subwf	_i,w,c
   246  000A80  B0D8               	btfsc	status,0,c
   247  000A82  D023               	goto	l3244
   248                           
   249                           ;main.c: 124: {
   250                           ;main.c: 125: LATH = 0b00000010;
   251  000A84  0E02               	movlw	2
   252  000A86  6E90               	movwf	3984,c	;volatile
   253                           
   254                           ;main.c: 126: LATF = 0x9E;
   255  000A88  0E9E               	movlw	158
   256  000A8A  6E8E               	movwf	3982,c	;volatile
   257                           
   258                           ;main.c: 127: Delay10KTCYx(250);
   259  000A8C  0EFA               	movlw	250
   260  000A8E  EC66  F009         	call	_Delay10KTCYx
   261                           
   262                           ;main.c: 128: LATH = 0b00000011;
   263  000A92  0E03               	movlw	3
   264  000A94  6E90               	movwf	3984,c	;volatile
   265                           
   266                           ;main.c: 129: Delay10KTCYx(50);
   267  000A96  0E32               	movlw	50
   268  000A98  EC66  F009         	call	_Delay10KTCYx
   269  000A9C  4A03               	infsnz	_i,f,c
   270  000A9E  2A04               	incf	_i+1,f,c
   271  000AA0  D7E9               	goto	L2
   272  000AA2                     l245:
   273                           
   274                           ;main.c: 134: {
   275                           ;main.c: 137: if (PORTCbits.RC3) {
   276  000AA2  B682               	btfsc	3970,3,c	;volatile
   277  000AA4  D7CC               	goto	l233
   278                           
   279                           ;main.c: 139: }
   280                           ;main.c: 140: ReadData = RadioRXPacket();
   281                           
   282                           ;main.c: 138: break;
   283  000AA6  EC0E  F000         	call	_RadioRXPacket	;wreg free
   284  000AAA  6E06               	movwf	main@ReadData,c
   285                           
   286                           ;main.c: 142: if (Rx.frameNumber != lastFrameNumber)
   287  000AAC  0100               	movlb	0	; () banked
   288  000AAE  5185               	movf	(_Rx+3)& (0+255),w,b
   289  000AB0  1807               	xorwf	main@lastFrameNumber,w,c
   290  000AB2  B4D8               	btfsc	status,2,c
   291  000AB4  D00A               	goto	l3244
   292                           
   293                           ; BSR set to: 0
   294                           ;main.c: 143: {
   295                           ;main.c: 144: lastFrameNumber = Rx.frameNumber;
   296  000AB6  C085  F007         	movff	_Rx+3,main@lastFrameNumber
   297                           
   298                           ; BSR set to: 0
   299                           ;main.c: 145: LATF = (UINT8) * Rx.payload;
   300  000ABA  C09B  FFD9         	movff	_Rx+25,fsr2l
   301  000ABE  C09C  FFDA         	movff	_Rx+26,fsr2h
   302  000AC2  50DF               	movf	indf2,w,c
   303  000AC4  6E8E               	movwf	3982,c	;volatile
   304                           
   305                           ; BSR set to: 0
   306                           ;main.c: 146: RadioDiscardPacket();
   307  000AC6  EC46  F009         	call	_RadioDiscardPacket	;wreg free
   308  000ACA                     l3244:
   309  000ACA  B482               	btfsc	3970,2,c	;volatile
   310  000ACC  D7B8               	goto	l233
   311  000ACE  D7E9               	goto	l245
   312  000AD0                     l239:
   313                           
   314                           ;main.c: 150: else if (PORTCbits.RC2) {
   315  000AD0  A482               	btfss	3970,2,c	;volatile
   316  000AD2  D7B5               	goto	l233
   317                           
   318                           ;main.c: 152: if (PORTCbits.RC3) {
   319  000AD4  B682               	btfsc	3970,3,c	;volatile
   320  000AD6  EF0C  F000         	goto	start
   321                           
   322                           ;main.c: 154: }
   323                           ;main.c: 156: for (i = 0; i < 3; i++) {
   324                           
   325                           ;main.c: 153: break;
   326  000ADA  0E00               	movlw	0
   327  000ADC  6E04               	movwf	_i+1,c
   328  000ADE  0E00               	movlw	0
   329  000AE0  6E03               	movwf	_i,c
   330  000AE2  5004               	movf	_i+1,w,c
   331  000AE4  0A80               	xorlw	128
   332  000AE6  0F80               	addlw	-128
   333  000AE8  0E03               	movlw	3
   334  000AEA  B4D8               	btfsc	status,2,c
   335  000AEC  5C03               	subwf	_i,w,c
   336  000AEE  B0D8               	btfsc	status,0,c
   337  000AF0  D047               	goto	l254
   338                           
   339                           ;main.c: 157: LATH = 0b00000010;
   340  000AF2  0E02               	movlw	2
   341  000AF4  6E90               	movwf	3984,c	;volatile
   342                           
   343                           ;main.c: 158: LATF = 0x0F;
   344  000AF6  0E0F               	movlw	15
   345  000AF8  6E8E               	movwf	3982,c	;volatile
   346                           
   347                           ;main.c: 159: Delay10KTCYx(250);
   348  000AFA  0EFA               	movlw	250
   349  000AFC  EC66  F009         	call	_Delay10KTCYx
   350                           
   351                           ;main.c: 160: LATH = 0b00000011;
   352  000B00  0E03               	movlw	3
   353  000B02  6E90               	movwf	3984,c	;volatile
   354                           
   355                           ;main.c: 161: Delay10KTCYx(50);
   356  000B04  0E32               	movlw	50
   357  000B06  EC66  F009         	call	_Delay10KTCYx
   358  000B0A  4A03               	infsnz	_i,f,c
   359  000B0C  2A04               	incf	_i+1,f,c
   360  000B0E  D7E9               	goto	L3
   361  000B10                     l255:
   362                           
   363                           ;main.c: 166: if (PORTCbits.RC3) {
   364  000B10  B682               	btfsc	3970,3,c	;volatile
   365  000B12  D795               	goto	l233
   366                           
   367                           ;main.c: 168: }
   368                           ;main.c: 170: Tx.payload = (unsigned char*) &payLoad;
   369                           
   370                           ;main.c: 167: break;
   371  000B14  0E00               	movlw	high _payLoad
   372  000B16  6E22               	movwf	_Tx+26,c
   373  000B18  0E25               	movlw	low _payLoad
   374  000B1A  6E21               	movwf	_Tx+25,c
   375                           
   376                           ;main.c: 171: Tx.payloadLength = sizeof (unsigned char);
   377  000B1C  0E01               	movlw	1
   378  000B1E  6E20               	movwf	_Tx+24,c
   379                           
   380                           ;main.c: 172: RadioTXPacket();
   381  000B20  EC2E  F006         	call	_RadioTXPacket	;wreg free
   382                           
   383                           ;main.c: 173: LATF = payLoad;
   384  000B24  C025  FF8E         	movff	_payLoad,3982	;volatile
   385                           
   386                           ;main.c: 174: payLoad++;
   387  000B28  2A25               	incf	_payLoad,f,c
   388                           
   389                           ;main.c: 175: Delay10KTCYx(10);
   390  000B2A  0E0A               	movlw	10
   391  000B2C  EC66  F009         	call	_Delay10KTCYx
   392                           
   393                           ;main.c: 176: Delay10KTCYx(250);
   394  000B30  0EFA               	movlw	250
   395  000B32  EC66  F009         	call	_Delay10KTCYx
   396                           
   397                           ;main.c: 178: if (payLoad > 0x0F) {
   398  000B36  0E0F               	movlw	15
   399  000B38  6425               	cpfsgt	_payLoad,c
   400  000B3A  D01F               	goto	l259
   401                           
   402                           ;main.c: 179: payLoad = 0;
   403  000B3C  0E00               	movlw	0
   404  000B3E  6E25               	movwf	_payLoad,c
   405  000B40  D01C               	goto	l259
   406  000B42                     l260:
   407                           
   408                           ; BSR set to: 0
   409                           ;main.c: 182: if (PORTCbits.RC3) {
   410  000B42  B682               	btfsc	3970,3,c	;volatile
   411  000B44  D01D               	goto	l254
   412                           
   413                           ; BSR set to: 0
   414                           ;main.c: 184: }
   415                           ;main.c: 186: RadioTXPacket();
   416                           
   417                           ; BSR set to: 0
   418                           
   419                           ; BSR set to: 0
   420                           ;main.c: 183: break;
   421  000B46  EC2E  F006         	call	_RadioTXPacket	;wreg free
   422                           
   423                           ;main.c: 188: for (i = 0; i < 4; i++) {
   424  000B4A  0E00               	movlw	0
   425  000B4C  6E04               	movwf	_i+1,c
   426  000B4E  0E00               	movlw	0
   427  000B50  6E03               	movwf	_i,c
   428  000B52  5004               	movf	_i+1,w,c
   429  000B54  0A80               	xorlw	128
   430  000B56  0F80               	addlw	-128
   431  000B58  0E04               	movlw	4
   432  000B5A  B4D8               	btfsc	status,2,c
   433  000B5C  5C03               	subwf	_i,w,c
   434  000B5E  B0D8               	btfsc	status,0,c
   435  000B60  D00C               	goto	l259
   436                           
   437                           ;main.c: 189: LATF = 0x00;
   438  000B62  0E00               	movlw	0
   439  000B64  6E8E               	movwf	3982,c	;volatile
   440                           
   441                           ;main.c: 190: Delay10KTCYx(100);
   442  000B66  0E64               	movlw	100
   443  000B68  EC66  F009         	call	_Delay10KTCYx
   444                           
   445                           ;main.c: 191: LATF = 0xFF;
   446  000B6C  688E               	setf	3982,c	;volatile
   447                           
   448                           ;main.c: 192: Delay10KTCYx(100);
   449  000B6E  0E64               	movlw	100
   450  000B70  EC66  F009         	call	_Delay10KTCYx
   451  000B74  4A03               	infsnz	_i,f,c
   452  000B76  2A04               	incf	_i+1,f,c
   453  000B78  D7EC               	goto	L4
   454  000B7A                     l259:
   455  000B7A  0100               	movlb	0	; () banked
   456  000B7C  B560               	btfsc	_RadioStatus& (0+255),2,b	;volatile
   457  000B7E  D7E1               	goto	l260
   458  000B80                     l254:
   459  000B80  A482               	btfss	3970,2,c	;volatile
   460  000B82  D75D               	goto	l233
   461  000B84  D7C5               	goto	l255
   462  000B86                     __end_of_main:
   463                           	opt stack 0
   464                           indf2	equ	0xFDF
   465                           fsr2h	equ	0xFDA
   466                           fsr2l	equ	0xFD9
   467                           status	equ	0xFD8
   468                           
   469                           	psect	cinit
   470  001214                     __pcinit:
   471                           	opt stack 0
   472  001214                     start_initialization:
   473                           	opt stack 0
   474  001214                     __initialization:
   475                           	opt stack 0
   476                           
   477                           ; Clear objects allocated to BANK0 (63 bytes)
   478  001214  EE00  F060         	lfsr	0,__pbssBANK0
   479  001218  0E3F               	movlw	63
   480  00121A                     clear_0:
   481  00121A  6AEE               	clrf	postinc0,c
   482  00121C  06E8               	decf	wreg,f,c
   483  00121E  E1FD               	bnz	clear_0
   484                           
   485                           ; Clear objects allocated to BANK1 (103 bytes)
   486  001220  EE01  F090         	lfsr	0,__pbssBANK1
   487  001224  0E67               	movlw	103
   488  001226                     clear_1:
   489  001226  6AEE               	clrf	postinc0,c
   490  001228  06E8               	decf	wreg,f,c
   491  00122A  E1FD               	bnz	clear_1
   492                           
   493                           ; Clear objects allocated to COMRAM (37 bytes)
   494  00122C  EE00  F001         	lfsr	0,__pbssCOMRAM
   495  001230  0E25               	movlw	37
   496  001232                     clear_2:
   497  001232  6AEE               	clrf	postinc0,c
   498  001234  06E8               	decf	wreg,f,c
   499  001236  E1FD               	bnz	clear_2
   500  001238                     end_of_initialization:
   501                           	opt stack 0
   502  001238                     __end_of__initialization:
   503                           	opt stack 0
   504  001238  0100               	movlb	0
   505  00123A  EFFD  F004         	goto	_main	;jump to C main() function
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           indf2	equ	0xFDF
   509                           fsr2h	equ	0xFDA
   510                           fsr2l	equ	0xFD9
   511                           status	equ	0xFD8
   512                           
   513                           	psect	bssCOMRAM
   514  000001                     __pbssCOMRAM:
   515                           	opt stack 0
   516  000001                     _SPI_Brg:
   517                           	opt stack 0
   518  000001                     	ds	2
   519  000003                     _i:
   520                           	opt stack 0
   521  000003                     	ds	2
   522  000005                     _Tempbyte:
   523                           	opt stack 0
   524  000005                     	ds	1
   525  000006                     main@ReadData:
   526                           	opt stack 0
   527  000006                     	ds	1
   528  000007                     main@lastFrameNumber:
   529                           	opt stack 0
   530  000007                     	ds	1
   531  000008                     _Tx:
   532                           	opt stack 0
   533  000008                     	ds	29
   534  000025                     _payLoad:
   535                           	opt stack 0
   536  000025                     	ds	1
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           indf2	equ	0xFDF
   540                           fsr2h	equ	0xFDA
   541                           fsr2l	equ	0xFD9
   542                           status	equ	0xFD8
   543                           
   544                           	psect	bssBANK0
   545  000060                     __pbssBANK0:
   546                           	opt stack 0
   547  000060                     _RadioStatus:
   548                           	opt stack 0
   549  000060                     	ds	34
   550  000082                     _Rx:
   551                           	opt stack 0
   552  000082                     	ds	29
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           indf2	equ	0xFDF
   556                           fsr2h	equ	0xFDA
   557                           fsr2l	equ	0xFD9
   558                           status	equ	0xFD8
   559                           
   560                           	psect	bssBANK1
   561  000190                     __pbssBANK1:
   562                           	opt stack 0
   563  000190                     _txPayload:
   564                           	opt stack 0
   565  000190                     	ds	103
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           indf2	equ	0xFDF
   569                           fsr2h	equ	0xFDA
   570                           fsr2l	equ	0xFD9
   571                           status	equ	0xFD8
   572                           
   573                           	psect	cstackBANK0
   574  00009F                     __pcstackBANK0:
   575                           	opt stack 0
   576  00009F                     ??_Delay10KTCYx:
   577  00009F                     ?_readBytes:
   578                           	opt stack 0
   579  00009F                     OpenSPI2@bus_mode:
   580                           	opt stack 0
   581  00009F                     ReadSPI2@TempVar:
   582                           	opt stack 0
   583  00009F                     WriteSPI2@TempVar:
   584                           	opt stack 0
   585  00009F                     readBytes@dstPtr:
   586                           	opt stack 0
   587  00009F                     memset@p1:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x0
   591  00009F                     	ds	1
   592  0000A0                     OpenSPI2@smp_phase:
   593                           	opt stack 0
   594  0000A0                     WriteSPI2@data_out:
   595                           	opt stack 0
   596  0000A0                     Delay10KTCYx@unit:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x1
   600  0000A0                     	ds	1
   601  0000A1                     spiPut@v:
   602                           	opt stack 0
   603  0000A1                     SpiTake@v:
   604                           	opt stack 0
   605  0000A1                     OpenSPI2@sync_mode:
   606                           	opt stack 0
   607  0000A1                     readBytes@srcPtr:
   608                           	opt stack 0
   609  0000A1                     memset@c:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x2
   613  0000A1                     	ds	1
   614  0000A2                     SpiTake@val:
   615                           	opt stack 0
   616  0000A2                     lowWrite@value:
   617                           	opt stack 0
   618  0000A2                     highWrite@address:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x3
   622  0000A2                     	ds	1
   623  0000A3                     lowRead@address:
   624                           	opt stack 0
   625  0000A3                     lowWrite@address:
   626                           	opt stack 0
   627  0000A3                     readBytes@count:
   628                           	opt stack 0
   629  0000A3                     highRead@address:
   630                           	opt stack 0
   631  0000A3                     memset@n:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x4
   635  0000A3                     	ds	1
   636  0000A4                     highWrite@value:
   637                           	opt stack 0
   638  0000A4                     lowRead@toReturn:
   639                           	opt stack 0
   640  0000A4                     lowWrite@tmpRFIE:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x5
   644  0000A4                     	ds	1
   645  0000A5                     ??_highRead:
   646  0000A5                     ??_highWrite:
   647  0000A5                     lowRead@tmpRFIE:
   648                           	opt stack 0
   649  0000A5                     RadioSetAddress@shortAddress:
   650                           	opt stack 0
   651  0000A5                     memset@p:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x6
   655  0000A5                     	ds	2
   656  0000A7                     highRead@toReturn:
   657                           	opt stack 0
   658  0000A7                     highWrite@tmpRFIE:
   659                           	opt stack 0
   660  0000A7                     RadioSetAddress@longAddress1:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x8
   664  0000A7                     	ds	1
   665  0000A8                     highRead@tmpRFIE:
   666                           	opt stack 0
   667  0000A8                     RadioSetChannel@channel:
   668                           	opt stack 0
   669  0000A8                     toTXfifo@reg:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x9
   673  0000A8                     	ds	2
   674  0000AA                     toTXfifo@source:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0xB
   678  0000AA                     	ds	1
   679  0000AB                     RadioSetAddress@longAddress2:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0xC
   683  0000AB                     	ds	1
   684  0000AC                     toTXfifo@count:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0xD
   688  0000AC                     	ds	1
   689  0000AD                     ??_RadioTXRaw:
   690                           
   691                           ; 0 bytes @ 0xE
   692  0000AD                     	ds	1
   693  0000AE                     RadioTXRaw@wReg:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0xF
   697  0000AE                     	ds	1
   698  0000AF                     RadioSetAddress@panID:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x10
   702  0000AF                     	ds	2
   703  0000B1                     RadioSetAddress@i:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x12
   707  0000B1                     	ds	1
   708  0000B2                     ??_initMRF24J40:
   709                           
   710                           ; 0 bytes @ 0x13
   711  0000B2                     	ds	1
   712  0000B3                     initMRF24J40@i:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x14
   716  0000B3                     	ds	1
   717  0000B4                     ??_RadioRXPacket:
   718  0000B4                     RadioInit@radio:
   719                           	opt stack 0
   720  0000B4                     RadioSetSleep@powerState:
   721                           	opt stack 0
   722  0000B4                     RadioTXPacket@i:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x15
   726  0000B4                     	ds	2
   727  0000B6                     RadioRXPacket@i:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x17
   731  0000B6                     	ds	2
   732  0000B8                     RadioRXPacket@readPoint:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x19
   736  0000B8                     	ds	2
   737  0000BA                     postinc0	equ	0xFEE
   738                           wreg	equ	0xFE8
   739                           indf2	equ	0xFDF
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8
   743                           
   744                           ; 0 bytes @ 0x1B
   745                           
   746                           	psect	cstackCOMRAM
   747  000026                     __pcstackCOMRAM:
   748                           	opt stack 0
   749  000026                     i2ReadSPI2@TempVar:
   750                           	opt stack 0
   751  000026                     i2WriteSPI2@TempVar:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x0
   755  000026                     	ds	1
   756  000027                     i2WriteSPI2@data_out:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x1
   760  000027                     	ds	1
   761  000028                     i2spiPut@v:
   762                           	opt stack 0
   763  000028                     i2SpiTake@v:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x2
   767  000028                     	ds	1
   768  000029                     i2SpiTake@val:
   769                           	opt stack 0
   770  000029                     i2lowWrite@value:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x3
   774  000029                     	ds	1
   775  00002A                     i2lowRead@address:
   776                           	opt stack 0
   777  00002A                     i2lowWrite@address:
   778                           	opt stack 0
   779  00002A                     i2highRead@address:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x4
   783  00002A                     	ds	1
   784  00002B                     i2lowRead@toReturn:
   785                           	opt stack 0
   786  00002B                     i2lowWrite@tmpRFIE:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x5
   790  00002B                     	ds	1
   791  00002C                     ??i2_highRead:
   792  00002C                     i2lowRead@tmpRFIE:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x6
   796  00002C                     	ds	2
   797  00002E                     i2highRead@toReturn:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x8
   801  00002E                     	ds	1
   802  00002F                     i2highRead@tmpRFIE:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x9
   806  00002F                     	ds	1
   807  000030                     ??_ISR:
   808                           
   809                           ; 0 bytes @ 0xA
   810  000030                     	ds	16
   811  000040                     ISR@iflags:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x1A
   815  000040                     	ds	2
   816  000042                     ISR@TXSTAT:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x1C
   820  000042                     	ds	1
   821  000043                     ISR@bytes:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x1D
   825  000043                     	ds	1
   826  000044                     ISR@i:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x1E
   830  000044                     	ds	1
   831                           postinc0	equ	0xFEE
   832                           wreg	equ	0xFE8
   833                           indf2	equ	0xFDF
   834                           fsr2h	equ	0xFDA
   835                           fsr2l	equ	0xFD9
   836                           status	equ	0xFD8
   837                           
   838 ;; *************** function _RadioTXPacket *****************
   839 ;; Defined at:
   840 ;;		line 407 in file "MRF24J40c.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  i               2   21[BANK0 ] unsigned int 
   845 ;; Return value:  Size  Location     Type
   846 ;;		None               void
   847 ;; Registers used:
   848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;Total ram usage:        2 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    9
   861 ;; This function calls:
   862 ;;		_RadioTXRaw
   863 ;;		_initMRF24J40
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text1
   870  000C5C                     __ptext1:
   871                           	opt stack 0
   872  000C5C                     _RadioTXPacket:
   873                           	opt stack 21
   874                           
   875                           ;MRF24J40c.c: 408: unsigned int i = 0;
   876                           
   877                           ;incstack = 0
   878  000C5C  0E00               	movlw	0
   879  000C5E  0100               	movlb	0	; () banked
   880  000C60  6FB5               	movwf	(RadioTXPacket@i+1)& (0+255),b
   881  000C62  0E00               	movlw	0
   882  000C64  0100               	movlb	0	; () banked
   883  000C66  6FB4               	movwf	RadioTXPacket@i& (0+255),b
   884                           
   885                           ; BSR set to: 0
   886                           ;MRF24J40c.c: 409: if (Tx.srcAddrMode == (2))
   887  000C68  380A               	swapf	_Tx+2,w,c
   888  000C6A  32E8               	rrcf	wreg,f,c
   889  000C6C  32E8               	rrcf	wreg,f,c
   890  000C6E  0B03               	andlw	3
   891  000C70  0A02               	xorlw	2
   892  000C72  A4D8               	btfss	status,2,c
   893  000C74  D009               	goto	l2990
   894                           
   895                           ; BSR set to: 0
   896                           ;MRF24J40c.c: 410: Tx.srcAddr1 = RadioStatus.MyShortAddress;
   897  000C76  0100               	movlb	0	; () banked
   898  000C78  C066  F018         	movff	_RadioStatus+6,_Tx+16	;volatile
   899  000C7C  0100               	movlb	0	; () banked
   900  000C7E  C067  F019         	movff	_RadioStatus+7,_Tx+17	;volatile
   901  000C82  6A1A               	clrf	_Tx+18,c
   902  000C84  6A1B               	clrf	_Tx+19,c
   903  000C86  D017               	goto	l126
   904  000C88                     l2990:
   905                           
   906                           ; BSR set to: 0
   907                           ;MRF24J40c.c: 411: else if (Tx.srcAddrMode == (3)) {
   908  000C88  380A               	swapf	_Tx+2,w,c
   909  000C8A  32E8               	rrcf	wreg,f,c
   910  000C8C  32E8               	rrcf	wreg,f,c
   911  000C8E  0B03               	andlw	3
   912  000C90  0A03               	xorlw	3
   913  000C92  A4D8               	btfss	status,2,c
   914  000C94  D010               	goto	l126
   915                           
   916                           ; BSR set to: 0
   917                           ;MRF24J40c.c: 412: Tx.srcAddr1 = RadioStatus.MyLongAddress1;
   918  000C96  C068  F018         	movff	_RadioStatus+8,_Tx+16	;volatile
   919  000C9A  C069  F019         	movff	_RadioStatus+9,_Tx+17	;volatile
   920  000C9E  C06A  F01A         	movff	_RadioStatus+10,_Tx+18	;volatile
   921  000CA2  C06B  F01B         	movff	_RadioStatus+11,_Tx+19	;volatile
   922                           
   923                           ;MRF24J40c.c: 413: Tx.srcAddr2 = RadioStatus.MyLongAddress2;
   924  000CA6  C06C  F01C         	movff	_RadioStatus+12,_Tx+20	;volatile
   925  000CAA  C06D  F01D         	movff	_RadioStatus+13,_Tx+21	;volatile
   926  000CAE  C06E  F01E         	movff	_RadioStatus+14,_Tx+22	;volatile
   927  000CB2  C06F  F01F         	movff	_RadioStatus+15,_Tx+23	;volatile
   928  000CB6                     l126:
   929                           
   930                           ; BSR set to: 0
   931                           ;MRF24J40c.c: 414: }
   932                           ;MRF24J40c.c: 416: Tx.frameNumber = RadioStatus.IEEESeqNum++;
   933  000CB6  C064  F00B         	movff	_RadioStatus+4,_Tx+3	;volatile
   934                           
   935                           ; BSR set to: 0
   936  000CBA  0100               	movlb	0	; () banked
   937  000CBC  2B64               	incf	(_RadioStatus+4)& (0+255),f,b	;volatile
   938                           
   939                           ;MRF24J40c.c: 419: while (RadioStatus.TX_BUSY) {
   940  000CBE  D01A               	goto	l128
   941  000CC0                     l2996:
   942                           
   943                           ; BSR set to: 0
   944                           ;MRF24J40c.c: 421: i = i + 1;
   945  000CC0  0E01               	movlw	1
   946  000CC2  0100               	movlb	0	; () banked
   947  000CC4  25B4               	addwf	RadioTXPacket@i& (0+255),w,b
   948  000CC6  0100               	movlb	0	; () banked
   949  000CC8  6FB4               	movwf	RadioTXPacket@i& (0+255),b
   950  000CCA  0E00               	movlw	0
   951  000CCC  0100               	movlb	0	; () banked
   952  000CCE  21B5               	addwfc	(RadioTXPacket@i+1)& (0+255),w,b
   953  000CD0  0100               	movlb	0	; () banked
   954  000CD2  6FB5               	movwf	(RadioTXPacket@i+1)& (0+255),b
   955                           
   956                           ;MRF24J40c.c: 422: if (i >= 0xC000)
   957  000CD4  0E00               	movlw	0
   958  000CD6  0100               	movlb	0	; () banked
   959  000CD8  5DB4               	subwf	RadioTXPacket@i& (0+255),w,b
   960  000CDA  0EC0               	movlw	192
   961  000CDC  0100               	movlb	0	; () banked
   962  000CDE  59B5               	subwfb	(RadioTXPacket@i+1)& (0+255),w,b
   963  000CE0  A0D8               	btfss	status,0,c
   964  000CE2  D008               	goto	l128
   965                           
   966                           ; BSR set to: 0
   967                           ;MRF24J40c.c: 423: {
   968                           ;MRF24J40c.c: 424: __nop();
   969  000CE4  F000               	nop	
   970                           
   971                           ;MRF24J40c.c: 425: __nop();
   972  000CE6  F000               	nop	
   973                           
   974                           ;MRF24J40c.c: 426: __nop();
   975  000CE8  F000               	nop	
   976                           
   977                           ;MRF24J40c.c: 427: __nop();
   978  000CEA  F000               	nop	
   979                           
   980                           ;MRF24J40c.c: 428: __nop();
   981  000CEC  F000               	nop	
   982                           
   983                           ;MRF24J40c.c: 429: initMRF24J40();
   984  000CEE  EC16  F003         	call	_initMRF24J40	;wreg free
   985                           
   986                           ;MRF24J40c.c: 430: break;
   987  000CF2  D003               	goto	l3002
   988  000CF4                     l128:
   989  000CF4  0100               	movlb	0	; () banked
   990  000CF6  B160               	btfsc	_RadioStatus& (0+255),0,b	;volatile
   991  000CF8  D7E3               	goto	l2996
   992  000CFA                     l3002:
   993                           
   994                           ;MRF24J40c.c: 431: }
   995                           ;MRF24J40c.c: 432: }
   996                           ;MRF24J40c.c: 437: RadioTXRaw();
   997  000CFA  ECF2  F001         	call	_RadioTXRaw	;wreg free
   998  000CFE  0012               	return	
   999  000D00                     __end_of_RadioTXPacket:
  1000                           	opt stack 0
  1001                           postinc0	equ	0xFEE
  1002                           wreg	equ	0xFE8
  1003                           indf2	equ	0xFDF
  1004                           fsr2h	equ	0xFDA
  1005                           fsr2l	equ	0xFD9
  1006                           status	equ	0xFD8
  1007                           
  1008 ;; *************** function _RadioTXRaw *****************
  1009 ;; Defined at:
  1010 ;;		line 356 in file "MRF24J40c.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  wReg            1   15[BANK0 ] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;		None               void
  1017 ;; Registers used:
  1018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;Total ram usage:        2 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    8
  1031 ;; This function calls:
  1032 ;;		_highWrite
  1033 ;;		_lowWrite
  1034 ;;		_toTXfifo
  1035 ;; This function is called by:
  1036 ;;		_RadioTXPacket
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text2
  1041  0003E4                     __ptext2:
  1042                           	opt stack 0
  1043  0003E4                     _RadioTXRaw:
  1044                           	opt stack 21
  1045                           
  1046                           ;MRF24J40c.c: 357: UINT8 wReg;
  1047                           ;MRF24J40c.c: 359: wReg = toTXfifo(2, ((UINT8*)&(Tx)) + 1, 2 + 1);
  1048                           
  1049                           ;incstack = 0
  1050  0003E4  0E00               	movlw	0
  1051  0003E6  0100               	movlb	0	; () banked
  1052  0003E8  6FA9               	movwf	(toTXfifo@reg+1)& (0+255),b
  1053  0003EA  0E02               	movlw	2
  1054  0003EC  0100               	movlb	0	; () banked
  1055  0003EE  6FA8               	movwf	toTXfifo@reg& (0+255),b
  1056  0003F0  0E00               	movlw	high (_Tx+1)
  1057  0003F2  0100               	movlb	0	; () banked
  1058  0003F4  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1059  0003F6  0E09               	movlw	low (_Tx+1)
  1060  0003F8  0100               	movlb	0	; () banked
  1061  0003FA  6FAA               	movwf	toTXfifo@source& (0+255),b
  1062  0003FC  0E03               	movlw	3
  1063  0003FE  0100               	movlb	0	; () banked
  1064  000400  6FAC               	movwf	toTXfifo@count& (0+255),b
  1065  000402  EC6D  F008         	call	_toTXfifo	;wreg free
  1066  000406  0100               	movlb	0	; () banked
  1067  000408  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;MRF24J40c.c: 361: if (Tx.dstAddrMode == (2))
  1071  00040A  300A               	rrcf	_Tx+2,w,c
  1072  00040C  32E8               	rrcf	wreg,f,c
  1073  00040E  0B03               	andlw	3
  1074  000410  0A02               	xorlw	2
  1075  000412  A4D8               	btfss	status,2,c
  1076  000414  D023               	goto	l2890
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;MRF24J40c.c: 362: {
  1080                           ;MRF24J40c.c: 363: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.dstPANID)), 2);
  1081  000416  0100               	movlb	0	; () banked
  1082  000418  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1083  00041C  0100               	movlb	0	; () banked
  1084  00041E  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1085  000420  0E00               	movlw	high (_Tx+4)
  1086  000422  0100               	movlb	0	; () banked
  1087  000424  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1088  000426  0E0C               	movlw	low (_Tx+4)
  1089  000428  0100               	movlb	0	; () banked
  1090  00042A  6FAA               	movwf	toTXfifo@source& (0+255),b
  1091  00042C  0E02               	movlw	2
  1092  00042E  0100               	movlb	0	; () banked
  1093  000430  6FAC               	movwf	toTXfifo@count& (0+255),b
  1094  000432  EC6D  F008         	call	_toTXfifo	;wreg free
  1095  000436  0100               	movlb	0	; () banked
  1096  000438  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1097                           
  1098                           ;MRF24J40c.c: 364: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.dstAddr1)), 2);
  1099  00043A  0100               	movlb	0	; () banked
  1100  00043C  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1101  000440  0100               	movlb	0	; () banked
  1102  000442  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1103  000444  0E00               	movlw	high (_Tx+6)
  1104  000446  0100               	movlb	0	; () banked
  1105  000448  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1106  00044A  0E0E               	movlw	low (_Tx+6)
  1107  00044C  0100               	movlb	0	; () banked
  1108  00044E  6FAA               	movwf	toTXfifo@source& (0+255),b
  1109  000450  0E02               	movlw	2
  1110  000452  0100               	movlb	0	; () banked
  1111  000454  6FAC               	movwf	toTXfifo@count& (0+255),b
  1112  000456  EC6D  F008         	call	_toTXfifo	;wreg free
  1113  00045A  D03A               	goto	L5
  1114  00045C                     l2890:
  1115                           
  1116                           ; BSR set to: 0
  1117  00045C  300A               	rrcf	_Tx+2,w,c
  1118  00045E  32E8               	rrcf	wreg,f,c
  1119  000460  0B03               	andlw	3
  1120  000462  0A03               	xorlw	3
  1121  000464  A4D8               	btfss	status,2,c
  1122  000466  D036               	goto	l2894
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;MRF24J40c.c: 366: {
  1126                           ;MRF24J40c.c: 367: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.dstPANID)), 2);
  1127  000468  0100               	movlb	0	; () banked
  1128  00046A  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1129  00046E  0100               	movlb	0	; () banked
  1130  000470  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1131  000472  0E00               	movlw	high (_Tx+4)
  1132  000474  0100               	movlb	0	; () banked
  1133  000476  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1134  000478  0E0C               	movlw	low (_Tx+4)
  1135  00047A  0100               	movlb	0	; () banked
  1136  00047C  6FAA               	movwf	toTXfifo@source& (0+255),b
  1137  00047E  0E02               	movlw	2
  1138  000480  0100               	movlb	0	; () banked
  1139  000482  6FAC               	movwf	toTXfifo@count& (0+255),b
  1140  000484  EC6D  F008         	call	_toTXfifo	;wreg free
  1141  000488  0100               	movlb	0	; () banked
  1142  00048A  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1143                           
  1144                           ;MRF24J40c.c: 368: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.dstAddr1)), 4);
  1145  00048C  0100               	movlb	0	; () banked
  1146  00048E  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1147  000492  0100               	movlb	0	; () banked
  1148  000494  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1149  000496  0E00               	movlw	high (_Tx+6)
  1150  000498  0100               	movlb	0	; () banked
  1151  00049A  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1152  00049C  0E0E               	movlw	low (_Tx+6)
  1153  00049E  0100               	movlb	0	; () banked
  1154  0004A0  6FAA               	movwf	toTXfifo@source& (0+255),b
  1155  0004A2  0E04               	movlw	4
  1156  0004A4  0100               	movlb	0	; () banked
  1157  0004A6  6FAC               	movwf	toTXfifo@count& (0+255),b
  1158  0004A8  EC6D  F008         	call	_toTXfifo	;wreg free
  1159  0004AC  0100               	movlb	0	; () banked
  1160  0004AE  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1161                           
  1162                           ;MRF24J40c.c: 369: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.dstAddr2)), 4);
  1163  0004B0  0100               	movlb	0	; () banked
  1164  0004B2  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1165  0004B6  0100               	movlb	0	; () banked
  1166  0004B8  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1167  0004BA  0E00               	movlw	high (_Tx+10)
  1168  0004BC  0100               	movlb	0	; () banked
  1169  0004BE  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1170  0004C0  0E12               	movlw	low (_Tx+10)
  1171  0004C2  0100               	movlb	0	; () banked
  1172  0004C4  6FAA               	movwf	toTXfifo@source& (0+255),b
  1173  0004C6  0E04               	movlw	4
  1174  0004C8  0100               	movlb	0	; () banked
  1175  0004CA  6FAC               	movwf	toTXfifo@count& (0+255),b
  1176  0004CC  EC6D  F008         	call	_toTXfifo	;wreg free
  1177  0004D0                     L5:
  1178  0004D0  0100               	movlb	0	; () banked
  1179  0004D2  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1180  0004D4                     l2894:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;MRF24J40c.c: 370: }
  1184                           ;MRF24J40c.c: 374: if (Tx.srcAddrMode != (0) &&
  1185                           ;MRF24J40c.c: 375: Tx.dstAddrMode != (0) &&
  1186                           ;MRF24J40c.c: 376: !Tx.panIDcomp) {
  1187  0004D4  380A               	swapf	_Tx+2,w,c
  1188  0004D6  32E8               	rrcf	wreg,f,c
  1189  0004D8  32E8               	rrcf	wreg,f,c
  1190  0004DA  0B03               	andlw	3
  1191  0004DC  0900               	iorlw	0
  1192  0004DE  B4D8               	btfsc	status,2,c
  1193  0004E0  D019               	goto	l2902
  1194                           
  1195                           ; BSR set to: 0
  1196  0004E2  300A               	rrcf	_Tx+2,w,c
  1197  0004E4  32E8               	rrcf	wreg,f,c
  1198  0004E6  0B03               	andlw	3
  1199  0004E8  0900               	iorlw	0
  1200  0004EA  A4D8               	btfss	status,2,c
  1201                           
  1202                           ; BSR set to: 0
  1203  0004EC  BC09               	btfsc	_Tx+1,6,c
  1204  0004EE  D012               	goto	l2902
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;MRF24J40c.c: 377: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.srcPANID)), 2);
  1208  0004F0  0100               	movlb	0	; () banked
  1209  0004F2  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1210  0004F6  0100               	movlb	0	; () banked
  1211  0004F8  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1212  0004FA  0E00               	movlw	high (_Tx+14)
  1213  0004FC  0100               	movlb	0	; () banked
  1214  0004FE  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1215  000500  0E16               	movlw	low (_Tx+14)
  1216  000502  0100               	movlb	0	; () banked
  1217  000504  6FAA               	movwf	toTXfifo@source& (0+255),b
  1218  000506  0E02               	movlw	2
  1219  000508  0100               	movlb	0	; () banked
  1220  00050A  6FAC               	movwf	toTXfifo@count& (0+255),b
  1221  00050C  EC6D  F008         	call	_toTXfifo	;wreg free
  1222  000510  0100               	movlb	0	; () banked
  1223  000512  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1224  000514                     l2902:
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;MRF24J40c.c: 378: }
  1228                           ;MRF24J40c.c: 380: if (Tx.srcAddrMode == (2))
  1229  000514  380A               	swapf	_Tx+2,w,c
  1230  000516  32E8               	rrcf	wreg,f,c
  1231  000518  32E8               	rrcf	wreg,f,c
  1232  00051A  0B03               	andlw	3
  1233  00051C  0A02               	xorlw	2
  1234  00051E  A4D8               	btfss	status,2,c
  1235  000520  D011               	goto	l2906
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;MRF24J40c.c: 381: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.srcAddr1)), 2);
  1239  000522  0100               	movlb	0	; () banked
  1240  000524  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1241  000528  0100               	movlb	0	; () banked
  1242  00052A  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1243  00052C  0E00               	movlw	high (_Tx+16)
  1244  00052E  0100               	movlb	0	; () banked
  1245  000530  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1246  000532  0E18               	movlw	low (_Tx+16)
  1247  000534  0100               	movlb	0	; () banked
  1248  000536  6FAA               	movwf	toTXfifo@source& (0+255),b
  1249  000538  0E02               	movlw	2
  1250  00053A  0100               	movlb	0	; () banked
  1251  00053C  6FAC               	movwf	toTXfifo@count& (0+255),b
  1252  00053E  EC6D  F008         	call	_toTXfifo	;wreg free
  1253  000542  D029               	goto	L6
  1254  000544                     l2906:
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;MRF24J40c.c: 382: else if (Tx.srcAddrMode == (3))
  1258  000544  380A               	swapf	_Tx+2,w,c
  1259  000546  32E8               	rrcf	wreg,f,c
  1260  000548  32E8               	rrcf	wreg,f,c
  1261  00054A  0B03               	andlw	3
  1262  00054C  0A03               	xorlw	3
  1263  00054E  A4D8               	btfss	status,2,c
  1264  000550  D024               	goto	l2910
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;MRF24J40c.c: 383: {
  1268                           ;MRF24J40c.c: 384: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.srcAddr1)), 4);
  1269  000552  0100               	movlb	0	; () banked
  1270  000554  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1271  000558  0100               	movlb	0	; () banked
  1272  00055A  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1273  00055C  0E00               	movlw	high (_Tx+16)
  1274  00055E  0100               	movlb	0	; () banked
  1275  000560  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1276  000562  0E18               	movlw	low (_Tx+16)
  1277  000564  0100               	movlb	0	; () banked
  1278  000566  6FAA               	movwf	toTXfifo@source& (0+255),b
  1279  000568  0E04               	movlw	4
  1280  00056A  0100               	movlb	0	; () banked
  1281  00056C  6FAC               	movwf	toTXfifo@count& (0+255),b
  1282  00056E  EC6D  F008         	call	_toTXfifo	;wreg free
  1283  000572  0100               	movlb	0	; () banked
  1284  000574  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1285                           
  1286                           ;MRF24J40c.c: 385: wReg = toTXfifo(wReg, ((UINT8*)&(Tx.srcAddr2)), 4);
  1287  000576  0100               	movlb	0	; () banked
  1288  000578  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1289  00057C  0100               	movlb	0	; () banked
  1290  00057E  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1291  000580  0E00               	movlw	high (_Tx+20)
  1292  000582  0100               	movlb	0	; () banked
  1293  000584  6FAB               	movwf	(toTXfifo@source+1)& (0+255),b
  1294  000586  0E1C               	movlw	low (_Tx+20)
  1295  000588  0100               	movlb	0	; () banked
  1296  00058A  6FAA               	movwf	toTXfifo@source& (0+255),b
  1297  00058C  0E04               	movlw	4
  1298  00058E  0100               	movlb	0	; () banked
  1299  000590  6FAC               	movwf	toTXfifo@count& (0+255),b
  1300  000592  EC6D  F008         	call	_toTXfifo	;wreg free
  1301  000596                     L6:
  1302  000596  0100               	movlb	0	; () banked
  1303  000598  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1304  00059A                     l2910:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;MRF24J40c.c: 386: }
  1308                           ;MRF24J40c.c: 390: highWrite(0, wReg - 2);
  1309  00059A  0E00               	movlw	0
  1310  00059C  0100               	movlb	0	; () banked
  1311  00059E  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  1312  0005A0  0E00               	movlw	0
  1313  0005A2  0100               	movlb	0	; () banked
  1314  0005A4  6FA2               	movwf	highWrite@address& (0+255),b
  1315  0005A6  0100               	movlb	0	; () banked
  1316  0005A8  51AE               	movf	RadioTXRaw@wReg& (0+255),w,b
  1317  0005AA  0FFE               	addlw	254
  1318  0005AC  0100               	movlb	0	; () banked
  1319  0005AE  6FA4               	movwf	highWrite@value& (0+255),b
  1320  0005B0  ECC5  F006         	call	_highWrite	;wreg free
  1321                           
  1322                           ;MRF24J40c.c: 391: wReg = toTXfifo(wReg, Tx.payload, Tx.payloadLength);
  1323  0005B4  0100               	movlb	0	; () banked
  1324  0005B6  C0AE  F0A8         	movff	RadioTXRaw@wReg,toTXfifo@reg
  1325  0005BA  0100               	movlb	0	; () banked
  1326  0005BC  6BA9               	clrf	(toTXfifo@reg+1)& (0+255),b
  1327  0005BE  0100               	movlb	0	; () banked
  1328  0005C0  C022  F0AB         	movff	_Tx+26,toTXfifo@source+1
  1329  0005C4  0100               	movlb	0	; () banked
  1330  0005C6  C021  F0AA         	movff	_Tx+25,toTXfifo@source
  1331  0005CA  C020  F0AC         	movff	_Tx+24,toTXfifo@count
  1332  0005CE  EC6D  F008         	call	_toTXfifo	;wreg free
  1333  0005D2  0100               	movlb	0	; () banked
  1334  0005D4  6FAE               	movwf	RadioTXRaw@wReg& (0+255),b
  1335                           
  1336                           ;MRF24J40c.c: 392: highWrite(1, wReg - 2);
  1337  0005D6  0E00               	movlw	0
  1338  0005D8  0100               	movlb	0	; () banked
  1339  0005DA  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  1340  0005DC  0E01               	movlw	1
  1341  0005DE  0100               	movlb	0	; () banked
  1342  0005E0  6FA2               	movwf	highWrite@address& (0+255),b
  1343  0005E2  0100               	movlb	0	; () banked
  1344  0005E4  51AE               	movf	RadioTXRaw@wReg& (0+255),w,b
  1345  0005E6  0FFE               	addlw	254
  1346  0005E8  0100               	movlb	0	; () banked
  1347  0005EA  6FA4               	movwf	highWrite@value& (0+255),b
  1348  0005EC  ECC5  F006         	call	_highWrite	;wreg free
  1349                           
  1350                           ;MRF24J40c.c: 394: RadioStatus.TX_BUSY = 1;
  1351  0005F0  0100               	movlb	0	; () banked
  1352  0005F2  8160               	bsf	_RadioStatus& (0+255),0,b	;volatile
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;MRF24J40c.c: 395: RadioStatus.TX_PENDING_ACK = Tx.ackRequest;
  1356  0005F4  AA09               	btfss	_Tx+1,5,c
  1357  0005F6  D003               	bra	u2295
  1358  0005F8  0100               	movlb	0	; () banked
  1359  0005FA  8360               	bsf	_RadioStatus& (0+255),1,b	;volatile
  1360  0005FC  D002               	bra	u2297
  1361  0005FE                     u2295:
  1362  0005FE  0100               	movlb	0	; () banked
  1363  000600  9360               	bcf	_RadioStatus& (0+255),1,b	;volatile
  1364  000602                     u2297:
  1365                           
  1366                           ;MRF24J40c.c: 396: lowWrite((0x37), Tx.ackRequest << 2 | 1);
  1367  000602  AA09               	btfss	_Tx+1,5,c
  1368  000604  D004               	goto	u2300
  1369  000606  0100               	movlb	0	; () banked
  1370  000608  6BAD               	clrf	??_RadioTXRaw& (0+255),b
  1371  00060A  2BAD               	incf	??_RadioTXRaw& (0+255),f,b
  1372  00060C  D002               	goto	u2308
  1373  00060E                     u2300:
  1374  00060E  0100               	movlb	0	; () banked
  1375  000610  6BAD               	clrf	??_RadioTXRaw& (0+255),b
  1376  000612                     u2308:
  1377  000612  0100               	movlb	0	; () banked
  1378  000614  90D8               	bcf	status,0,c
  1379  000616  37AD               	rlcf	??_RadioTXRaw& (0+255),f,b
  1380  000618  0100               	movlb	0	; () banked
  1381  00061A  90D8               	bcf	status,0,c
  1382  00061C  35AD               	rlcf	??_RadioTXRaw& (0+255),w,b
  1383  00061E  0901               	iorlw	1
  1384  000620  0100               	movlb	0	; () banked
  1385  000622  6FA2               	movwf	lowWrite@value& (0+255),b
  1386  000624  0E37               	movlw	55
  1387  000626  ECDA  F008         	call	_lowWrite
  1388  00062A  0012               	return	
  1389  00062C                     __end_of_RadioTXRaw:
  1390                           	opt stack 0
  1391                           postinc0	equ	0xFEE
  1392                           wreg	equ	0xFE8
  1393                           indf2	equ	0xFDF
  1394                           fsr2h	equ	0xFDA
  1395                           fsr2l	equ	0xFD9
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _toTXfifo *****************
  1399 ;; Defined at:
  1400 ;;		line 167 in file "MRF24J40c.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  reg             2    9[BANK0 ] unsigned short 
  1403 ;;  source          2   11[BANK0 ] PTR unsigned char 
  1404 ;;		 -> txPayload(103), payLoad(1), RXBuffer1(144), RXBuffer2(144), 
  1405 ;;		 -> Tx(29), 
  1406 ;;  count           1   13[BANK0 ] unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      unsigned char 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1418 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        5 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    7
  1425 ;; This function calls:
  1426 ;;		_highWrite
  1427 ;; This function is called by:
  1428 ;;		_RadioTXRaw
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text3
  1433  0010DA                     __ptext3:
  1434                           	opt stack 0
  1435  0010DA                     _toTXfifo:
  1436                           	opt stack 21
  1437                           
  1438                           ;MRF24J40c.c: 168: while (count--)
  1439                           
  1440                           ;incstack = 0
  1441  0010DA  D013               	goto	l2744
  1442  0010DC                     l2738:
  1443                           
  1444                           ;MRF24J40c.c: 169: highWrite(reg++, *source++);
  1445  0010DC  C0A8  F0A2         	movff	toTXfifo@reg,highWrite@address
  1446  0010E0  C0A9  F0A3         	movff	toTXfifo@reg+1,highWrite@address+1
  1447  0010E4  C0AA  FFD9         	movff	toTXfifo@source,fsr2l
  1448  0010E8  C0AB  FFDA         	movff	toTXfifo@source+1,fsr2h
  1449  0010EC  50DF               	movf	indf2,w,c
  1450  0010EE  0100               	movlb	0	; () banked
  1451  0010F0  6FA4               	movwf	highWrite@value& (0+255),b
  1452  0010F2  ECC5  F006         	call	_highWrite	;wreg free
  1453  0010F6  0100               	movlb	0	; () banked
  1454  0010F8  4BAA               	infsnz	toTXfifo@source& (0+255),f,b
  1455  0010FA  2BAB               	incf	(toTXfifo@source+1)& (0+255),f,b
  1456                           
  1457                           ; BSR set to: 0
  1458  0010FC  0100               	movlb	0	; () banked
  1459  0010FE  4BA8               	infsnz	toTXfifo@reg& (0+255),f,b
  1460  001100  2BA9               	incf	(toTXfifo@reg+1)& (0+255),f,b
  1461  001102                     l2744:
  1462  001102  0100               	movlb	0	; () banked
  1463  001104  07AC               	decf	toTXfifo@count& (0+255),f,b
  1464  001106  0100               	movlb	0	; () banked
  1465  001108  29AC               	incf	toTXfifo@count& (0+255),w,b
  1466  00110A  A4D8               	btfss	status,2,c
  1467  00110C  D7E7               	goto	l2738
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;MRF24J40c.c: 171: return reg;
  1471                           
  1472                           ; BSR set to: 0
  1473  00110E  0100               	movlb	0	; () banked
  1474  001110  51A8               	movf	toTXfifo@reg& (0+255),w,b
  1475                           
  1476                           ; BSR set to: 0
  1477                           
  1478                           ; BSR set to: 0
  1479  001112  0012               	return	
  1480  001114                     __end_of_toTXfifo:
  1481                           	opt stack 0
  1482                           postinc0	equ	0xFEE
  1483                           wreg	equ	0xFE8
  1484                           indf2	equ	0xFDF
  1485                           fsr2h	equ	0xFDA
  1486                           fsr2l	equ	0xFD9
  1487                           status	equ	0xFD8
  1488                           
  1489 ;; *************** function _RadioSetSleep *****************
  1490 ;; Defined at:
  1491 ;;		line 326 in file "MRF24J40c.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  powerState      1    wreg     unsigned char 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  powerState      1   21[BANK0 ] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;		None               void
  1498 ;; Registers used:
  1499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;Total ram usage:        1 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    9
  1512 ;; This function calls:
  1513 ;;		_highWrite
  1514 ;;		_initMRF24J40
  1515 ;;		_lowWrite
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text4
  1522  000E6E                     __ptext4:
  1523                           	opt stack 0
  1524  000E6E                     _RadioSetSleep:
  1525                           	opt stack 21
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;incstack = 0
  1529                           ;RadioSetSleep@powerState stored from wreg
  1530  000E6E  0100               	movlb	0	; () banked
  1531  000E70  6FB4               	movwf	RadioSetSleep@powerState& (0+255),b
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;MRF24J40c.c: 327: if (powerState) {
  1535  000E72  0100               	movlb	0	; () banked
  1536  000E74  51B4               	movf	RadioSetSleep@powerState& (0+255),w,b
  1537  000E76  B4D8               	btfsc	status,2,c
  1538  000E78  D02C               	goto	l2982
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;MRF24J40c.c: 329: highWrite((0x22f), 0x08);
  1542  000E7A  0E02               	movlw	2
  1543  000E7C  0100               	movlb	0	; () banked
  1544  000E7E  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  1545  000E80  0E2F               	movlw	47
  1546  000E82  0100               	movlb	0	; () banked
  1547  000E84  6FA2               	movwf	highWrite@address& (0+255),b
  1548  000E86  0E08               	movlw	8
  1549  000E88  0100               	movlb	0	; () banked
  1550  000E8A  6FA4               	movwf	highWrite@value& (0+255),b
  1551  000E8C  ECC5  F006         	call	_highWrite	;wreg free
  1552                           
  1553                           ;MRF24J40c.c: 330: lowWrite((0x69), 0x0F);
  1554  000E90  0E0F               	movlw	15
  1555  000E92  0100               	movlb	0	; () banked
  1556  000E94  6FA2               	movwf	lowWrite@value& (0+255),b
  1557  000E96  0E69               	movlw	105
  1558  000E98  ECDA  F008         	call	_lowWrite
  1559                           
  1560                           ;MRF24J40c.c: 331: lowWrite((0x67), 0x00);
  1561  000E9C  0E00               	movlw	0
  1562  000E9E  0100               	movlb	0	; () banked
  1563  000EA0  6FA2               	movwf	lowWrite@value& (0+255),b
  1564  000EA2  0E67               	movlw	103
  1565  000EA4  ECDA  F008         	call	_lowWrite
  1566                           
  1567                           ;MRF24J40c.c: 333: lowWrite((0x55), 0x04);
  1568  000EA8  0E04               	movlw	4
  1569  000EAA  0100               	movlb	0	; () banked
  1570  000EAC  6FA2               	movwf	lowWrite@value& (0+255),b
  1571  000EAE  0E55               	movlw	85
  1572  000EB0  ECDA  F008         	call	_lowWrite
  1573                           
  1574                           ;MRF24J40c.c: 334: lowWrite((0x45), 0x80);
  1575  000EB4  0E80               	movlw	128
  1576  000EB6  0100               	movlb	0	; () banked
  1577  000EB8  6FA2               	movwf	lowWrite@value& (0+255),b
  1578  000EBA  0E45               	movlw	69
  1579  000EBC  ECDA  F008         	call	_lowWrite
  1580                           
  1581                           ;MRF24J40c.c: 335: lowWrite((0x6B), 0x80);
  1582  000EC0  0E80               	movlw	128
  1583  000EC2  0100               	movlb	0	; () banked
  1584  000EC4  6FA2               	movwf	lowWrite@value& (0+255),b
  1585  000EC6  0E6B               	movlw	107
  1586  000EC8  ECDA  F008         	call	_lowWrite
  1587                           
  1588                           ;MRF24J40c.c: 337: RadioStatus.SLEEPING = 1;
  1589  000ECC  0100               	movlb	0	; () banked
  1590  000ECE  8D60               	bsf	_RadioStatus& (0+255),6,b	;volatile
  1591                           
  1592                           ;MRF24J40c.c: 338: } else {
  1593  000ED0  D002               	goto	l112
  1594  000ED2                     l2982:
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;MRF24J40c.c: 339: initMRF24J40();
  1598  000ED2  EC16  F003         	call	_initMRF24J40	;wreg free
  1599  000ED6                     l112:
  1600  000ED6  0012               	return	
  1601  000ED8                     __end_of_RadioSetSleep:
  1602                           	opt stack 0
  1603                           postinc0	equ	0xFEE
  1604                           wreg	equ	0xFE8
  1605                           indf2	equ	0xFDF
  1606                           fsr2h	equ	0xFDA
  1607                           fsr2l	equ	0xFD9
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function _RadioRXPacket *****************
  1611 ;; Defined at:
  1612 ;;		line 493 in file "MRF24J40c.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  readPoint       2   25[BANK0 ] PTR unsigned char 
  1617 ;;		 -> RXBuffer1(144), RXBuffer2(144), 
  1618 ;;  i               2   23[BANK0 ] unsigned int 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      unsigned char 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;Total ram usage:        6 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    9
  1635 ;; This function calls:
  1636 ;;		_RadioDiscardPacket
  1637 ;;		_initMRF24J40
  1638 ;;		_readBytes
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text5
  1645  00001C                     __ptext5:
  1646                           	opt stack 0
  1647  00001C                     _RadioRXPacket:
  1648                           	opt stack 21
  1649                           
  1650                           ;MRF24J40c.c: 495: unsigned int i = 0;
  1651                           
  1652                           ;incstack = 0
  1653  00001C  0E00               	movlw	0
  1654  00001E  0100               	movlb	0	; () banked
  1655  000020  6FB7               	movwf	(RadioRXPacket@i+1)& (0+255),b
  1656  000022  0E00               	movlw	0
  1657  000024  0100               	movlb	0	; () banked
  1658  000026  6FB6               	movwf	RadioRXPacket@i& (0+255),b
  1659                           
  1660                           ;MRF24J40c.c: 496: UINT8* readPoint;
  1661                           ;MRF24J40c.c: 498: if (RadioStatus.RXReadBuffer) {
  1662  000028  0100               	movlb	0	; () banked
  1663  00002A  5162               	movf	(_RadioStatus+2)& (0+255),w,b	;volatile
  1664  00002C  B4D8               	btfsc	status,2,c
  1665  00002E  D006               	goto	l3008
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;MRF24J40c.c: 499: readPoint = RXBuffer2;
  1669  000030  0103               	movlb	3	; () banked
  1670  000032  0E03               	movlw	3	;volatile
  1671  000034  0100               	movlb	0	; () banked
  1672  000036  6FB9               	movwf	(RadioRXPacket@readPoint+1)& (0+255),b
  1673  000038  0103               	movlb	3	; () banked
  1674  00003A  D005               	goto	L7
  1675  00003C                     l3008:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;MRF24J40c.c: 501: else {
  1679                           ;MRF24J40c.c: 502: readPoint = RXBuffer1;
  1680  00003C  0101               	movlb	1	; () banked
  1681  00003E  0E01               	movlw	1	;volatile
  1682  000040  0100               	movlb	0	; () banked
  1683  000042  6FB9               	movwf	(RadioRXPacket@readPoint+1)& (0+255),b
  1684  000044  0101               	movlb	1	; () banked
  1685  000046                     L7:
  1686  000046  0E00               	movlw	0	;volatile
  1687  000048  0100               	movlb	0	; () banked
  1688  00004A  6FB8               	movwf	RadioRXPacket@readPoint& (0+255),b
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;MRF24J40c.c: 503: }
  1692                           ;MRF24J40c.c: 504: if (RadioStatus.RXPacketCount == 0)
  1693                           
  1694                           ; BSR set to: 0
  1695  00004C  0100               	movlb	0	; () banked
  1696  00004E  6763               	tstfsz	(_RadioStatus+3)& (0+255),b	;volatile
  1697  000050  D01A               	goto	l150
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;MRF24J40c.c: 505: return 0;
  1701  000052  0E00               	movlw	0
  1702  000054  D1C6               	goto	l149
  1703  000056                     l3016:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;MRF24J40c.c: 510: i = i + 1;
  1707  000056  0E01               	movlw	1
  1708  000058  0100               	movlb	0	; () banked
  1709  00005A  25B6               	addwf	RadioRXPacket@i& (0+255),w,b
  1710  00005C  0100               	movlb	0	; () banked
  1711  00005E  6FB6               	movwf	RadioRXPacket@i& (0+255),b
  1712  000060  0E00               	movlw	0
  1713  000062  0100               	movlb	0	; () banked
  1714  000064  21B7               	addwfc	(RadioRXPacket@i+1)& (0+255),w,b
  1715  000066  0100               	movlb	0	; () banked
  1716  000068  6FB7               	movwf	(RadioRXPacket@i+1)& (0+255),b
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;MRF24J40c.c: 511: if (!(RadioStatus.TX_BUSY))
  1720  00006A  0100               	movlb	0	; () banked
  1721  00006C  A160               	btfss	_RadioStatus& (0+255),0,b	;volatile
  1722  00006E  D00E               	goto	l153
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;MRF24J40c.c: 513: else if (i > 0x7000) {
  1726                           
  1727                           ; BSR set to: 0
  1728                           
  1729                           ; BSR set to: 0
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;MRF24J40c.c: 512: break;
  1733  000070  0E01               	movlw	1
  1734  000072  0100               	movlb	0	; () banked
  1735  000074  5DB6               	subwf	RadioRXPacket@i& (0+255),w,b
  1736  000076  0E70               	movlw	112
  1737  000078  0100               	movlb	0	; () banked
  1738  00007A  59B7               	subwfb	(RadioRXPacket@i+1)& (0+255),w,b
  1739  00007C  A0D8               	btfss	status,0,c
  1740  00007E  D003               	goto	l150
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;MRF24J40c.c: 514: initMRF24J40();
  1744  000080  EC16  F003         	call	_initMRF24J40	;wreg free
  1745                           
  1746                           ;MRF24J40c.c: 515: break;
  1747  000084  D003               	goto	l153
  1748  000086                     l150:
  1749  000086  0100               	movlb	0	; () banked
  1750  000088  B160               	btfsc	_RadioStatus& (0+255),0,b	;volatile
  1751  00008A  D7E5               	goto	l3016
  1752  00008C                     l153:
  1753                           
  1754                           ;MRF24J40c.c: 516: }
  1755                           ;MRF24J40c.c: 517: }
  1756                           ;MRF24J40c.c: 519: __nop();
  1757  00008C  F000               	nop	
  1758                           
  1759                           ;MRF24J40c.c: 520: __nop();
  1760  00008E  F000               	nop	
  1761                           
  1762                           ;MRF24J40c.c: 521: __nop();
  1763  000090  F000               	nop	
  1764                           
  1765                           ;MRF24J40c.c: 522: __nop();
  1766  000092  F000               	nop	
  1767                           
  1768                           ;MRF24J40c.c: 526: readPoint = readBytes(((UINT8*)&(Rx)), readPoint, 1 + 2 + 1 + 2);
  1769  000094  0100               	movlb	0	; () banked
  1770  000096  0E00               	movlw	high _Rx
  1771  000098  0100               	movlb	0	; () banked
  1772  00009A  6FA0               	movwf	(readBytes@dstPtr+1)& (0+255),b
  1773  00009C  0100               	movlb	0	; () banked
  1774  00009E  0E82               	movlw	low _Rx
  1775  0000A0  0100               	movlb	0	; () banked
  1776  0000A2  6F9F               	movwf	readBytes@dstPtr& (0+255),b
  1777  0000A4  0100               	movlb	0	; () banked
  1778  0000A6  C0B9  F0A2         	movff	RadioRXPacket@readPoint+1,readBytes@srcPtr+1
  1779  0000AA  0100               	movlb	0	; () banked
  1780  0000AC  C0B8  F0A1         	movff	RadioRXPacket@readPoint,readBytes@srcPtr
  1781  0000B0  0E00               	movlw	0
  1782  0000B2  0100               	movlb	0	; () banked
  1783  0000B4  6FA4               	movwf	(readBytes@count+1)& (0+255),b
  1784  0000B6  0E06               	movlw	6
  1785  0000B8  0100               	movlb	0	; () banked
  1786  0000BA  6FA3               	movwf	readBytes@count& (0+255),b
  1787  0000BC  EC4B  F008         	call	_readBytes	;wreg free
  1788  0000C0  0100               	movlb	0	; () banked
  1789  0000C2  C09F  F0B8         	movff	?_readBytes,RadioRXPacket@readPoint
  1790  0000C6  0100               	movlb	0	; () banked
  1791  0000C8  C0A0  F0B9         	movff	?_readBytes+1,RadioRXPacket@readPoint+1
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;MRF24J40c.c: 528: if (Rx.securityEnabled)
  1795  0000CC  0100               	movlb	0	; () banked
  1796  0000CE  A783               	btfss	(_Rx+1)& (0+255),3,b
  1797  0000D0  D005               	goto	l3036
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;MRF24J40c.c: 529: {
  1801                           ;MRF24J40c.c: 530: RadioStatus.RXSecurityEnabled++;
  1802  0000D2  0100               	movlb	0	; () banked
  1803  0000D4  4B7A               	infsnz	(_RadioStatus+26)& (0+255),f,b	;volatile
  1804  0000D6  2B7B               	incf	(_RadioStatus+27)& (0+255),f,b	;volatile
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;MRF24J40c.c: 531: RadioDiscardPacket();
  1808  0000D8  EC46  F009         	call	_RadioDiscardPacket	;wreg free
  1809  0000DC                     l3036:
  1810                           
  1811                           ;MRF24J40c.c: 533: }
  1812                           ;MRF24J40c.c: 536: if (Rx.frameType == 0b010)
  1813  0000DC  0100               	movlb	0	; () banked
  1814  0000DE  5183               	movf	(_Rx+1)& (0+255),w,b
  1815  0000E0  0B07               	andlw	7
  1816  0000E2  0A02               	xorlw	2
  1817  0000E4  A4D8               	btfss	status,2,c
  1818  0000E6  D006               	goto	l157
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;MRF24J40c.c: 537: readPoint -= 2;
  1822  0000E8  0E02               	movlw	2
  1823  0000EA  0100               	movlb	0	; () banked
  1824  0000EC  5FB8               	subwf	RadioRXPacket@readPoint& (0+255),f,b
  1825  0000EE  0E00               	movlw	0
  1826  0000F0  0100               	movlb	0	; () banked
  1827  0000F2  5BB9               	subwfb	(RadioRXPacket@readPoint+1)& (0+255),f,b
  1828  0000F4                     l157:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;MRF24J40c.c: 541: if (Rx.dstAddrMode == (2))
  1832  0000F4  0100               	movlb	0	; () banked
  1833  0000F6  3184               	rrcf	(_Rx+2)& (0+255),w,b
  1834  0000F8  32E8               	rrcf	wreg,f,c
  1835  0000FA  0B03               	andlw	3
  1836  0000FC  0A02               	xorlw	2
  1837  0000FE  A4D8               	btfss	status,2,c
  1838  000100  D017               	goto	l3042
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;MRF24J40c.c: 542: readPoint = readBytes(((UINT8*)&(Rx.dstAddr1)), readPoint, 2);
  1842  000102  0100               	movlb	0	; () banked
  1843  000104  0E00               	movlw	high (_Rx+6)
  1844  000106  0100               	movlb	0	; () banked
  1845  000108  6FA0               	movwf	(readBytes@dstPtr+1)& (0+255),b
  1846  00010A  0100               	movlb	0	; () banked
  1847  00010C  0E88               	movlw	low (_Rx+6)
  1848  00010E  0100               	movlb	0	; () banked
  1849  000110  6F9F               	movwf	readBytes@dstPtr& (0+255),b
  1850  000112  0100               	movlb	0	; () banked
  1851  000114  C0B9  F0A2         	movff	RadioRXPacket@readPoint+1,readBytes@srcPtr+1
  1852  000118  0100               	movlb	0	; () banked
  1853  00011A  C0B8  F0A1         	movff	RadioRXPacket@readPoint,readBytes@srcPtr
  1854  00011E  0E00               	movlw	0
  1855  000120  0100               	movlb	0	; () banked
  1856  000122  6FA4               	movwf	(readBytes@count+1)& (0+255),b
  1857  000124  0E02               	movlw	2
  1858  000126  0100               	movlb	0	; () banked
  1859  000128  6FA3               	movwf	readBytes@count& (0+255),b
  1860  00012A  EC4B  F008         	call	_readBytes	;wreg free
  1861  00012E  D039               	goto	L8
  1862  000130                     l3042:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;MRF24J40c.c: 543: else if (Rx.dstAddrMode == (3))
  1866  000130  0100               	movlb	0	; () banked
  1867  000132  3184               	rrcf	(_Rx+2)& (0+255),w,b
  1868  000134  32E8               	rrcf	wreg,f,c
  1869  000136  0B03               	andlw	3
  1870  000138  0A03               	xorlw	3
  1871  00013A  A4D8               	btfss	status,2,c
  1872  00013C  D038               	goto	l3046
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;MRF24J40c.c: 544: {
  1876                           ;MRF24J40c.c: 545: readPoint = readBytes(((UINT8*)&(Rx.dstAddr1)), readPoint, 4);
  1877  00013E  0100               	movlb	0	; () banked
  1878  000140  0E00               	movlw	high (_Rx+6)
  1879  000142  0100               	movlb	0	; () banked
  1880  000144  6FA0               	movwf	(readBytes@dstPtr+1)& (0+255),b
  1881  000146  0100               	movlb	0	; () banked
  1882  000148  0E88               	movlw	low (_Rx+6)
  1883  00014A  0100               	movlb	0	; () banked
  1884  00014C  6F9F               	movwf	readBytes@dstPtr& (0+255),b
  1885  00014E  0100               	movlb	0	; () banked
  1886  000150  C0B9  F0A2         	movff	RadioRXPacket@readPoint+1,readBytes@srcPtr+1
  1887  000154  0100               	movlb	0	; () banked
  1888  000156  C0B8  F0A1         	movff	RadioRXPacket@readPoint,readBytes@srcPtr
  1889  00015A  0E00               	movlw	0
  1890  00015C  0100               	movlb	0	; () banked
  1891  00015E  6FA4               	movwf	(readBytes@count+1)& (0+255),b
  1892  000160  0E04               	movlw	4
  1893  000162  0100               	movlb	0	; () banked
  1894  000164  6FA3               	movwf	readBytes@count& (0+255),b
  1895  000166  EC4B  F008         	call	_readBytes	;wreg free
  1896  00016A  0100               	movlb	0	; () banked
  1897  00016C  C09F  F0B8         	movff	?_readBytes,RadioRXPacket@readPoint
  1898  000170  0100               	movlb	0	; () banked
  1899  000172  C0A0  F0B9         	movff	?_readBytes+1,RadioRXPacket@readPoint+1
  1900                           
  1901                           ;MRF24J40c.c: 546: readPoint = readBytes(((UINT8*)&(Rx.dstAddr2)), readPoint, 4);
  1902  000176  0100               	movlb	0	; () banked
  1903  000178  0E00               	movlw	high (_Rx+10)
  1904  00017A  0100               	movlb	0	; () banked
  1905  00017C  6FA0               	movwf	(readBytes@dstPtr+1)& (0+255),b
  1906  00017E  0100               	movlb	0	; () banked
  1907  000180  0E8C               	movlw	low (_Rx+10)
  1908  000182  0100               	movlb	0	; () banked
  1909  000184  6F9F               	movwf	readBytes@dstPtr& (0+255),b
  1910  000186  0100               	movlb	0	; () banked
  1911  000188  C0B9  F0A2         	movff	RadioRXPacket@readPoint+1,readBytes@srcPtr+1
  1912  00018C  0100               	movlb	0	; () banked
  1913  00018E  C0B8  F0A1         	movff	RadioRXPacket@readPoint,readBytes@srcPtr
  1914  000192  0E00               	movlw	0
  1915  000194  0100               	movlb	0	; () banked
  1916  000196  6FA4               	movwf	(readBytes@count+1)& (0+255),b
  1917  000198  0E04               	movlw	4
  1918  00019A  0100               	movlb	0	; () banked
  1919  00019C  6FA3               	movwf	readBytes@count& (0+255),b
  1920  00019E  EC4B  F008         	call	_readBytes	;wreg free
  1921  0001A2                     L8:
  1922  0001A2  0100               	movlb	0	; () banked
  1923  0001A4  C09F  F0B8         	movff	?_readBytes,RadioRXPacket@readPoint
  1924  0001A8  0100               	movlb	0	; () banked
  1925  0001AA  C0A0  F0B9         	movff	?_readBytes+1,RadioRXPacket@readPoint+1
  1926  0001AE                     l3046:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;MRF24J40c.c: 548: }
  1930                           ;MRF24J40c.c: 549: Rx.srcPANID = Rx.dstPANID;
  1931  0001AE  C086  F090         	movff	_Rx+4,_Rx+14
  1932  0001B2  C087  F091         	movff	_Rx+5,_Rx+15
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;MRF24J40c.c: 550: Rx.srcAddr1 = Rx.dstAddr1;
  1936  0001B6  C088  F092         	movff	_Rx+6,_Rx+16
  1937  0001BA  C089  F093         	movff	_Rx+7,_Rx+17
  1938  0001BE  C08A  F094         	movff	_Rx+8,_Rx+18
  1939  0001C2  C08B  F095         	movff	_Rx+9,_Rx+19
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;MRF24J40c.c: 551: Rx.srcAddr2 = Rx.dstAddr2;
  1943  0001C6  C08C  F096         	movff	_Rx+10,_Rx+20
  1944  0001CA  C08D  F097         	movff	_Rx+11,_Rx+21
  1945  0001CE  C08E  F098         	movff	_Rx+12,_Rx+22
  1946  0001D2  C08F  F099         	movff	_Rx+13,_Rx+23
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;MRF24J40c.c: 555: if (Rx.srcAddrMode != (0) &&
  1950                           ;MRF24J40c.c: 556: Rx.dstAddrMode != (0) &&
  1951                           ;MRF24J40c.c: 557: !Rx.panIDcomp)
  1952  0001D6  0100               	movlb	0	; () banked
  1953  0001D8  3984               	swapf	(_Rx+2)& (0+255),w,b
  1954  0001DA  32E8               	rrcf	wreg,f,c
  1955  0001DC  32E8               	rrcf	wreg,f,c
  1956  0001DE  0B03               	andlw	3
  1957  0001E0  0900               	iorlw	0
  1958  0001E2  B4D8               	btfsc	status,2,c
  1959  0001E4  D026               	goto	l3060
  1960                           
  1961                           ; BSR set to: 0
  1962  0001E6  0100               	movlb	0	; () banked
  1963  0001E8  3184               	rrcf	(_Rx+2)& (0+255),w,b
  1964  0001EA  32E8               	rrcf	wreg,f,c
  1965  0001EC  0B03               	andlw	3
  1966  0001EE  0900               	iorlw	0
  1967  0001F0  B4D8               	btfsc	status,2,c
  1968  0001F2  D01F               	goto	l3060
  1969                           
  1970                           ; BSR set to: 0
  1971  0001F4  0100               	movlb	0	; () banked
  1972  0001F6  BD83               	btfsc	(_Rx+1)& (0+255),6,b
  1973  0001F8  D01C               	goto	l3060
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;MRF24J40c.c: 558: readPoint = readBytes(((UINT8*)&(Rx.srcPANID)), readPoint, 2);
  1977  0001FA  0100               	movlb	0	; () banked
  1978  0001FC  0E00               	movlw	high (_Rx+14)
  1979  0001FE  0100               	movlb	0	; () banked
  1980  000200  6FA0               	movwf	(readBytes@dstPtr+1)& (0+255),b
  1981  000202  0100               	movlb	0	; () banked
  1982  000204  0E90               	movlw	low (_Rx+14)
  1983  000206  0100               	movlb	0	; () banked
  1984  000208  6F9F               	movwf	readBytes@dstPtr& (0+255),b
  1985  00020A  0100               	movlb	0	; () banked
  1986  00020C  C0B9  F0A2         	movff	RadioRXPacket@readPoint+1,readBytes@srcPtr+1
  1987  000210  0100               	movlb	0	; () banked
  1988  000212  C0B8  F0A1         	movff	RadioRXPacket@readPoint,readBytes@srcPtr
  1989  000216  0E00               	movlw	0
  1990  000218  0100               	movlb	0	; () banked
  1991  00021A  6FA4               	movwf	(readBytes@count+1)& (0+255),b
  1992  00021C  0E02               	movlw	2
  1993  00021E  0100               	movlb	0	; () banked
  1994  000220  6FA3               	movwf	readBytes@count& (0+255),b
  1995  000222  EC4B  F008         	call	_readBytes	;wreg free
  1996  000226  0100               	movlb	0	; () banked
  1997  000228  C09F  F0B8         	movff	?_readBytes,RadioRXPacket@readPoint
  1998  00022C  0100               	movlb	0	; () banked
  1999  00022E  C0A0  F0B9         	movff	?_readBytes+1,RadioRXPacket@readPoint+1
  2000  000232                     l3060:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;MRF24J40c.c: 560: if (Rx.srcAddrMode == (2))
  2004  000232  0100               	movlb	0	; () banked
  2005  000234  3984               	swapf	(_Rx+2)& (0+255),w,b
  2006  000236  32E8               	rrcf	wreg,f,c
  2007  000238  32E8               	rrcf	wreg,f,c
  2008  00023A  0B03               	andlw	3
  2009  00023C  0A02               	xorlw	2
  2010  00023E  A4D8               	btfss	status,2,c
  2011  000240  D017               	goto	l3064
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;MRF24J40c.c: 561: readPoint = readBytes(((UINT8*)&(Rx.srcAddr1)), readPoint, 2);
  2015  000242  0100               	movlb	0	; () banked
  2016  000244  0E00               	movlw	high (_Rx+16)
  2017  000246  0100               	movlb	0	; () banked
  2018  000248  6FA0               	movwf	(readBytes@dstPtr+1)& (0+255),b
  2019  00024A  0100               	movlb	0	; () banked
  2020  00024C  0E92               	movlw	low (_Rx+16)
  2021  00024E  0100               	movlb	0	; () banked
  2022  000250  6F9F               	movwf	readBytes@dstPtr& (0+255),b
  2023  000252  0100               	movlb	0	; () banked
  2024  000254  C0B9  F0A2         	movff	RadioRXPacket@readPoint+1,readBytes@srcPtr+1
  2025  000258  0100               	movlb	0	; () banked
  2026  00025A  C0B8  F0A1         	movff	RadioRXPacket@readPoint,readBytes@srcPtr
  2027  00025E  0E00               	movlw	0
  2028  000260  0100               	movlb	0	; () banked
  2029  000262  6FA4               	movwf	(readBytes@count+1)& (0+255),b
  2030  000264  0E02               	movlw	2
  2031  000266  0100               	movlb	0	; () banked
  2032  000268  6FA3               	movwf	readBytes@count& (0+255),b
  2033  00026A  EC4B  F008         	call	_readBytes	;wreg free
  2034  00026E  D03A               	goto	L9
  2035  000270                     l3064:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;MRF24J40c.c: 562: else if (Rx.srcAddrMode == (3))
  2039  000270  0100               	movlb	0	; () banked
  2040  000272  3984               	swapf	(_Rx+2)& (0+255),w,b
  2041  000274  32E8               	rrcf	wreg,f,c
  2042  000276  32E8               	rrcf	wreg,f,c
  2043  000278  0B03               	andlw	3
  2044  00027A  0A03               	xorlw	3
  2045  00027C  A4D8               	btfss	status,2,c
  2046  00027E  D038               	goto	l3068
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;MRF24J40c.c: 563: {
  2050                           ;MRF24J40c.c: 564: readPoint = readBytes(((UINT8*)&(Rx.srcAddr1)), readPoint, 4);
  2051  000280  0100               	movlb	0	; () banked
  2052  000282  0E00               	movlw	high (_Rx+16)
  2053  000284  0100               	movlb	0	; () banked
  2054  000286  6FA0               	movwf	(readBytes@dstPtr+1)& (0+255),b
  2055  000288  0100               	movlb	0	; () banked
  2056  00028A  0E92               	movlw	low (_Rx+16)
  2057  00028C  0100               	movlb	0	; () banked
  2058  00028E  6F9F               	movwf	readBytes@dstPtr& (0+255),b
  2059  000290  0100               	movlb	0	; () banked
  2060  000292  C0B9  F0A2         	movff	RadioRXPacket@readPoint+1,readBytes@srcPtr+1
  2061  000296  0100               	movlb	0	; () banked
  2062  000298  C0B8  F0A1         	movff	RadioRXPacket@readPoint,readBytes@srcPtr
  2063  00029C  0E00               	movlw	0
  2064  00029E  0100               	movlb	0	; () banked
  2065  0002A0  6FA4               	movwf	(readBytes@count+1)& (0+255),b
  2066  0002A2  0E04               	movlw	4
  2067  0002A4  0100               	movlb	0	; () banked
  2068  0002A6  6FA3               	movwf	readBytes@count& (0+255),b
  2069  0002A8  EC4B  F008         	call	_readBytes	;wreg free
  2070  0002AC  0100               	movlb	0	; () banked
  2071  0002AE  C09F  F0B8         	movff	?_readBytes,RadioRXPacket@readPoint
  2072  0002B2  0100               	movlb	0	; () banked
  2073  0002B4  C0A0  F0B9         	movff	?_readBytes+1,RadioRXPacket@readPoint+1
  2074                           
  2075                           ;MRF24J40c.c: 565: readPoint = readBytes(((UINT8*)&(Rx.srcAddr2)), readPoint, 4);
  2076  0002B8  0100               	movlb	0	; () banked
  2077  0002BA  0E00               	movlw	high (_Rx+20)
  2078  0002BC  0100               	movlb	0	; () banked
  2079  0002BE  6FA0               	movwf	(readBytes@dstPtr+1)& (0+255),b
  2080  0002C0  0100               	movlb	0	; () banked
  2081  0002C2  0E96               	movlw	low (_Rx+20)
  2082  0002C4  0100               	movlb	0	; () banked
  2083  0002C6  6F9F               	movwf	readBytes@dstPtr& (0+255),b
  2084  0002C8  0100               	movlb	0	; () banked
  2085  0002CA  C0B9  F0A2         	movff	RadioRXPacket@readPoint+1,readBytes@srcPtr+1
  2086  0002CE  0100               	movlb	0	; () banked
  2087  0002D0  C0B8  F0A1         	movff	RadioRXPacket@readPoint,readBytes@srcPtr
  2088  0002D4  0E00               	movlw	0
  2089  0002D6  0100               	movlb	0	; () banked
  2090  0002D8  6FA4               	movwf	(readBytes@count+1)& (0+255),b
  2091  0002DA  0E04               	movlw	4
  2092  0002DC  0100               	movlb	0	; () banked
  2093  0002DE  6FA3               	movwf	readBytes@count& (0+255),b
  2094  0002E0  EC4B  F008         	call	_readBytes	;wreg free
  2095  0002E4                     L9:
  2096  0002E4  0100               	movlb	0	; () banked
  2097  0002E6  C09F  F0B8         	movff	?_readBytes,RadioRXPacket@readPoint
  2098  0002EA  0100               	movlb	0	; () banked
  2099  0002EC  C0A0  F0B9         	movff	?_readBytes+1,RadioRXPacket@readPoint+1
  2100  0002F0                     l3068:
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;MRF24J40c.c: 566: }
  2104                           ;MRF24J40c.c: 567: Rx.payload = readPoint;
  2105  0002F0  0100               	movlb	0	; () banked
  2106  0002F2  C0B9  F09C         	movff	RadioRXPacket@readPoint+1,_Rx+26
  2107  0002F6  0100               	movlb	0	; () banked
  2108  0002F8  C0B8  F09B         	movff	RadioRXPacket@readPoint,_Rx+25
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;MRF24J40c.c: 569: if (RadioStatus.RXReadBuffer) {
  2112  0002FC  0100               	movlb	0	; () banked
  2113  0002FE  5162               	movf	(_RadioStatus+2)& (0+255),w,b	;volatile
  2114  000300  B4D8               	btfsc	status,2,c
  2115  000302  D034               	goto	l3078
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;MRF24J40c.c: 570: Rx.payloadLength = Rx.frameLength + (RXBuffer2 - readPoint) + 1;
  2119  000304  0100               	movlb	0	; () banked
  2120  000306  51B8               	movf	RadioRXPacket@readPoint& (0+255),w,b
  2121  000308  0800               	sublw	0
  2122  00030A  0100               	movlb	0	; () banked
  2123  00030C  2582               	addwf	_Rx& (0+255),w,b
  2124  00030E  0100               	movlb	0	; () banked
  2125  000310  6FB4               	movwf	??_RadioRXPacket& (0+255),b
  2126  000312  0100               	movlb	0	; () banked
  2127  000314  29B4               	incf	??_RadioRXPacket& (0+255),w,b
  2128  000316  0100               	movlb	0	; () banked
  2129  000318  6F9A               	movwf	(_Rx+24)& (0+255),b
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;MRF24J40c.c: 571: Rx.lqi = RXBuffer2[RXBuffer2[0] + 3];
  2133  00031A  0103               	movlb	3	; () banked
  2134  00031C  5100               	movf	0,w,b	;volatile
  2135  00031E  0100               	movlb	0	; () banked
  2136  000320  6FB4               	movwf	??_RadioRXPacket& (0+255),b
  2137  000322  6BB5               	clrf	(??_RadioRXPacket+1)& (0+255),b
  2138  000324  0E03               	movlw	3
  2139  000326  0100               	movlb	0	; () banked
  2140  000328  27B4               	addwf	??_RadioRXPacket& (0+255),f,b
  2141  00032A  0E00               	movlw	0
  2142  00032C  23B5               	addwfc	(??_RadioRXPacket+1)& (0+255),f,b
  2143  00032E  0103               	movlb	3	; () banked
  2144  000330  0E00               	movlw	0	;volatile
  2145  000332  0100               	movlb	0	; () banked
  2146  000334  25B4               	addwf	??_RadioRXPacket& (0+255),w,b
  2147  000336  6ED9               	movwf	fsr2l,c
  2148  000338  0103               	movlb	3	; () banked
  2149  00033A  0E03               	movlw	3	;volatile
  2150  00033C  0100               	movlb	0	; () banked
  2151  00033E  21B5               	addwfc	(??_RadioRXPacket+1)& (0+255),w,b
  2152  000340  6EDA               	movwf	fsr2h,c
  2153  000342  50DF               	movf	indf2,w,c
  2154  000344  0100               	movlb	0	; () banked
  2155  000346  6F9D               	movwf	(_Rx+27)& (0+255),b
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;MRF24J40c.c: 572: Rx.rssi = RXBuffer2[RXBuffer2[0] + 4];
  2159  000348  0103               	movlb	3	; () banked
  2160  00034A  5100               	movf	0,w,b	;volatile
  2161  00034C  0100               	movlb	0	; () banked
  2162  00034E  6FB4               	movwf	??_RadioRXPacket& (0+255),b
  2163  000350  6BB5               	clrf	(??_RadioRXPacket+1)& (0+255),b
  2164  000352  0E04               	movlw	4
  2165  000354  0100               	movlb	0	; () banked
  2166  000356  27B4               	addwf	??_RadioRXPacket& (0+255),f,b
  2167  000358  0E00               	movlw	0
  2168  00035A  23B5               	addwfc	(??_RadioRXPacket+1)& (0+255),f,b
  2169  00035C  0103               	movlb	3	; () banked
  2170  00035E  0E00               	movlw	0	;volatile
  2171  000360  0100               	movlb	0	; () banked
  2172  000362  25B4               	addwf	??_RadioRXPacket& (0+255),w,b
  2173  000364  6ED9               	movwf	fsr2l,c
  2174  000366  0103               	movlb	3	; () banked
  2175  000368  0E03               	movlw	3	;volatile
  2176  00036A  D033               	goto	L10
  2177  00036C                     l3078:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;MRF24J40c.c: 574: Rx.payloadLength = Rx.frameLength + (RXBuffer1 - readPoint) + 1;
  2181  00036C  0100               	movlb	0	; () banked
  2182  00036E  51B8               	movf	RadioRXPacket@readPoint& (0+255),w,b
  2183  000370  0800               	sublw	0
  2184  000372  0100               	movlb	0	; () banked
  2185  000374  2582               	addwf	_Rx& (0+255),w,b
  2186  000376  0100               	movlb	0	; () banked
  2187  000378  6FB4               	movwf	??_RadioRXPacket& (0+255),b
  2188  00037A  0100               	movlb	0	; () banked
  2189  00037C  29B4               	incf	??_RadioRXPacket& (0+255),w,b
  2190  00037E  0100               	movlb	0	; () banked
  2191  000380  6F9A               	movwf	(_Rx+24)& (0+255),b
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;MRF24J40c.c: 575: Rx.lqi = RXBuffer1[RXBuffer1[0] + 3];
  2195  000382  0101               	movlb	1	; () banked
  2196  000384  5100               	movf	0,w,b	;volatile
  2197  000386  0100               	movlb	0	; () banked
  2198  000388  6FB4               	movwf	??_RadioRXPacket& (0+255),b
  2199  00038A  6BB5               	clrf	(??_RadioRXPacket+1)& (0+255),b
  2200  00038C  0E03               	movlw	3
  2201  00038E  0100               	movlb	0	; () banked
  2202  000390  27B4               	addwf	??_RadioRXPacket& (0+255),f,b
  2203  000392  0E00               	movlw	0
  2204  000394  23B5               	addwfc	(??_RadioRXPacket+1)& (0+255),f,b
  2205  000396  0101               	movlb	1	; () banked
  2206  000398  0E00               	movlw	0	;volatile
  2207  00039A  0100               	movlb	0	; () banked
  2208  00039C  25B4               	addwf	??_RadioRXPacket& (0+255),w,b
  2209  00039E  6ED9               	movwf	fsr2l,c
  2210  0003A0  0101               	movlb	1	; () banked
  2211  0003A2  0E01               	movlw	1	;volatile
  2212  0003A4  0100               	movlb	0	; () banked
  2213  0003A6  21B5               	addwfc	(??_RadioRXPacket+1)& (0+255),w,b
  2214  0003A8  6EDA               	movwf	fsr2h,c
  2215  0003AA  50DF               	movf	indf2,w,c
  2216  0003AC  0100               	movlb	0	; () banked
  2217  0003AE  6F9D               	movwf	(_Rx+27)& (0+255),b
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;MRF24J40c.c: 576: Rx.rssi = RXBuffer1[RXBuffer1[0] + 4];
  2221  0003B0  0101               	movlb	1	; () banked
  2222  0003B2  5100               	movf	0,w,b	;volatile
  2223  0003B4  0100               	movlb	0	; () banked
  2224  0003B6  6FB4               	movwf	??_RadioRXPacket& (0+255),b
  2225  0003B8  6BB5               	clrf	(??_RadioRXPacket+1)& (0+255),b
  2226  0003BA  0E04               	movlw	4
  2227  0003BC  0100               	movlb	0	; () banked
  2228  0003BE  27B4               	addwf	??_RadioRXPacket& (0+255),f,b
  2229  0003C0  0E00               	movlw	0
  2230  0003C2  23B5               	addwfc	(??_RadioRXPacket+1)& (0+255),f,b
  2231  0003C4  0101               	movlb	1	; () banked
  2232  0003C6  0E00               	movlw	0	;volatile
  2233  0003C8  0100               	movlb	0	; () banked
  2234  0003CA  25B4               	addwf	??_RadioRXPacket& (0+255),w,b
  2235  0003CC  6ED9               	movwf	fsr2l,c
  2236  0003CE  0101               	movlb	1	; () banked
  2237  0003D0  0E01               	movlw	1	;volatile
  2238  0003D2                     L10:
  2239  0003D2  0100               	movlb	0	; () banked
  2240  0003D4  21B5               	addwfc	(??_RadioRXPacket+1)& (0+255),w,b
  2241  0003D6  6EDA               	movwf	fsr2h,c
  2242  0003D8  50DF               	movf	indf2,w,c
  2243  0003DA  0100               	movlb	0	; () banked
  2244  0003DC  6F9E               	movwf	(_Rx+28)& (0+255),b
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;MRF24J40c.c: 577: }
  2248                           ;MRF24J40c.c: 579: return RadioStatus.RXPacketCount;
  2249                           
  2250                           ; BSR set to: 0
  2251  0003DE  0100               	movlb	0	; () banked
  2252  0003E0  5163               	movf	(_RadioStatus+3)& (0+255),w,b	;volatile
  2253  0003E2                     l149:
  2254                           
  2255                           ; BSR set to: 0
  2256  0003E2  0012               	return	
  2257  0003E4                     __end_of_RadioRXPacket:
  2258                           	opt stack 0
  2259                           postinc0	equ	0xFEE
  2260                           wreg	equ	0xFE8
  2261                           indf2	equ	0xFDF
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function _readBytes *****************
  2267 ;; Defined at:
  2268 ;;		line 32 in file "MRF24J40c.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  dstPtr          2    0[BANK0 ] PTR unsigned char 
  2271 ;;		 -> Rx(29), 
  2272 ;;  srcPtr          2    2[BANK0 ] PTR unsigned char 
  2273 ;;		 -> RXBuffer1(144), RXBuffer2(144), 
  2274 ;;  count           2    4[BANK0 ] unsigned int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2    0[BANK0 ] PTR unsigned char 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2286 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;Total ram usage:        6 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    4
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_RadioRXPacket
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text6
  2301  001096                     __ptext6:
  2302                           	opt stack 0
  2303  001096                     _readBytes:
  2304                           	opt stack 25
  2305                           
  2306                           ;MRF24J40c.c: 33: while (count--)
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;incstack = 0
  2310  001096  D010               	goto	l2800
  2311  001098                     l2794:
  2312                           
  2313                           ;MRF24J40c.c: 34: *dstPtr++ = *srcPtr++;
  2314  001098  C0A1  FFD9         	movff	readBytes@srcPtr,fsr2l
  2315  00109C  C0A2  FFDA         	movff	readBytes@srcPtr+1,fsr2h
  2316  0010A0  C09F  FFE1         	movff	readBytes@dstPtr,fsr1l
  2317  0010A4  C0A0  FFE2         	movff	readBytes@dstPtr+1,fsr1h
  2318  0010A8  CFDF FFE7          	movff	indf2,indf1
  2319  0010AC  0100               	movlb	0	; () banked
  2320  0010AE  4BA1               	infsnz	readBytes@srcPtr& (0+255),f,b
  2321  0010B0  2BA2               	incf	(readBytes@srcPtr+1)& (0+255),f,b
  2322                           
  2323                           ; BSR set to: 0
  2324  0010B2  0100               	movlb	0	; () banked
  2325  0010B4  4B9F               	infsnz	readBytes@dstPtr& (0+255),f,b
  2326  0010B6  2BA0               	incf	(readBytes@dstPtr+1)& (0+255),f,b
  2327  0010B8                     l2800:
  2328  0010B8  0100               	movlb	0	; () banked
  2329  0010BA  07A3               	decf	readBytes@count& (0+255),f,b
  2330  0010BC  A0D8               	btfss	status,0,c
  2331  0010BE  07A4               	decf	(readBytes@count+1)& (0+255),f,b
  2332  0010C0  0100               	movlb	0	; () banked
  2333  0010C2  29A3               	incf	readBytes@count& (0+255),w,b
  2334  0010C4  B4D8               	btfsc	status,2,c
  2335  0010C6  29A4               	incf	(readBytes@count+1)& (0+255),w,b
  2336  0010C8  A4D8               	btfss	status,2,c
  2337  0010CA  D7E6               	goto	l2794
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;MRF24J40c.c: 35: return srcPtr;
  2341                           
  2342                           ; BSR set to: 0
  2343  0010CC  0100               	movlb	0	; () banked
  2344  0010CE  C0A2  F0A0         	movff	readBytes@srcPtr+1,?_readBytes+1
  2345  0010D2  0100               	movlb	0	; () banked
  2346  0010D4  C0A1  F09F         	movff	readBytes@srcPtr,?_readBytes
  2347                           
  2348                           ; BSR set to: 0
  2349                           
  2350                           ; BSR set to: 0
  2351  0010D8  0012               	return	
  2352  0010DA                     __end_of_readBytes:
  2353                           	opt stack 0
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           indf1	equ	0xFE7
  2357                           fsr1h	equ	0xFE2
  2358                           fsr1l	equ	0xFE1
  2359                           indf2	equ	0xFDF
  2360                           fsr2h	equ	0xFDA
  2361                           fsr2l	equ	0xFD9
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _RadioDiscardPacket *****************
  2365 ;; Defined at:
  2366 ;;		line 582 in file "MRF24J40c.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    4
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_RadioRXPacket
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text7
  2396  00128C                     __ptext7:
  2397                           	opt stack 0
  2398  00128C                     _RadioDiscardPacket:
  2399                           	opt stack 25
  2400                           
  2401                           ;MRF24J40c.c: 583: if (RadioStatus.RXPacketCount)
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;incstack = 0
  2405  00128C  0100               	movlb	0	; () banked
  2406  00128E  5163               	movf	(_RadioStatus+3)& (0+255),w,b	;volatile
  2407  001290  B4D8               	btfsc	status,2,c
  2408  001292  D008               	goto	l2924
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;MRF24J40c.c: 584: {
  2412                           ;MRF24J40c.c: 585: RadioStatus.RXPacketCount--;
  2413  001294  0100               	movlb	0	; () banked
  2414  001296  0763               	decf	(_RadioStatus+3)& (0+255),f,b	;volatile
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;MRF24J40c.c: 586: RadioStatus.RXReadBuffer = (RadioStatus.RXReadBuffer + 1) & (1);
  2418  001298  0100               	movlb	0	; () banked
  2419  00129A  2962               	incf	(_RadioStatus+2)& (0+255),w,b	;volatile
  2420  00129C  0B01               	andlw	1
  2421  00129E  0100               	movlb	0	; () banked
  2422  0012A0  6F62               	movwf	(_RadioStatus+2)& (0+255),b	;volatile
  2423                           
  2424                           ;MRF24J40c.c: 587: } else
  2425  0012A2  D003               	goto	l171
  2426  0012A4                     l2924:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;MRF24J40c.c: 588: RadioStatus.RadioExtraDiscard++;
  2430  0012A4  0100               	movlb	0	; () banked
  2431  0012A6  4B7C               	infsnz	(_RadioStatus+28)& (0+255),f,b	;volatile
  2432  0012A8  2B7D               	incf	(_RadioStatus+29)& (0+255),f,b	;volatile
  2433  0012AA                     l171:
  2434                           
  2435                           ; BSR set to: 0
  2436  0012AA  0012               	return	
  2437  0012AC                     __end_of_RadioDiscardPacket:
  2438                           	opt stack 0
  2439                           postinc0	equ	0xFEE
  2440                           wreg	equ	0xFE8
  2441                           indf1	equ	0xFE7
  2442                           fsr1h	equ	0xFE2
  2443                           fsr1l	equ	0xFE1
  2444                           indf2	equ	0xFDF
  2445                           fsr2h	equ	0xFDA
  2446                           fsr2l	equ	0xFD9
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _RadioInitP2P *****************
  2450 ;; Defined at:
  2451 ;;		line 200 in file "main.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;		None               void
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    4
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text8
  2480  001050                     __ptext8:
  2481                           	opt stack 0
  2482  001050                     _RadioInitP2P:
  2483                           	opt stack 26
  2484                           
  2485                           ;main.c: 206: Tx.frameType = 0b001;
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;incstack = 0
  2489  001050  5009               	movf	_Tx+1,w,c
  2490  001052  0BF8               	andlw	-8
  2491  001054  0901               	iorlw	1
  2492  001056  6E09               	movwf	_Tx+1,c
  2493                           
  2494                           ;main.c: 207: Tx.securityEnabled = 0;
  2495  001058  9609               	bcf	_Tx+1,3,c
  2496                           
  2497                           ;main.c: 208: Tx.framePending = 0;
  2498  00105A  9809               	bcf	_Tx+1,4,c
  2499                           
  2500                           ;main.c: 209: Tx.ackRequest = 1;
  2501  00105C  8A09               	bsf	_Tx+1,5,c
  2502                           
  2503                           ;main.c: 210: Tx.panIDcomp = 1;
  2504  00105E  8C09               	bsf	_Tx+1,6,c
  2505                           
  2506                           ;main.c: 211: Tx.dstAddrMode = (2);
  2507  001060  500A               	movf	_Tx+2,w,c
  2508  001062  0BF3               	andlw	-13
  2509  001064  0908               	iorlw	8
  2510  001066  6E0A               	movwf	_Tx+2,c
  2511                           
  2512                           ;main.c: 212: Tx.frameVersion = 0;
  2513  001068  0ECF               	movlw	-49
  2514  00106A  160A               	andwf	_Tx+2,f,c
  2515                           
  2516                           ;main.c: 213: Tx.srcAddrMode = (0);
  2517  00106C  0E3F               	movlw	-193
  2518  00106E  160A               	andwf	_Tx+2,f,c
  2519                           
  2520                           ;main.c: 214: Tx.dstPANID = RadioStatus.MyPANID;
  2521  001070  C070  F00C         	movff	_RadioStatus+16,_Tx+4	;volatile
  2522  001074  C071  F00D         	movff	_RadioStatus+17,_Tx+5	;volatile
  2523                           
  2524                           ;main.c: 215: Tx.dstAddr1 = RadioStatus.MyShortAddress;
  2525  001078  0100               	movlb	0	; () banked
  2526  00107A  C066  F00E         	movff	_RadioStatus+6,_Tx+6	;volatile
  2527  00107E  0100               	movlb	0	; () banked
  2528  001080  C067  F00F         	movff	_RadioStatus+7,_Tx+7	;volatile
  2529  001084  6A10               	clrf	_Tx+8,c
  2530  001086  6A11               	clrf	_Tx+9,c
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;main.c: 216: Tx.payload = txPayload;
  2534  001088  0101               	movlb	1	; () banked
  2535  00108A  0E01               	movlw	high _txPayload
  2536  00108C  6E22               	movwf	_Tx+26,c
  2537  00108E  0101               	movlb	1	; () banked
  2538  001090  0E90               	movlw	low _txPayload
  2539  001092  6E21               	movwf	_Tx+25,c
  2540                           
  2541                           ; BSR set to: 1
  2542  001094  0012               	return	
  2543  001096                     __end_of_RadioInitP2P:
  2544                           	opt stack 0
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           indf1	equ	0xFE7
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _RadioInit *****************
  2556 ;; Defined at:
  2557 ;;		line 258 in file "MRF24J40c.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  radio           1   21[BANK0 ] enum E6350
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      enum E6350
  2564 ;; Registers used:
  2565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;Total ram usage:        1 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    9
  2578 ;; This function calls:
  2579 ;;		_initMRF24J40
  2580 ;;		_memset
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text9
  2587  000D00                     __ptext9:
  2588                           	opt stack 0
  2589  000D00                     _RadioInit:
  2590                           	opt stack 21
  2591                           
  2592                           ;MRF24J40c.c: 260: BOOL radio;
  2593                           ;MRF24J40c.c: 262: memset((void*) &RadioStatus, 0, sizeof (RadioStatus));
  2594                           
  2595                           ; BSR set to: 1
  2596                           ;incstack = 0
  2597  000D00  0100               	movlb	0	; () banked
  2598  000D02  0E00               	movlw	high _RadioStatus	;volatile
  2599  000D04  0100               	movlb	0	; () banked
  2600  000D06  6FA0               	movwf	(memset@p1+1)& (0+255),b
  2601  000D08  0100               	movlb	0	; () banked
  2602  000D0A  0E60               	movlw	low _RadioStatus	;volatile
  2603  000D0C  0100               	movlb	0	; () banked
  2604  000D0E  6F9F               	movwf	memset@p1& (0+255),b
  2605  000D10  0E00               	movlw	0
  2606  000D12  0100               	movlb	0	; () banked
  2607  000D14  6FA2               	movwf	(memset@c+1)& (0+255),b
  2608  000D16  0E00               	movlw	0
  2609  000D18  0100               	movlb	0	; () banked
  2610  000D1A  6FA1               	movwf	memset@c& (0+255),b
  2611  000D1C  0E00               	movlw	0
  2612  000D1E  0100               	movlb	0	; () banked
  2613  000D20  6FA4               	movwf	(memset@n+1)& (0+255),b
  2614  000D22  0E22               	movlw	34
  2615  000D24  0100               	movlb	0	; () banked
  2616  000D26  6FA3               	movwf	memset@n& (0+255),b
  2617  000D28  EC8A  F008         	call	_memset	;wreg free
  2618                           
  2619                           ;MRF24J40c.c: 264: RadioStatus.MyPANID = (0x0015);
  2620  000D2C  0E00               	movlw	0
  2621  000D2E  0100               	movlb	0	; () banked
  2622  000D30  6F71               	movwf	(_RadioStatus+17)& (0+255),b	;volatile
  2623  000D32  0E15               	movlw	21
  2624  000D34  0100               	movlb	0	; () banked
  2625  000D36  6F70               	movwf	(_RadioStatus+16)& (0+255),b	;volatile
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;MRF24J40c.c: 265: RadioStatus.MyShortAddress = (0xaa11);
  2629  000D38  0EAA               	movlw	170
  2630  000D3A  0100               	movlb	0	; () banked
  2631  000D3C  6F67               	movwf	(_RadioStatus+7)& (0+255),b	;volatile
  2632  000D3E  0E11               	movlw	17
  2633  000D40  0100               	movlb	0	; () banked
  2634  000D42  6F66               	movwf	(_RadioStatus+6)& (0+255),b	;volatile
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;MRF24J40c.c: 266: RadioStatus.MyLongAddress1 = (0xaa55aa55);
  2638  000D44  0E55               	movlw	85
  2639  000D46  0100               	movlb	0	; () banked
  2640  000D48  6F68               	movwf	(_RadioStatus+8)& (0+255),b	;volatile
  2641  000D4A  0EAA               	movlw	170
  2642  000D4C  0100               	movlb	0	; () banked
  2643  000D4E  6F69               	movwf	(_RadioStatus+9)& (0+255),b	;volatile
  2644  000D50  0E55               	movlw	85
  2645  000D52  0100               	movlb	0	; () banked
  2646  000D54  6F6A               	movwf	(_RadioStatus+10)& (0+255),b	;volatile
  2647  000D56  0EAA               	movlw	170
  2648  000D58  0100               	movlb	0	; () banked
  2649  000D5A  6F6B               	movwf	(_RadioStatus+11)& (0+255),b	;volatile
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;MRF24J40c.c: 267: RadioStatus.MyLongAddress2 = (0xaa55aa55);
  2653  000D5C  0E55               	movlw	85
  2654  000D5E  0100               	movlb	0	; () banked
  2655  000D60  6F6C               	movwf	(_RadioStatus+12)& (0+255),b	;volatile
  2656  000D62  0EAA               	movlw	170
  2657  000D64  0100               	movlb	0	; () banked
  2658  000D66  6F6D               	movwf	(_RadioStatus+13)& (0+255),b	;volatile
  2659  000D68  0E55               	movlw	85
  2660  000D6A  0100               	movlb	0	; () banked
  2661  000D6C  6F6E               	movwf	(_RadioStatus+14)& (0+255),b	;volatile
  2662  000D6E  0EAA               	movlw	170
  2663  000D70  0100               	movlb	0	; () banked
  2664  000D72  6F6F               	movwf	(_RadioStatus+15)& (0+255),b	;volatile
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;MRF24J40c.c: 269: RadioStatus.Channel = 22;
  2668  000D74  0E16               	movlw	22
  2669  000D76  0100               	movlb	0	; () banked
  2670  000D78  6F65               	movwf	(_RadioStatus+5)& (0+255),b	;volatile
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;MRF24J40c.c: 271: radio = initMRF24J40();
  2674  000D7A  EC16  F003         	call	_initMRF24J40	;wreg free
  2675  000D7E  0100               	movlb	0	; () banked
  2676  000D80  6FB4               	movwf	RadioInit@radio& (0+255),b
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;MRF24J40c.c: 273: INTCONbits.INT0IE = 1;
  2680  000D82  88F2               	bsf	intcon,4,c	;volatile
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;MRF24J40c.c: 274: INTCON2bits.INTEDG0 = 0;
  2684  000D84  9CF1               	bcf	intcon2,6,c	;volatile
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;MRF24J40c.c: 275: INTCONbits.GIE = 1;
  2688  000D86  8EF2               	bsf	intcon,7,c	;volatile
  2689                           
  2690                           ; BSR set to: 0
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;MRF24J40c.c: 277: return radio;
  2694                           ;	Return value of _RadioInit is never used
  2695  000D88  0012               	return	
  2696  000D8A                     __end_of_RadioInit:
  2697                           	opt stack 0
  2698                           intcon	equ	0xFF2
  2699                           intcon2	equ	0xFF1
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           indf1	equ	0xFE7
  2703                           fsr1h	equ	0xFE2
  2704                           fsr1l	equ	0xFE1
  2705                           indf2	equ	0xFDF
  2706                           fsr2h	equ	0xFDA
  2707                           fsr2l	equ	0xFD9
  2708                           status	equ	0xFD8
  2709                           
  2710 ;; *************** function _memset *****************
  2711 ;; Defined at:
  2712 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  p1              2    0[BANK0 ] PTR void 
  2715 ;;		 -> RadioStatus(34), 
  2716 ;;  c               2    2[BANK0 ] int 
  2717 ;;  n               2    4[BANK0 ] unsigned int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  p               2    6[BANK0 ] PTR unsigned char 
  2720 ;;		 -> RadioStatus(34), 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    0[BANK0 ] PTR void 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2730 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;Total ram usage:        8 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:    4
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_RadioInit
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text10
  2745  001114                     __ptext10:
  2746                           	opt stack 0
  2747  001114                     _memset:
  2748                           	opt stack 25
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;incstack = 0
  2752  001114  0100               	movlb	0	; () banked
  2753  001116  C0A0  F0A6         	movff	memset@p1+1,memset@p+1
  2754  00111A  0100               	movlb	0	; () banked
  2755  00111C  C09F  F0A5         	movff	memset@p1,memset@p
  2756  001120  D00A               	goto	l2882
  2757  001122                     l2878:
  2758                           
  2759                           ; BSR set to: 0
  2760  001122  C0A5  FFD9         	movff	memset@p,fsr2l
  2761  001126  C0A6  FFDA         	movff	memset@p+1,fsr2h
  2762  00112A  0100               	movlb	0	; () banked
  2763  00112C  C0A1  FFDF         	movff	memset@c,indf2
  2764                           
  2765                           ; BSR set to: 0
  2766  001130  0100               	movlb	0	; () banked
  2767  001132  4BA5               	infsnz	memset@p& (0+255),f,b
  2768  001134  2BA6               	incf	(memset@p+1)& (0+255),f,b
  2769  001136                     l2882:
  2770                           
  2771                           ; BSR set to: 0
  2772  001136  0100               	movlb	0	; () banked
  2773  001138  07A3               	decf	memset@n& (0+255),f,b
  2774  00113A  A0D8               	btfss	status,0,c
  2775  00113C  07A4               	decf	(memset@n+1)& (0+255),f,b
  2776  00113E  0100               	movlb	0	; () banked
  2777  001140  29A3               	incf	memset@n& (0+255),w,b
  2778  001142  B4D8               	btfsc	status,2,c
  2779  001144  29A4               	incf	(memset@n+1)& (0+255),w,b
  2780  001146  B4D8               	btfsc	status,2,c
  2781                           
  2782                           ; BSR set to: 0
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;	Return value of _memset is never used
  2786  001148  0012               	return	
  2787  00114A  D7EB               	goto	l2878
  2788  00114C                     __end_of_memset:
  2789                           	opt stack 0
  2790                           intcon	equ	0xFF2
  2791                           intcon2	equ	0xFF1
  2792                           postinc0	equ	0xFEE
  2793                           wreg	equ	0xFE8
  2794                           indf1	equ	0xFE7
  2795                           fsr1h	equ	0xFE2
  2796                           fsr1l	equ	0xFE1
  2797                           indf2	equ	0xFDF
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _initMRF24J40 *****************
  2803 ;; Defined at:
  2804 ;;		line 178 in file "MRF24J40c.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  i               1   20[BANK0 ] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      unsigned char 
  2811 ;; Registers used:
  2812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    8
  2825 ;; This function calls:
  2826 ;;		_RadioSetAddress
  2827 ;;		_RadioSetChannel
  2828 ;;		_highRead
  2829 ;;		_highWrite
  2830 ;;		_lowRead
  2831 ;;		_lowWrite
  2832 ;; This function is called by:
  2833 ;;		_RadioInit
  2834 ;;		_RadioSetSleep
  2835 ;;		_RadioTXPacket
  2836 ;;		_RadioRXPacket
  2837 ;;		_RadioWaitTXResult
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text11
  2842  00062C                     __ptext11:
  2843                           	opt stack 0
  2844  00062C                     _initMRF24J40:
  2845                           	opt stack 21
  2846                           
  2847                           ;MRF24J40c.c: 179: UINT8 i;
  2848                           ;MRF24J40c.c: 183: RadioStatus.ResetCount++;
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;incstack = 0
  2852  00062C  0E01               	movlw	1
  2853  00062E  0100               	movlb	0	; () banked
  2854  000630  2772               	addwf	(_RadioStatus+18)& (0+255),f,b	;volatile
  2855  000632  0E00               	movlw	0
  2856  000634  0100               	movlb	0	; () banked
  2857  000636  2373               	addwfc	(_RadioStatus+19)& (0+255),f,b	;volatile
  2858  000638  0100               	movlb	0	; () banked
  2859  00063A  2374               	addwfc	(_RadioStatus+20)& (0+255),f,b	;volatile
  2860  00063C  0100               	movlb	0	; () banked
  2861  00063E  2375               	addwfc	(_RadioStatus+21)& (0+255),f,b	;volatile
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;MRF24J40c.c: 185: RadioStatus.TX_BUSY = 0;
  2865  000640  0100               	movlb	0	; () banked
  2866  000642  9160               	bcf	_RadioStatus& (0+255),0,b	;volatile
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;MRF24J40c.c: 186: RadioStatus.TX_FAIL = 1;
  2870  000644  0100               	movlb	0	; () banked
  2871  000646  8560               	bsf	_RadioStatus& (0+255),2,b	;volatile
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;MRF24J40c.c: 187: RadioStatus.TX_PENDING_ACK = 0;
  2875  000648  0100               	movlb	0	; () banked
  2876  00064A  9360               	bcf	_RadioStatus& (0+255),1,b	;volatile
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;MRF24J40c.c: 188: RadioStatus.SLEEPING = 0;
  2880  00064C  0100               	movlb	0	; () banked
  2881  00064E  9D60               	bcf	_RadioStatus& (0+255),6,b	;volatile
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;MRF24J40c.c: 189: RadioStatus.RXReadBuffer = 0;
  2885  000650  0E00               	movlw	0
  2886  000652  0100               	movlb	0	; () banked
  2887  000654  6F62               	movwf	(_RadioStatus+2)& (0+255),b	;volatile
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;MRF24J40c.c: 194: lowWrite((0x55), 0x07);
  2891  000656  0E07               	movlw	7
  2892  000658  0100               	movlb	0	; () banked
  2893  00065A  6FA2               	movwf	lowWrite@value& (0+255),b
  2894  00065C  0E55               	movlw	85
  2895  00065E  ECDA  F008         	call	_lowWrite
  2896  000662                     l2820:
  2897                           
  2898                           ;MRF24J40c.c: 197: i = lowRead((0x54));
  2899  000662  0E54               	movlw	84
  2900  000664  ECC1  F008         	call	_lowRead
  2901  000668  0100               	movlb	0	; () banked
  2902  00066A  6FB3               	movwf	initMRF24J40@i& (0+255),b
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;MRF24J40c.c: 200: } while ((i & 0x07) != (UINT8) 0x00);
  2906  00066C  C0B3  F0B2         	movff	initMRF24J40@i,??_initMRF24J40
  2907  000670  0E07               	movlw	7
  2908  000672  0100               	movlb	0	; () banked
  2909  000674  17B2               	andwf	??_initMRF24J40& (0+255),f,b
  2910  000676  A4D8               	btfss	status,2,c
  2911  000678  D7F4               	goto	l2820
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;MRF24J40c.c: 202: lowWrite((0x1B), 0x01);
  2915                           
  2916                           ; BSR set to: 0
  2917  00067A  0E01               	movlw	1
  2918  00067C  0100               	movlb	0	; () banked
  2919  00067E  6FA2               	movwf	lowWrite@value& (0+255),b
  2920  000680  0E1B               	movlw	27
  2921  000682  ECDA  F008         	call	_lowWrite
  2922                           
  2923                           ;MRF24J40c.c: 204: RadioSetAddress(RadioStatus.MyShortAddress, RadioStatus.MyLongAddress
      +                          1, RadioStatus.MyLongAddress2, RadioStatus.MyPANID);
  2924  000686  C066  F0A5         	movff	_RadioStatus+6,RadioSetAddress@shortAddress	;volatile
  2925  00068A  C067  F0A6         	movff	_RadioStatus+7,RadioSetAddress@shortAddress+1	;volatile
  2926  00068E  C068  F0A7         	movff	_RadioStatus+8,RadioSetAddress@longAddress1	;volatile
  2927  000692  C069  F0A8         	movff	_RadioStatus+9,RadioSetAddress@longAddress1+1	;volatile
  2928  000696  C06A  F0A9         	movff	_RadioStatus+10,RadioSetAddress@longAddress1+2	;volatile
  2929  00069A  C06B  F0AA         	movff	_RadioStatus+11,RadioSetAddress@longAddress1+3	;volatile
  2930  00069E  C06C  F0AB         	movff	_RadioStatus+12,RadioSetAddress@longAddress2	;volatile
  2931  0006A2  C06D  F0AC         	movff	_RadioStatus+13,RadioSetAddress@longAddress2+1	;volatile
  2932  0006A6  C06E  F0AD         	movff	_RadioStatus+14,RadioSetAddress@longAddress2+2	;volatile
  2933  0006AA  C06F  F0AE         	movff	_RadioStatus+15,RadioSetAddress@longAddress2+3	;volatile
  2934  0006AE  C070  F0AF         	movff	_RadioStatus+16,RadioSetAddress@panID	;volatile
  2935  0006B2  C071  F0B0         	movff	_RadioStatus+17,RadioSetAddress@panID+1	;volatile
  2936  0006B6  ECC3  F005         	call	_RadioSetAddress	;wreg free
  2937                           
  2938                           ;MRF24J40c.c: 206: highWrite((0x200), 0x03);
  2939  0006BA  0E02               	movlw	2
  2940  0006BC  0100               	movlb	0	; () banked
  2941  0006BE  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  2942  0006C0  0E00               	movlw	0
  2943  0006C2  0100               	movlb	0	; () banked
  2944  0006C4  6FA2               	movwf	highWrite@address& (0+255),b
  2945  0006C6  0E03               	movlw	3
  2946  0006C8  0100               	movlb	0	; () banked
  2947  0006CA  6FA4               	movwf	highWrite@value& (0+255),b
  2948  0006CC  ECC5  F006         	call	_highWrite	;wreg free
  2949                           
  2950                           ;MRF24J40c.c: 207: highWrite((0x201), 0x02);
  2951  0006D0  0E02               	movlw	2
  2952  0006D2  0100               	movlb	0	; () banked
  2953  0006D4  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  2954  0006D6  0E01               	movlw	1
  2955  0006D8  0100               	movlb	0	; () banked
  2956  0006DA  6FA2               	movwf	highWrite@address& (0+255),b
  2957  0006DC  0E02               	movlw	2
  2958  0006DE  0100               	movlb	0	; () banked
  2959  0006E0  6FA4               	movwf	highWrite@value& (0+255),b
  2960  0006E2  ECC5  F006         	call	_highWrite	;wreg free
  2961                           
  2962                           ;MRF24J40c.c: 208: highWrite((0x202), 0x80);
  2963  0006E6  0E02               	movlw	2
  2964  0006E8  0100               	movlb	0	; () banked
  2965  0006EA  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  2966  0006EC  0E02               	movlw	2
  2967  0006EE  0100               	movlb	0	; () banked
  2968  0006F0  6FA2               	movwf	highWrite@address& (0+255),b
  2969  0006F2  0E80               	movlw	128
  2970  0006F4  0100               	movlb	0	; () banked
  2971  0006F6  6FA4               	movwf	highWrite@value& (0+255),b
  2972  0006F8  ECC5  F006         	call	_highWrite	;wreg free
  2973                           
  2974                           ;MRF24J40c.c: 209: highWrite((0x203), (0x70));
  2975  0006FC  0E02               	movlw	2
  2976  0006FE  0100               	movlb	0	; () banked
  2977  000700  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  2978  000702  0E03               	movlw	3
  2979  000704  0100               	movlb	0	; () banked
  2980  000706  6FA2               	movwf	highWrite@address& (0+255),b
  2981  000708  0E70               	movlw	112
  2982  00070A  0100               	movlb	0	; () banked
  2983  00070C  6FA4               	movwf	highWrite@value& (0+255),b
  2984  00070E  ECC5  F006         	call	_highWrite	;wreg free
  2985                           
  2986                           ;MRF24J40c.c: 210: highWrite((0x206), 0x90);
  2987  000712  0E02               	movlw	2
  2988  000714  0100               	movlb	0	; () banked
  2989  000716  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  2990  000718  0E06               	movlw	6
  2991  00071A  0100               	movlb	0	; () banked
  2992  00071C  6FA2               	movwf	highWrite@address& (0+255),b
  2993  00071E  0E90               	movlw	144
  2994  000720  0100               	movlb	0	; () banked
  2995  000722  6FA4               	movwf	highWrite@value& (0+255),b
  2996  000724  ECC5  F006         	call	_highWrite	;wreg free
  2997                           
  2998                           ;MRF24J40c.c: 211: highWrite((0x207), 0x80);
  2999  000728  0E02               	movlw	2
  3000  00072A  0100               	movlb	0	; () banked
  3001  00072C  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  3002  00072E  0E07               	movlw	7
  3003  000730  0100               	movlb	0	; () banked
  3004  000732  6FA2               	movwf	highWrite@address& (0+255),b
  3005  000734  0E80               	movlw	128
  3006  000736  0100               	movlb	0	; () banked
  3007  000738  6FA4               	movwf	highWrite@value& (0+255),b
  3008  00073A  ECC5  F006         	call	_highWrite	;wreg free
  3009                           
  3010                           ;MRF24J40c.c: 212: highWrite((0x208), 0x10);
  3011  00073E  0E02               	movlw	2
  3012  000740  0100               	movlb	0	; () banked
  3013  000742  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  3014  000744  0E08               	movlw	8
  3015  000746  0100               	movlb	0	; () banked
  3016  000748  6FA2               	movwf	highWrite@address& (0+255),b
  3017  00074A  0E10               	movlw	16
  3018  00074C  0100               	movlb	0	; () banked
  3019  00074E  6FA4               	movwf	highWrite@value& (0+255),b
  3020  000750  ECC5  F006         	call	_highWrite	;wreg free
  3021                           
  3022                           ;MRF24J40c.c: 213: highWrite((0x220), 0x21);
  3023  000754  0E02               	movlw	2
  3024  000756  0100               	movlb	0	; () banked
  3025  000758  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  3026  00075A  0E20               	movlw	32
  3027  00075C  0100               	movlb	0	; () banked
  3028  00075E  6FA2               	movwf	highWrite@address& (0+255),b
  3029  000760  0E21               	movlw	33
  3030  000762  0100               	movlb	0	; () banked
  3031  000764  6FA4               	movwf	highWrite@value& (0+255),b
  3032  000766  ECC5  F006         	call	_highWrite	;wreg free
  3033                           
  3034                           ;MRF24J40c.c: 215: lowWrite((0x75), 0x80);
  3035  00076A  0E80               	movlw	128
  3036  00076C  0100               	movlb	0	; () banked
  3037  00076E  6FA2               	movwf	lowWrite@value& (0+255),b
  3038  000770  0E75               	movlw	117
  3039  000772  ECDA  F008         	call	_lowWrite
  3040                           
  3041                           ;MRF24J40c.c: 216: lowWrite((0x7D), 0x40);
  3042  000776  0E40               	movlw	64
  3043  000778  0100               	movlb	0	; () banked
  3044  00077A  6FA2               	movwf	lowWrite@value& (0+255),b
  3045  00077C  0E7D               	movlw	125
  3046  00077E  ECDA  F008         	call	_lowWrite
  3047                           
  3048                           ;MRF24J40c.c: 217: lowWrite((0x7F), 0x60);
  3049  000782  0E60               	movlw	96
  3050  000784  0100               	movlb	0	; () banked
  3051  000786  6FA2               	movwf	lowWrite@value& (0+255),b
  3052  000788  0E7F               	movlw	127
  3053  00078A  ECDA  F008         	call	_lowWrite
  3054                           
  3055                           ;MRF24J40c.c: 220: highWrite((0x22f), 0x0F);
  3056  00078E  0E02               	movlw	2
  3057  000790  0100               	movlb	0	; () banked
  3058  000792  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  3059  000794  0E2F               	movlw	47
  3060  000796  0100               	movlb	0	; () banked
  3061  000798  6FA2               	movwf	highWrite@address& (0+255),b
  3062  00079A  0E0F               	movlw	15
  3063  00079C  0100               	movlb	0	; () banked
  3064  00079E  6FA4               	movwf	highWrite@value& (0+255),b
  3065  0007A0  ECC5  F006         	call	_highWrite	;wreg free
  3066                           
  3067                           ;MRF24J40c.c: 223: lowWrite((0x31), 0x98);
  3068  0007A4  0E98               	movlw	152
  3069  0007A6  0100               	movlb	0	; () banked
  3070  0007A8  6FA2               	movwf	lowWrite@value& (0+255),b
  3071  0007AA  0E31               	movlw	49
  3072  0007AC  ECDA  F008         	call	_lowWrite
  3073                           
  3074                           ;MRF24J40c.c: 224: lowWrite((0x5D), 0x95);
  3075  0007B0  0E95               	movlw	149
  3076  0007B2  0100               	movlb	0	; () banked
  3077  0007B4  6FA2               	movwf	lowWrite@value& (0+255),b
  3078  0007B6  0E5D               	movlw	93
  3079  0007B8  ECDA  F008         	call	_lowWrite
  3080  0007BC                     l2856:
  3081  0007BC  0E02               	movlw	2
  3082  0007BE  0100               	movlb	0	; () banked
  3083  0007C0  6FA4               	movwf	(highRead@address+1)& (0+255),b
  3084  0007C2  0E0F               	movlw	15
  3085  0007C4  0100               	movlb	0	; () banked
  3086  0007C6  6FA3               	movwf	highRead@address& (0+255),b
  3087  0007C8  EC6C  F007         	call	_highRead	;wreg free
  3088  0007CC  0100               	movlb	0	; () banked
  3089  0007CE  6FB2               	movwf	??_initMRF24J40& (0+255),b
  3090  0007D0  0EA0               	movlw	160
  3091  0007D2  0100               	movlb	0	; () banked
  3092  0007D4  17B2               	andwf	??_initMRF24J40& (0+255),f,b
  3093  0007D6  0100               	movlb	0	; () banked
  3094  0007D8  51B2               	movf	??_initMRF24J40& (0+255),w,b
  3095  0007DA  0AA0               	xorlw	160
  3096  0007DC  A4D8               	btfss	status,2,c
  3097  0007DE  D7EE               	goto	l2856
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;MRF24J40c.c: 228: lowWrite((0x65), 0b11110110);
  3101                           
  3102                           ; BSR set to: 0
  3103  0007E0  0EF6               	movlw	246
  3104  0007E2  0100               	movlb	0	; () banked
  3105  0007E4  6FA2               	movwf	lowWrite@value& (0+255),b
  3106  0007E6  0E65               	movlw	101
  3107  0007E8  ECDA  F008         	call	_lowWrite
  3108                           
  3109                           ;MRF24J40c.c: 231: highWrite((0x200), 0x03);
  3110  0007EC  0E02               	movlw	2
  3111  0007EE  0100               	movlb	0	; () banked
  3112  0007F0  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  3113  0007F2  0E00               	movlw	0
  3114  0007F4  0100               	movlb	0	; () banked
  3115  0007F6  6FA2               	movwf	highWrite@address& (0+255),b
  3116  0007F8  0E03               	movlw	3
  3117  0007FA  0100               	movlb	0	; () banked
  3118  0007FC  6FA4               	movwf	highWrite@value& (0+255),b
  3119  0007FE  ECC5  F006         	call	_highWrite	;wreg free
  3120                           
  3121                           ;MRF24J40c.c: 232: highWrite((0x201), 0x02);
  3122  000802  0E02               	movlw	2
  3123  000804  0100               	movlb	0	; () banked
  3124  000806  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  3125  000808  0E01               	movlw	1
  3126  00080A  0100               	movlb	0	; () banked
  3127  00080C  6FA2               	movwf	highWrite@address& (0+255),b
  3128  00080E  0E02               	movlw	2
  3129  000810  0100               	movlb	0	; () banked
  3130  000812  6FA4               	movwf	highWrite@value& (0+255),b
  3131  000814  ECC5  F006         	call	_highWrite	;wreg free
  3132                           
  3133                           ;MRF24J40c.c: 234: RadioSetChannel(RadioStatus.Channel);
  3134  000818  0100               	movlb	0	; () banked
  3135  00081A  5165               	movf	(_RadioStatus+5)& (0+255),w,b	;volatile
  3136  00081C  ECD1  F007         	call	_RadioSetChannel
  3137                           
  3138                           ;MRF24J40c.c: 242: lowWrite((0x6D), 0x04);
  3139  000820  0E04               	movlw	4
  3140  000822  0100               	movlb	0	; () banked
  3141  000824  6FA2               	movwf	lowWrite@value& (0+255),b
  3142  000826  0E6D               	movlw	109
  3143  000828  ECDA  F008         	call	_lowWrite
  3144                           
  3145                           ;MRF24J40c.c: 244: lowWrite((0x6D), 0x00);
  3146  00082C  0E00               	movlw	0
  3147  00082E  0100               	movlb	0	; () banked
  3148  000830  6FA2               	movwf	lowWrite@value& (0+255),b
  3149  000832  0E6D               	movlw	109
  3150  000834  ECDA  F008         	call	_lowWrite
  3151                           
  3152                           ;MRF24J40c.c: 248: __nop();
  3153  000838  F000               	nop	
  3154                           
  3155                           ;MRF24J40c.c: 250: return 1;
  3156  00083A  0E01               	movlw	1
  3157  00083C  0012               	return	
  3158  00083E                     __end_of_initMRF24J40:
  3159                           	opt stack 0
  3160                           intcon	equ	0xFF2
  3161                           intcon2	equ	0xFF1
  3162                           postinc0	equ	0xFEE
  3163                           wreg	equ	0xFE8
  3164                           indf1	equ	0xFE7
  3165                           fsr1h	equ	0xFE2
  3166                           fsr1l	equ	0xFE1
  3167                           indf2	equ	0xFDF
  3168                           fsr2h	equ	0xFDA
  3169                           fsr2l	equ	0xFD9
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function _lowRead *****************
  3173 ;; Defined at:
  3174 ;;		line 137 in file "MRF24J40c.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  address         1    wreg     unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  address         1    4[BANK0 ] unsigned char 
  3179 ;;  tmpRFIE         1    6[BANK0 ] unsigned char 
  3180 ;;  toReturn        1    5[BANK0 ] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      unsigned char 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;Total ram usage:        3 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    6
  3197 ;; This function calls:
  3198 ;;		_SpiTake
  3199 ;; This function is called by:
  3200 ;;		_initMRF24J40
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text12
  3205  001182                     __ptext12:
  3206                           	opt stack 0
  3207  001182                     _lowRead:
  3208                           	opt stack 22
  3209                           
  3210                           ;incstack = 0
  3211                           ;lowRead@address stored from wreg
  3212  001182  0100               	movlb	0	; () banked
  3213  001184  6FA3               	movwf	lowRead@address& (0+255),b
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;MRF24J40c.c: 138: UINT8 toReturn;
  3217                           ;MRF24J40c.c: 140: UINT8 tmpRFIE = INTCONbits.INT0IE;
  3218  001186  0E00               	movlw	0
  3219  001188  B8F2               	btfsc	intcon,4,c	;volatile
  3220  00118A  0E01               	movlw	1
  3221  00118C  0100               	movlb	0	; () banked
  3222  00118E  6FA5               	movwf	lowRead@tmpRFIE& (0+255),b
  3223                           
  3224                           ;MRF24J40c.c: 141: INTCONbits.INT0IE = 0;
  3225  001190  98F2               	bcf	intcon,4,c	;volatile
  3226                           
  3227                           ;MRF24J40c.c: 142: LATDbits.LATD0 = 0;
  3228  001192  908C               	bcf	3980,0,c	;volatile
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;MRF24J40c.c: 144: toReturn = SpiTake(address);
  3232  001194  0100               	movlb	0	; () banked
  3233  001196  51A3               	movf	lowRead@address& (0+255),w,b
  3234  001198  ECA6  F008         	call	_SpiTake
  3235  00119C  0100               	movlb	0	; () banked
  3236  00119E  6FA4               	movwf	lowRead@toReturn& (0+255),b
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;MRF24J40c.c: 146: LATDbits.LATD0 = 1;
  3240  0011A0  808C               	bsf	3980,0,c	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;MRF24J40c.c: 147: INTCONbits.INT0IE = tmpRFIE;
  3244  0011A2  0100               	movlb	0	; () banked
  3245  0011A4  B1A5               	btfsc	lowRead@tmpRFIE& (0+255),0,b
  3246  0011A6  D002               	bra	u2095
  3247  0011A8  98F2               	bcf	intcon,4,c	;volatile
  3248  0011AA  D001               	bra	u2096
  3249  0011AC                     u2095:
  3250  0011AC  88F2               	bsf	intcon,4,c	;volatile
  3251  0011AE                     u2096:
  3252                           
  3253                           ;MRF24J40c.c: 148: return toReturn;
  3254  0011AE  0100               	movlb	0	; () banked
  3255  0011B0  51A4               	movf	lowRead@toReturn& (0+255),w,b
  3256                           
  3257                           ; BSR set to: 0
  3258                           
  3259                           ; BSR set to: 0
  3260  0011B2  0012               	return	
  3261  0011B4                     __end_of_lowRead:
  3262                           	opt stack 0
  3263                           intcon	equ	0xFF2
  3264                           intcon2	equ	0xFF1
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           indf1	equ	0xFE7
  3268                           fsr1h	equ	0xFE2
  3269                           fsr1l	equ	0xFE1
  3270                           indf2	equ	0xFDF
  3271                           fsr2h	equ	0xFDA
  3272                           fsr2l	equ	0xFD9
  3273                           status	equ	0xFD8
  3274                           
  3275 ;; *************** function _highRead *****************
  3276 ;; Defined at:
  3277 ;;		line 95 in file "MRF24J40c.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  address         2    4[BANK0 ] unsigned short 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  tmpRFIE         1    9[BANK0 ] unsigned char 
  3282 ;;  toReturn        1    8[BANK0 ] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      unsigned char 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;Total ram usage:        6 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    6
  3299 ;; This function calls:
  3300 ;;		_SpiTake
  3301 ;;		_spiPut
  3302 ;; This function is called by:
  3303 ;;		_initMRF24J40
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text13
  3308  000ED8                     __ptext13:
  3309                           	opt stack 0
  3310  000ED8                     _highRead:
  3311                           	opt stack 22
  3312                           
  3313                           ;MRF24J40c.c: 96: UINT8 toReturn, tmpRFIE;
  3314                           ;MRF24J40c.c: 97: tmpRFIE = 0;
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;incstack = 0
  3318  000ED8  0E00               	movlw	0
  3319  000EDA  0100               	movlb	0	; () banked
  3320  000EDC  6FA8               	movwf	highRead@tmpRFIE& (0+255),b
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;MRF24J40c.c: 98: if (INTCONbits.INT0IE)
  3324  000EDE  A8F2               	btfss	intcon,4,c	;volatile
  3325  000EE0  D003               	goto	l2710
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;MRF24J40c.c: 99: tmpRFIE = 1;
  3329  000EE2  0E01               	movlw	1
  3330  000EE4  0100               	movlb	0	; () banked
  3331  000EE6  6FA8               	movwf	highRead@tmpRFIE& (0+255),b
  3332  000EE8                     l2710:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;MRF24J40c.c: 101: INTCONbits.INT0IE = 0;
  3336  000EE8  98F2               	bcf	intcon,4,c	;volatile
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;MRF24J40c.c: 102: LATDbits.LATD0 = 0;
  3340  000EEA  908C               	bcf	3980,0,c	;volatile
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;MRF24J40c.c: 104: spiPut(((address >> 3)&0x7F) | 0x80);
  3344  000EEC  0100               	movlb	0	; () banked
  3345  000EEE  C0A3  F0A5         	movff	highRead@address,??_highRead
  3346  000EF2  0100               	movlb	0	; () banked
  3347  000EF4  C0A4  F0A6         	movff	highRead@address+1,??_highRead+1
  3348  000EF8  0100               	movlb	0	; () banked
  3349  000EFA  90D8               	bcf	status,0,c
  3350  000EFC  33A6               	rrcf	(??_highRead+1)& (0+255),f,b
  3351  000EFE  33A5               	rrcf	??_highRead& (0+255),f,b
  3352  000F00  0100               	movlb	0	; () banked
  3353  000F02  90D8               	bcf	status,0,c
  3354  000F04  33A6               	rrcf	(??_highRead+1)& (0+255),f,b
  3355  000F06  33A5               	rrcf	??_highRead& (0+255),f,b
  3356  000F08  0100               	movlb	0	; () banked
  3357  000F0A  90D8               	bcf	status,0,c
  3358  000F0C  33A6               	rrcf	(??_highRead+1)& (0+255),f,b
  3359  000F0E  33A5               	rrcf	??_highRead& (0+255),f,b
  3360  000F10  0100               	movlb	0	; () banked
  3361  000F12  51A5               	movf	??_highRead& (0+255),w,b
  3362  000F14  0B7F               	andlw	127
  3363  000F16  0980               	iorlw	128
  3364  000F18  EC80  F009         	call	_spiPut
  3365                           
  3366                           ;MRF24J40c.c: 105: toReturn = SpiTake(((address << 5)&0xE0));
  3367  000F1C  0100               	movlb	0	; () banked
  3368  000F1E  39A3               	swapf	highRead@address& (0+255),w,b
  3369  000F20  46E8               	rlncf	wreg,f,c
  3370  000F22  0BE0               	andlw	224
  3371  000F24  0BE0               	andlw	224
  3372  000F26  ECA6  F008         	call	_SpiTake
  3373  000F2A  0100               	movlb	0	; () banked
  3374  000F2C  6FA7               	movwf	highRead@toReturn& (0+255),b
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;MRF24J40c.c: 106: LATDbits.LATD0 = 1;
  3378  000F2E  808C               	bsf	3980,0,c	;volatile
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;MRF24J40c.c: 107: INTCONbits.INT0IE = tmpRFIE;
  3382  000F30  0100               	movlb	0	; () banked
  3383  000F32  B1A8               	btfsc	highRead@tmpRFIE& (0+255),0,b
  3384  000F34  D002               	bra	u2085
  3385  000F36  98F2               	bcf	intcon,4,c	;volatile
  3386  000F38  D001               	bra	u2086
  3387  000F3A                     u2085:
  3388  000F3A  88F2               	bsf	intcon,4,c	;volatile
  3389  000F3C                     u2086:
  3390                           
  3391                           ;MRF24J40c.c: 109: return toReturn;
  3392  000F3C  0100               	movlb	0	; () banked
  3393  000F3E  51A7               	movf	highRead@toReturn& (0+255),w,b
  3394                           
  3395                           ; BSR set to: 0
  3396                           
  3397                           ; BSR set to: 0
  3398  000F40  0012               	return	
  3399  000F42                     __end_of_highRead:
  3400                           	opt stack 0
  3401                           intcon	equ	0xFF2
  3402                           intcon2	equ	0xFF1
  3403                           postinc0	equ	0xFEE
  3404                           wreg	equ	0xFE8
  3405                           indf1	equ	0xFE7
  3406                           fsr1h	equ	0xFE2
  3407                           fsr1l	equ	0xFE1
  3408                           indf2	equ	0xFDF
  3409                           fsr2h	equ	0xFDA
  3410                           fsr2l	equ	0xFD9
  3411                           status	equ	0xFD8
  3412                           
  3413 ;; *************** function _SpiTake *****************
  3414 ;; Defined at:
  3415 ;;		line 68 in file "MRF24J40c.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  v               1    wreg     unsigned char 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  v               1    2[BANK0 ] unsigned char 
  3420 ;;  val             1    3[BANK0 ] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      unsigned char 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;Total ram usage:        2 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    5
  3437 ;; This function calls:
  3438 ;;		_ReadSPI2
  3439 ;;		_WriteSPI2
  3440 ;; This function is called by:
  3441 ;;		_highRead
  3442 ;;		_lowRead
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text14
  3447  00114C                     __ptext14:
  3448                           	opt stack 0
  3449  00114C                     _SpiTake:
  3450                           	opt stack 22
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;incstack = 0
  3454                           ;SpiTake@v stored from wreg
  3455  00114C  0100               	movlb	0	; () banked
  3456  00114E  6FA1               	movwf	SpiTake@v& (0+255),b
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;MRF24J40c.c: 71: unsigned char val;
  3460                           ;MRF24J40c.c: 73: LATDbits.LATD0 = 0;
  3461  001150  908C               	bcf	3980,0,c	;volatile
  3462                           
  3463                           ;MRF24J40c.c: 74: __nop();
  3464  001152  F000               	nop	
  3465                           
  3466                           ;MRF24J40c.c: 75: WriteSPI2(v);
  3467  001154  0100               	movlb	0	; () banked
  3468  001156  51A1               	movf	SpiTake@v& (0+255),w,b
  3469  001158  EC56  F009         	call	_WriteSPI2
  3470  00115C                     l57:
  3471  00115C  A064               	btfss	3940,0,c	;volatile
  3472  00115E  D7FE               	goto	l57
  3473                           
  3474                           ;MRF24J40c.c: 78: __nop();
  3475  001160  F000               	nop	
  3476                           
  3477                           ;MRF24J40c.c: 79: __nop();
  3478  001162  F000               	nop	
  3479                           
  3480                           ;MRF24J40c.c: 80: __nop();
  3481  001164  F000               	nop	
  3482                           
  3483                           ;MRF24J40c.c: 81: __nop();
  3484  001166  F000               	nop	
  3485                           
  3486                           ;MRF24J40c.c: 82: __nop();
  3487  001168  F000               	nop	
  3488                           
  3489                           ;MRF24J40c.c: 83: __nop();
  3490  00116A  F000               	nop	
  3491  00116C                     l60:
  3492  00116C  A064               	btfss	3940,0,c	;volatile
  3493  00116E  D7FE               	goto	l60
  3494                           
  3495                           ;MRF24J40c.c: 85: val = ReadSPI2();
  3496  001170  EC8B  F009         	call	_ReadSPI2	;wreg free
  3497  001174  0100               	movlb	0	; () banked
  3498  001176  6FA2               	movwf	SpiTake@val& (0+255),b
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;MRF24J40c.c: 86: LATDbits.LATD0 = 1;
  3502  001178  808C               	bsf	3980,0,c	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;MRF24J40c.c: 87: __nop();
  3506  00117A  F000               	nop	
  3507                           
  3508                           ;MRF24J40c.c: 88: return (val);
  3509  00117C  0100               	movlb	0	; () banked
  3510  00117E  51A2               	movf	SpiTake@val& (0+255),w,b
  3511                           
  3512                           ; BSR set to: 0
  3513                           
  3514                           ; BSR set to: 0
  3515  001180  0012               	return	
  3516  001182                     __end_of_SpiTake:
  3517                           	opt stack 0
  3518                           intcon	equ	0xFF2
  3519                           intcon2	equ	0xFF1
  3520                           postinc0	equ	0xFEE
  3521                           wreg	equ	0xFE8
  3522                           indf1	equ	0xFE7
  3523                           fsr1h	equ	0xFE2
  3524                           fsr1l	equ	0xFE1
  3525                           indf2	equ	0xFDF
  3526                           fsr2h	equ	0xFDA
  3527                           fsr2l	equ	0xFD9
  3528                           status	equ	0xFD8
  3529                           
  3530 ;; *************** function _ReadSPI2 *****************
  3531 ;; Defined at:
  3532 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi2read.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  TempVar         1    0[BANK0 ] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      unsigned char 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        1 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    4
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_SpiTake
  3557 ;;		_spiGet
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text15
  3562  001316                     __ptext15:
  3563                           	opt stack 0
  3564  001316                     _ReadSPI2:
  3565                           	opt stack 22
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;incstack = 0
  3569  001316  CF66 F09F          	movff	3942,ReadSPI2@TempVar	;volatile
  3570  00131A  9EA4               	bcf	4004,7,c	;volatile
  3571  00131C  0E00               	movlw	0
  3572  00131E  6E66               	movwf	3942,c	;volatile
  3573  001320                     l352:
  3574  001320  AEA4               	btfss	4004,7,c	;volatile
  3575  001322  D7FE               	goto	l352
  3576  001324  5066               	movf	3942,w,c	;volatile
  3577  001326  0012               	return	
  3578  001328                     __end_of_ReadSPI2:
  3579                           	opt stack 0
  3580                           intcon	equ	0xFF2
  3581                           intcon2	equ	0xFF1
  3582                           postinc0	equ	0xFEE
  3583                           wreg	equ	0xFE8
  3584                           indf1	equ	0xFE7
  3585                           fsr1h	equ	0xFE2
  3586                           fsr1l	equ	0xFE1
  3587                           indf2	equ	0xFDF
  3588                           fsr2h	equ	0xFDA
  3589                           fsr2l	equ	0xFD9
  3590                           status	equ	0xFD8
  3591                           
  3592 ;; *************** function _RadioSetChannel *****************
  3593 ;; Defined at:
  3594 ;;		line 306 in file "MRF24J40c.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  channel         1    wreg     unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  channel         1    9[BANK0 ] unsigned char 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      enum E6350
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;Total ram usage:        1 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    7
  3615 ;; This function calls:
  3616 ;;		_highWrite
  3617 ;;		_lowWrite
  3618 ;; This function is called by:
  3619 ;;		_initMRF24J40
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text16
  3624  000FA2                     __ptext16:
  3625                           	opt stack 0
  3626  000FA2                     _RadioSetChannel:
  3627                           	opt stack 21
  3628                           
  3629                           ;incstack = 0
  3630                           ;RadioSetChannel@channel stored from wreg
  3631  000FA2  0100               	movlb	0	; () banked
  3632  000FA4  6FA8               	movwf	RadioSetChannel@channel& (0+255),b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;MRF24J40c.c: 307: if (channel < 11 || channel > 26)
  3636  000FA6  0E0A               	movlw	10
  3637  000FA8  0100               	movlb	0	; () banked
  3638  000FAA  65A8               	cpfsgt	RadioSetChannel@channel& (0+255),b
  3639  000FAC  D027               	goto	l106
  3640                           
  3641                           ; BSR set to: 0
  3642  000FAE  0E1A               	movlw	26
  3643  000FB0  0100               	movlb	0	; () banked
  3644  000FB2  65A8               	cpfsgt	RadioSetChannel@channel& (0+255),b
  3645  000FB4  D001               	goto	l2780
  3646  000FB6  D022               	goto	l106
  3647  000FB8                     l2780:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;MRF24J40c.c: 311: if (channel == 26)
  3651  000FB8  0100               	movlb	0	; () banked
  3652  000FBA  51A8               	movf	RadioSetChannel@channel& (0+255),w,b
  3653  000FBC  0A1A               	xorlw	26
  3654  000FBE  B4D8               	btfsc	status,2,c
  3655  000FC0  D01D               	goto	l106
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;MRF24J40c.c: 315: RadioStatus.Channel = channel;
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;MRF24J40c.c: 312: return FALSE;
  3662                           ;	Return value of _RadioSetChannel is never used
  3663  000FC2  C0A8  F065         	movff	RadioSetChannel@channel,_RadioStatus+5	;volatile
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;MRF24J40c.c: 316: highWrite((0x200), ((channel - 11) << 4) | 0x03);
  3667  000FC6  0E02               	movlw	2
  3668  000FC8  0100               	movlb	0	; () banked
  3669  000FCA  6FA3               	movwf	(highWrite@address+1)& (0+255),b
  3670  000FCC  0E00               	movlw	0
  3671  000FCE  0100               	movlb	0	; () banked
  3672  000FD0  6FA2               	movwf	highWrite@address& (0+255),b
  3673  000FD2  0100               	movlb	0	; () banked
  3674  000FD4  39A8               	swapf	RadioSetChannel@channel& (0+255),w,b
  3675  000FD6  0BF0               	andlw	240
  3676  000FD8  0F50               	addlw	80
  3677  000FDA  0903               	iorlw	3
  3678  000FDC  0100               	movlb	0	; () banked
  3679  000FDE  6FA4               	movwf	highWrite@value& (0+255),b
  3680  000FE0  ECC5  F006         	call	_highWrite	;wreg free
  3681                           
  3682                           ;MRF24J40c.c: 318: lowWrite((0x6D), 0x04);
  3683  000FE4  0E04               	movlw	4
  3684  000FE6  0100               	movlb	0	; () banked
  3685  000FE8  6FA2               	movwf	lowWrite@value& (0+255),b
  3686  000FEA  0E6D               	movlw	109
  3687  000FEC  ECDA  F008         	call	_lowWrite
  3688                           
  3689                           ;MRF24J40c.c: 319: lowWrite((0x6D), 0x00);
  3690  000FF0  0E00               	movlw	0
  3691  000FF2  0100               	movlb	0	; () banked
  3692  000FF4  6FA2               	movwf	lowWrite@value& (0+255),b
  3693  000FF6  0E6D               	movlw	109
  3694  000FF8  ECDA  F008         	call	_lowWrite
  3695  000FFC                     l106:
  3696  000FFC  0012               	return	
  3697  000FFE                     __end_of_RadioSetChannel:
  3698                           	opt stack 0
  3699                           intcon	equ	0xFF2
  3700                           intcon2	equ	0xFF1
  3701                           postinc0	equ	0xFEE
  3702                           wreg	equ	0xFE8
  3703                           indf1	equ	0xFE7
  3704                           fsr1h	equ	0xFE2
  3705                           fsr1l	equ	0xFE1
  3706                           indf2	equ	0xFDF
  3707                           fsr2h	equ	0xFDA
  3708                           fsr2l	equ	0xFD9
  3709                           status	equ	0xFD8
  3710                           
  3711 ;; *************** function _highWrite *****************
  3712 ;; Defined at:
  3713 ;;		line 114 in file "MRF24J40c.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  address         2    3[BANK0 ] unsigned short 
  3716 ;;  value           1    5[BANK0 ] unsigned char 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  tmpRFIE         1    8[BANK0 ] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;		None               void
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        6 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    6
  3735 ;; This function calls:
  3736 ;;		_spiPut
  3737 ;; This function is called by:
  3738 ;;		_toTXfifo
  3739 ;;		_initMRF24J40
  3740 ;;		_RadioSetChannel
  3741 ;;		_RadioSetSleep
  3742 ;;		_RadioTXRaw
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text17
  3747  000D8A                     __ptext17:
  3748                           	opt stack 0
  3749  000D8A                     _highWrite:
  3750                           	opt stack 22
  3751                           
  3752                           ;MRF24J40c.c: 115: UINT8 tmpRFIE = INTCONbits.INT0IE;
  3753                           
  3754                           ;incstack = 0
  3755  000D8A  0E00               	movlw	0
  3756  000D8C  B8F2               	btfsc	intcon,4,c	;volatile
  3757  000D8E  0E01               	movlw	1
  3758  000D90  0100               	movlb	0	; () banked
  3759  000D92  6FA7               	movwf	highWrite@tmpRFIE& (0+255),b
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;MRF24J40c.c: 116: INTCONbits.INT0IE = 0;
  3763  000D94  98F2               	bcf	intcon,4,c	;volatile
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;MRF24J40c.c: 117: LATDbits.LATD0 = 0;
  3767  000D96  908C               	bcf	3980,0,c	;volatile
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;MRF24J40c.c: 119: spiPut((((UINT8) (address >> 3))&0x7F) | 0x80);
  3771  000D98  0100               	movlb	0	; () banked
  3772  000D9A  C0A2  F0A5         	movff	highWrite@address,??_highWrite
  3773  000D9E  0100               	movlb	0	; () banked
  3774  000DA0  C0A3  F0A6         	movff	highWrite@address+1,??_highWrite+1
  3775  000DA4  0100               	movlb	0	; () banked
  3776  000DA6  90D8               	bcf	status,0,c
  3777  000DA8  33A6               	rrcf	(??_highWrite+1)& (0+255),f,b
  3778  000DAA  33A5               	rrcf	??_highWrite& (0+255),f,b
  3779  000DAC  0100               	movlb	0	; () banked
  3780  000DAE  90D8               	bcf	status,0,c
  3781  000DB0  33A6               	rrcf	(??_highWrite+1)& (0+255),f,b
  3782  000DB2  33A5               	rrcf	??_highWrite& (0+255),f,b
  3783  000DB4  0100               	movlb	0	; () banked
  3784  000DB6  90D8               	bcf	status,0,c
  3785  000DB8  33A6               	rrcf	(??_highWrite+1)& (0+255),f,b
  3786  000DBA  33A5               	rrcf	??_highWrite& (0+255),f,b
  3787  000DBC  0100               	movlb	0	; () banked
  3788  000DBE  51A5               	movf	??_highWrite& (0+255),w,b
  3789  000DC0  0B7F               	andlw	127
  3790  000DC2  0980               	iorlw	128
  3791  000DC4  EC80  F009         	call	_spiPut
  3792                           
  3793                           ;MRF24J40c.c: 120: spiPut((((UINT8) (address << 5))&0xE0) | 0x10);
  3794  000DC8  0100               	movlb	0	; () banked
  3795  000DCA  39A2               	swapf	highWrite@address& (0+255),w,b
  3796  000DCC  46E8               	rlncf	wreg,f,c
  3797  000DCE  0BE0               	andlw	224
  3798  000DD0  0BE0               	andlw	224
  3799  000DD2  0910               	iorlw	16
  3800  000DD4  EC80  F009         	call	_spiPut
  3801                           
  3802                           ;MRF24J40c.c: 121: spiPut(value);
  3803  000DD8  0100               	movlb	0	; () banked
  3804  000DDA  51A4               	movf	highWrite@value& (0+255),w,b
  3805  000DDC  EC80  F009         	call	_spiPut
  3806                           
  3807                           ;MRF24J40c.c: 123: LATDbits.LATD0 = 1;
  3808  000DE0  808C               	bsf	3980,0,c	;volatile
  3809                           
  3810                           ;MRF24J40c.c: 124: INTCONbits.INT0IE = tmpRFIE;
  3811  000DE2  0100               	movlb	0	; () banked
  3812  000DE4  B1A7               	btfsc	highWrite@tmpRFIE& (0+255),0,b
  3813  000DE6  D002               	bra	u2055
  3814  000DE8  98F2               	bcf	intcon,4,c	;volatile
  3815  000DEA  D001               	bra	u2056
  3816  000DEC                     u2055:
  3817  000DEC  88F2               	bsf	intcon,4,c	;volatile
  3818  000DEE                     u2056:
  3819                           
  3820                           ;MRF24J40c.c: 126: __nop();
  3821  000DEE  F000               	nop	
  3822                           
  3823                           ;MRF24J40c.c: 127: __nop();
  3824  000DF0  F000               	nop	
  3825                           
  3826                           ;MRF24J40c.c: 128: __nop();
  3827  000DF2  F000               	nop	
  3828                           
  3829                           ;MRF24J40c.c: 129: __nop();
  3830  000DF4  F000               	nop	
  3831                           
  3832                           ;MRF24J40c.c: 130: __nop();
  3833  000DF6  F000               	nop	
  3834                           
  3835                           ;MRF24J40c.c: 131: __nop();
  3836  000DF8  F000               	nop	
  3837                           
  3838                           ;MRF24J40c.c: 132: __nop();
  3839  000DFA  F000               	nop	
  3840  000DFC  0012               	return	
  3841  000DFE                     __end_of_highWrite:
  3842                           	opt stack 0
  3843                           intcon	equ	0xFF2
  3844                           intcon2	equ	0xFF1
  3845                           postinc0	equ	0xFEE
  3846                           wreg	equ	0xFE8
  3847                           indf1	equ	0xFE7
  3848                           fsr1h	equ	0xFE2
  3849                           fsr1l	equ	0xFE1
  3850                           indf2	equ	0xFDF
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function _RadioSetAddress *****************
  3856 ;; Defined at:
  3857 ;;		line 283 in file "MRF24J40c.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  shortAddress    2    6[BANK0 ] unsigned short 
  3860 ;;  longAddress1    4    8[BANK0 ] unsigned long 
  3861 ;;  longAddress2    4   12[BANK0 ] unsigned long 
  3862 ;;  panID           2   16[BANK0 ] unsigned short 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  i               1   18[BANK0 ] unsigned char 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;		None               void
  3867 ;; Registers used:
  3868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3874 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;Total ram usage:       13 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    7
  3881 ;; This function calls:
  3882 ;;		_lowWrite
  3883 ;; This function is called by:
  3884 ;;		_initMRF24J40
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text18
  3889  000B86                     __ptext18:
  3890                           	opt stack 0
  3891  000B86                     _RadioSetAddress:
  3892                           	opt stack 21
  3893                           
  3894                           ;MRF24J40c.c: 284: UINT8 i;
  3895                           ;MRF24J40c.c: 286: lowWrite((0x07), ((UINT8*)&(shortAddress))[0]);
  3896                           
  3897                           ;incstack = 0
  3898  000B86  C0A5  F0A2         	movff	RadioSetAddress@shortAddress,lowWrite@value
  3899  000B8A  0E07               	movlw	7
  3900  000B8C  ECDA  F008         	call	_lowWrite
  3901                           
  3902                           ;MRF24J40c.c: 287: lowWrite((0x09), ((UINT8*)&(shortAddress))[1]);
  3903  000B90  C0A6  F0A2         	movff	RadioSetAddress@shortAddress+1,lowWrite@value
  3904  000B94  0E09               	movlw	9
  3905  000B96  ECDA  F008         	call	_lowWrite
  3906                           
  3907                           ;MRF24J40c.c: 289: lowWrite((0x03), ((UINT8*)&(panID))[0]);
  3908  000B9A  C0AF  F0A2         	movff	RadioSetAddress@panID,lowWrite@value
  3909  000B9E  0E03               	movlw	3
  3910  000BA0  ECDA  F008         	call	_lowWrite
  3911                           
  3912                           ;MRF24J40c.c: 290: lowWrite((0x05), ((UINT8*)&(panID))[1]);
  3913  000BA4  C0B0  F0A2         	movff	RadioSetAddress@panID+1,lowWrite@value
  3914  000BA8  0E05               	movlw	5
  3915  000BAA  ECDA  F008         	call	_lowWrite
  3916                           
  3917                           ;MRF24J40c.c: 292: for (i = 0; i<sizeof (longAddress1); i++)
  3918  000BAE  0E00               	movlw	0
  3919  000BB0  0100               	movlb	0	; () banked
  3920  000BB2  6FB1               	movwf	RadioSetAddress@i& (0+255),b
  3921  000BB4  D017               	goto	L13
  3922  000BB6                     l2758:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;MRF24J40c.c: 293: lowWrite((0x0B) + i * 2, ((UINT8*)&(longAddress1))[i]);
  3926  000BB6  0100               	movlb	0	; () banked
  3927  000BB8  51B1               	movf	RadioSetAddress@i& (0+255),w,b
  3928  000BBA  0D01               	mullw	1
  3929  000BBC  0100               	movlb	0	; () banked
  3930  000BBE  0EA7               	movlw	low RadioSetAddress@longAddress1
  3931  000BC0  24F3               	addwf	prodl,w,c
  3932  000BC2  6ED9               	movwf	fsr2l,c
  3933  000BC4  0100               	movlb	0	; () banked
  3934  000BC6  0E00               	movlw	high RadioSetAddress@longAddress1
  3935  000BC8  20F4               	addwfc	prodh,w,c
  3936  000BCA  6EDA               	movwf	fsr2h,c
  3937  000BCC  50DF               	movf	indf2,w,c
  3938  000BCE  0100               	movlb	0	; () banked
  3939  000BD0  6FA2               	movwf	lowWrite@value& (0+255),b
  3940  000BD2  0100               	movlb	0	; () banked
  3941  000BD4  51B1               	movf	RadioSetAddress@i& (0+255),w,b
  3942  000BD6  0D02               	mullw	2
  3943  000BD8  50F3               	movf	prodl,w,c
  3944  000BDA  0F0B               	addlw	11
  3945  000BDC  ECDA  F008         	call	_lowWrite
  3946  000BE0  0100               	movlb	0	; () banked
  3947  000BE2  2BB1               	incf	RadioSetAddress@i& (0+255),f,b
  3948  000BE4                     L13:
  3949                           
  3950                           ; BSR set to: 0
  3951  000BE4  0E03               	movlw	3
  3952  000BE6  0100               	movlb	0	; () banked
  3953  000BE8  65B1               	cpfsgt	RadioSetAddress@i& (0+255),b
  3954  000BEA  D7E5               	goto	l2758
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;MRF24J40c.c: 295: for (i = 0; i<sizeof (longAddress2); i++)
  3958                           
  3959                           ; BSR set to: 0
  3960  000BEC  0E00               	movlw	0
  3961  000BEE  0100               	movlb	0	; () banked
  3962  000BF0  6FB1               	movwf	RadioSetAddress@i& (0+255),b
  3963  000BF2  D017               	goto	L12
  3964  000BF4                     l2770:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;MRF24J40c.c: 296: lowWrite((0x13) + i * 2, ((UINT8*)&(longAddress2))[i]);
  3968  000BF4  0100               	movlb	0	; () banked
  3969  000BF6  51B1               	movf	RadioSetAddress@i& (0+255),w,b
  3970  000BF8  0D01               	mullw	1
  3971  000BFA  0100               	movlb	0	; () banked
  3972  000BFC  0EAB               	movlw	low RadioSetAddress@longAddress2
  3973  000BFE  24F3               	addwf	prodl,w,c
  3974  000C00  6ED9               	movwf	fsr2l,c
  3975  000C02  0100               	movlb	0	; () banked
  3976  000C04  0E00               	movlw	high RadioSetAddress@longAddress2
  3977  000C06  20F4               	addwfc	prodh,w,c
  3978  000C08  6EDA               	movwf	fsr2h,c
  3979  000C0A  50DF               	movf	indf2,w,c
  3980  000C0C  0100               	movlb	0	; () banked
  3981  000C0E  6FA2               	movwf	lowWrite@value& (0+255),b
  3982  000C10  0100               	movlb	0	; () banked
  3983  000C12  51B1               	movf	RadioSetAddress@i& (0+255),w,b
  3984  000C14  0D02               	mullw	2
  3985  000C16  50F3               	movf	prodl,w,c
  3986  000C18  0F13               	addlw	19
  3987  000C1A  ECDA  F008         	call	_lowWrite
  3988  000C1E  0100               	movlb	0	; () banked
  3989  000C20  2BB1               	incf	RadioSetAddress@i& (0+255),f,b
  3990  000C22                     L12:
  3991                           
  3992                           ; BSR set to: 0
  3993  000C22  0E03               	movlw	3
  3994  000C24  0100               	movlb	0	; () banked
  3995  000C26  65B1               	cpfsgt	RadioSetAddress@i& (0+255),b
  3996  000C28  D7E5               	goto	l2770
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;MRF24J40c.c: 298: RadioStatus.MyPANID = panID;
  4000  000C2A  C0AF  F070         	movff	RadioSetAddress@panID,_RadioStatus+16	;volatile
  4001  000C2E  C0B0  F071         	movff	RadioSetAddress@panID+1,_RadioStatus+17	;volatile
  4002                           
  4003                           ;MRF24J40c.c: 299: RadioStatus.MyShortAddress = shortAddress;
  4004  000C32  C0A5  F066         	movff	RadioSetAddress@shortAddress,_RadioStatus+6	;volatile
  4005  000C36  C0A6  F067         	movff	RadioSetAddress@shortAddress+1,_RadioStatus+7	;volatile
  4006                           
  4007                           ;MRF24J40c.c: 300: RadioStatus.MyLongAddress1 = longAddress1;
  4008  000C3A  C0A7  F068         	movff	RadioSetAddress@longAddress1,_RadioStatus+8	;volatile
  4009  000C3E  C0A8  F069         	movff	RadioSetAddress@longAddress1+1,_RadioStatus+9	;volatile
  4010  000C42  C0A9  F06A         	movff	RadioSetAddress@longAddress1+2,_RadioStatus+10	;volatile
  4011  000C46  C0AA  F06B         	movff	RadioSetAddress@longAddress1+3,_RadioStatus+11	;volatile
  4012                           
  4013                           ;MRF24J40c.c: 301: RadioStatus.MyLongAddress2 = longAddress2;
  4014  000C4A  C0AB  F06C         	movff	RadioSetAddress@longAddress2,_RadioStatus+12	;volatile
  4015  000C4E  C0AC  F06D         	movff	RadioSetAddress@longAddress2+1,_RadioStatus+13	;volatile
  4016  000C52  C0AD  F06E         	movff	RadioSetAddress@longAddress2+2,_RadioStatus+14	;volatile
  4017  000C56  C0AE  F06F         	movff	RadioSetAddress@longAddress2+3,_RadioStatus+15	;volatile
  4018                           
  4019                           ; BSR set to: 0
  4020  000C5A  0012               	return	
  4021  000C5C                     __end_of_RadioSetAddress:
  4022                           	opt stack 0
  4023                           prodh	equ	0xFF4
  4024                           prodl	equ	0xFF3
  4025                           intcon	equ	0xFF2
  4026                           intcon2	equ	0xFF1
  4027                           postinc0	equ	0xFEE
  4028                           wreg	equ	0xFE8
  4029                           indf1	equ	0xFE7
  4030                           fsr1h	equ	0xFE2
  4031                           fsr1l	equ	0xFE1
  4032                           indf2	equ	0xFDF
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function _lowWrite *****************
  4038 ;; Defined at:
  4039 ;;		line 153 in file "MRF24J40c.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  address         1    wreg     unsigned char 
  4042 ;;  value           1    3[BANK0 ] unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  address         1    4[BANK0 ] unsigned char 
  4045 ;;  tmpRFIE         1    5[BANK0 ] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;		None               void
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4055 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;Total ram usage:        3 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    6
  4062 ;; This function calls:
  4063 ;;		_spiPut
  4064 ;; This function is called by:
  4065 ;;		_initMRF24J40
  4066 ;;		_RadioSetAddress
  4067 ;;		_RadioSetChannel
  4068 ;;		_RadioSetSleep
  4069 ;;		_RadioTXRaw
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text19
  4074  0011B4                     __ptext19:
  4075                           	opt stack 0
  4076  0011B4                     _lowWrite:
  4077                           	opt stack 22
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;incstack = 0
  4081                           ;lowWrite@address stored from wreg
  4082  0011B4  0100               	movlb	0	; () banked
  4083  0011B6  6FA3               	movwf	lowWrite@address& (0+255),b
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;MRF24J40c.c: 154: UINT8 tmpRFIE = INTCONbits.INT0IE;
  4087  0011B8  0E00               	movlw	0
  4088  0011BA  B8F2               	btfsc	intcon,4,c	;volatile
  4089  0011BC  0E01               	movlw	1
  4090  0011BE  0100               	movlb	0	; () banked
  4091  0011C0  6FA4               	movwf	lowWrite@tmpRFIE& (0+255),b
  4092                           
  4093                           ;MRF24J40c.c: 155: INTCONbits.INT0IE = 0;
  4094  0011C2  98F2               	bcf	intcon,4,c	;volatile
  4095                           
  4096                           ;MRF24J40c.c: 156: LATDbits.LATD0 = 0;
  4097  0011C4  908C               	bcf	3980,0,c	;volatile
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;MRF24J40c.c: 158: spiPut(address);
  4101  0011C6  0100               	movlb	0	; () banked
  4102  0011C8  51A3               	movf	lowWrite@address& (0+255),w,b
  4103  0011CA  EC80  F009         	call	_spiPut
  4104                           
  4105                           ;MRF24J40c.c: 159: spiPut(value);
  4106  0011CE  0100               	movlb	0	; () banked
  4107  0011D0  51A2               	movf	lowWrite@value& (0+255),w,b
  4108  0011D2  EC80  F009         	call	_spiPut
  4109                           
  4110                           ;MRF24J40c.c: 161: LATDbits.LATD0 = 1;
  4111  0011D6  808C               	bsf	3980,0,c	;volatile
  4112                           
  4113                           ;MRF24J40c.c: 162: INTCONbits.INT0IE = tmpRFIE;
  4114  0011D8  0100               	movlb	0	; () banked
  4115  0011DA  B1A4               	btfsc	lowWrite@tmpRFIE& (0+255),0,b
  4116  0011DC  D002               	bra	u2065
  4117  0011DE  98F2               	bcf	intcon,4,c	;volatile
  4118  0011E0  D001               	bra	u2066
  4119  0011E2                     u2065:
  4120  0011E2  88F2               	bsf	intcon,4,c	;volatile
  4121  0011E4                     u2066:
  4122  0011E4  0012               	return	
  4123  0011E6                     __end_of_lowWrite:
  4124                           	opt stack 0
  4125                           prodh	equ	0xFF4
  4126                           prodl	equ	0xFF3
  4127                           intcon	equ	0xFF2
  4128                           intcon2	equ	0xFF1
  4129                           postinc0	equ	0xFEE
  4130                           wreg	equ	0xFE8
  4131                           indf1	equ	0xFE7
  4132                           fsr1h	equ	0xFE2
  4133                           fsr1l	equ	0xFE1
  4134                           indf2	equ	0xFDF
  4135                           fsr2h	equ	0xFDA
  4136                           fsr2l	equ	0xFD9
  4137                           status	equ	0xFD8
  4138                           
  4139 ;; *************** function _spiPut *****************
  4140 ;; Defined at:
  4141 ;;		line 45 in file "MRF24J40c.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  v               1    wreg     unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  v               1    2[BANK0 ] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        1 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    5
  4162 ;; This function calls:
  4163 ;;		_WriteSPI2
  4164 ;; This function is called by:
  4165 ;;		_highRead
  4166 ;;		_highWrite
  4167 ;;		_lowWrite
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text20
  4172  001300                     __ptext20:
  4173                           	opt stack 0
  4174  001300                     _spiPut:
  4175                           	opt stack 22
  4176                           
  4177                           ;incstack = 0
  4178                           ;spiPut@v stored from wreg
  4179  001300  0100               	movlb	0	; () banked
  4180  001302  6FA1               	movwf	spiPut@v& (0+255),b
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;MRF24J40c.c: 47: LATDbits.LATD0 = 0;
  4184  001304  908C               	bcf	3980,0,c	;volatile
  4185                           
  4186                           ;MRF24J40c.c: 48: __nop();
  4187  001306  F000               	nop	
  4188                           
  4189                           ;MRF24J40c.c: 50: WriteSPI2(v);
  4190  001308  0100               	movlb	0	; () banked
  4191  00130A  51A1               	movf	spiPut@v& (0+255),w,b
  4192  00130C  EC56  F009         	call	_WriteSPI2
  4193  001310                     l43:
  4194  001310  B064               	btfsc	3940,0,c	;volatile
  4195  001312  0012               	return	
  4196  001314  D7FD               	goto	l43
  4197  001316                     __end_of_spiPut:
  4198                           	opt stack 0
  4199                           prodh	equ	0xFF4
  4200                           prodl	equ	0xFF3
  4201                           intcon	equ	0xFF2
  4202                           intcon2	equ	0xFF1
  4203                           postinc0	equ	0xFEE
  4204                           wreg	equ	0xFE8
  4205                           indf1	equ	0xFE7
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           fsr2h	equ	0xFDA
  4210                           fsr2l	equ	0xFD9
  4211                           status	equ	0xFD8
  4212                           
  4213 ;; *************** function _WriteSPI2 *****************
  4214 ;; Defined at:
  4215 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi2writ.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  data_out        1    wreg     unsigned char 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  data_out        1    1[BANK0 ] unsigned char 
  4220 ;;  TempVar         1    0[BANK0 ] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      char 
  4223 ;; Registers used:
  4224 ;;		wreg
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;Total ram usage:        2 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    4
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_spiPut
  4241 ;;		_SpiTake
  4242 ;;		_spiGet
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text21
  4247  0012AC                     __ptext21:
  4248                           	opt stack 0
  4249  0012AC                     _WriteSPI2:
  4250                           	opt stack 22
  4251                           
  4252                           ;incstack = 0
  4253                           ;WriteSPI2@data_out stored from wreg
  4254  0012AC  0100               	movlb	0	; () banked
  4255  0012AE  6FA0               	movwf	WriteSPI2@data_out& (0+255),b
  4256                           
  4257                           ; BSR set to: 0
  4258  0012B0  CF66 F09F          	movff	3942,WriteSPI2@TempVar	;volatile
  4259  0012B4  9EA4               	bcf	4004,7,c	;volatile
  4260  0012B6  9E63               	bcf	3939,7,c	;volatile
  4261                           
  4262                           ; BSR set to: 0
  4263  0012B8  C0A0  FF66         	movff	WriteSPI2@data_out,3942	;volatile
  4264                           
  4265                           ; BSR set to: 0
  4266  0012BC  AE63               	btfss	3939,7,c	;volatile
  4267  0012BE  D002               	goto	l369
  4268                           
  4269                           ; BSR set to: 0
  4270  0012C0  0EFF               	movlw	255
  4271  0012C2  D003               	goto	l367
  4272  0012C4                     l369:
  4273  0012C4  AEA4               	btfss	4004,7,c	;volatile
  4274  0012C6  D7FE               	goto	l369
  4275  0012C8  0E00               	movlw	0
  4276  0012CA                     l367:
  4277  0012CA  0012               	return	
  4278  0012CC                     __end_of_WriteSPI2:
  4279                           	opt stack 0
  4280                           prodh	equ	0xFF4
  4281                           prodl	equ	0xFF3
  4282                           intcon	equ	0xFF2
  4283                           intcon2	equ	0xFF1
  4284                           postinc0	equ	0xFEE
  4285                           wreg	equ	0xFE8
  4286                           indf1	equ	0xFE7
  4287                           fsr1h	equ	0xFE2
  4288                           fsr1l	equ	0xFE1
  4289                           indf2	equ	0xFDF
  4290                           fsr2h	equ	0xFDA
  4291                           fsr2l	equ	0xFD9
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function _Delay10KTCYx *****************
  4295 ;; Defined at:
  4296 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10ktcyx.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  unit            1    wreg     unsigned char 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  unit            1    1[BANK0 ] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;		None               void
  4303 ;; Registers used:
  4304 ;;		wreg
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;Total ram usage:        2 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    4
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text22
  4325  0012CC                     __ptext22:
  4326                           	opt stack 0
  4327  0012CC                     _Delay10KTCYx:
  4328                           	opt stack 26
  4329                           
  4330                           ;incstack = 0
  4331                           ;Delay10KTCYx@unit stored from wreg
  4332  0012CC  0100               	movlb	0	; () banked
  4333  0012CE  6FA0               	movwf	Delay10KTCYx@unit& (0+255),b
  4334  0012D0                     l597:
  4335                           
  4336                           ; BSR set to: 0
  4337                           
  4338                           ; BSR set to: 0
  4339  0012D0  0E0D               	movlw	13
  4340  0012D2  0100               	movlb	0	; () banked
  4341  0012D4  6F9F               	movwf	??_Delay10KTCYx& (0+255),b
  4342  0012D6  0EFC               	movlw	252
  4343  0012D8                     u2797:
  4344  0012D8  2EE8               	decfsz	wreg,f,c
  4345  0012DA  D7FE               	goto	u2797
  4346  0012DC  2F9F               	decfsz	??_Delay10KTCYx& (0+255),f,b
  4347  0012DE  D7FC               	goto	u2797
  4348  0012E0  0100               	movlb	0	; () banked
  4349  0012E2  2FA0               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  4350  0012E4  D7F5               	goto	l597
  4351                           
  4352                           ; BSR set to: 0
  4353                           
  4354                           ; BSR set to: 0
  4355  0012E6  0012               	return	
  4356  0012E8                     __end_of_Delay10KTCYx:
  4357                           	opt stack 0
  4358                           prodh	equ	0xFF4
  4359                           prodl	equ	0xFF3
  4360                           intcon	equ	0xFF2
  4361                           intcon2	equ	0xFF1
  4362                           postinc0	equ	0xFEE
  4363                           wreg	equ	0xFE8
  4364                           indf1	equ	0xFE7
  4365                           fsr1h	equ	0xFE2
  4366                           fsr1l	equ	0xFE1
  4367                           indf2	equ	0xFDF
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8
  4371                           
  4372 ;; *************** function _BoardInit *****************
  4373 ;; Defined at:
  4374 ;;		line 6 in file "hardware.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;		None               void
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    5
  4395 ;; This function calls:
  4396 ;;		_OpenSPI2
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text23
  4403  000DFE                     __ptext23:
  4404                           	opt stack 0
  4405  000DFE                     _BoardInit:
  4406                           	opt stack 25
  4407                           
  4408                           ;hardware.c: 8: ADCON1 = 0x0F;
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;incstack = 0
  4412  000DFE  0E0F               	movlw	15
  4413  000E00  6EC1               	movwf	4033,c	;volatile
  4414                           
  4415                           ;hardware.c: 11: LATA = 0x00;
  4416  000E02  0E00               	movlw	0
  4417  000E04  6E89               	movwf	3977,c	;volatile
  4418                           
  4419                           ;hardware.c: 12: LATB = 0x00;
  4420  000E06  0E00               	movlw	0
  4421  000E08  6E8A               	movwf	3978,c	;volatile
  4422                           
  4423                           ;hardware.c: 13: LATC = 0x00;
  4424  000E0A  0E00               	movlw	0
  4425  000E0C  6E8B               	movwf	3979,c	;volatile
  4426                           
  4427                           ;hardware.c: 14: LATD = 0x00;
  4428  000E0E  0E00               	movlw	0
  4429  000E10  6E8C               	movwf	3980,c	;volatile
  4430                           
  4431                           ;hardware.c: 15: LATE = 0x00;
  4432  000E12  0E00               	movlw	0
  4433  000E14  6E8D               	movwf	3981,c	;volatile
  4434                           
  4435                           ;hardware.c: 16: LATF = 0x00;
  4436  000E16  0E00               	movlw	0
  4437  000E18  6E8E               	movwf	3982,c	;volatile
  4438                           
  4439                           ;hardware.c: 17: LATG = 0x00;
  4440  000E1A  0E00               	movlw	0
  4441  000E1C  6E8F               	movwf	3983,c	;volatile
  4442                           
  4443                           ;hardware.c: 19: TRISA = 0x00;
  4444  000E1E  0E00               	movlw	0
  4445  000E20  6E92               	movwf	3986,c	;volatile
  4446                           
  4447                           ;hardware.c: 20: TRISB = 0xFF;
  4448  000E22  6893               	setf	3987,c	;volatile
  4449                           
  4450                           ;hardware.c: 21: TRISC = 0xFF;
  4451  000E24  6894               	setf	3988,c	;volatile
  4452                           
  4453                           ;hardware.c: 22: TRISD = 0x20;
  4454  000E26  0E20               	movlw	32
  4455  000E28  6E95               	movwf	3989,c	;volatile
  4456                           
  4457                           ;hardware.c: 23: TRISE = 0xFF;
  4458  000E2A  6896               	setf	3990,c	;volatile
  4459                           
  4460                           ;hardware.c: 24: TRISF = 0x00;
  4461  000E2C  0E00               	movlw	0
  4462  000E2E  6E97               	movwf	3991,c	;volatile
  4463                           
  4464                           ;hardware.c: 25: TRISG = 0x00;
  4465  000E30  0E00               	movlw	0
  4466  000E32  6E98               	movwf	3992,c	;volatile
  4467                           
  4468                           ;hardware.c: 27: RCONbits.IPEN = 0;
  4469  000E34  9ED0               	bcf	4048,7,c	;volatile
  4470                           
  4471                           ;hardware.c: 31: TRISDbits.TRISD0 = 0;
  4472  000E36  9095               	bcf	3989,0,c	;volatile
  4473                           
  4474                           ;hardware.c: 32: LATDbits.LATD0 = 1;
  4475  000E38  808C               	bsf	3980,0,c	;volatile
  4476                           
  4477                           ;hardware.c: 33: TRISDbits.TRISD2 = 0;
  4478  000E3A  9495               	bcf	3989,2,c	;volatile
  4479                           
  4480                           ;hardware.c: 34: LATDbits.LATD2 = 1;
  4481  000E3C  848C               	bsf	3980,2,c	;volatile
  4482                           
  4483                           ;hardware.c: 36: TRISBbits.TRISB0 = 1;
  4484  000E3E  8093               	bsf	3987,0,c	;volatile
  4485                           
  4486                           ;hardware.c: 37: TRISDbits.TRISD5 = 1;
  4487  000E40  8A95               	bsf	3989,5,c	;volatile
  4488                           
  4489                           ;hardware.c: 38: TRISDbits.TRISD4 = 0;
  4490  000E42  9895               	bcf	3989,4,c	;volatile
  4491                           
  4492                           ;hardware.c: 39: TRISDbits.TRISD6 = 0;
  4493  000E44  9C95               	bcf	3989,6,c	;volatile
  4494                           
  4495                           ;hardware.c: 40: LATDbits.LATD4 = 0;
  4496  000E46  988C               	bcf	3980,4,c	;volatile
  4497                           
  4498                           ;hardware.c: 41: LATDbits.LATD6 = 0;
  4499  000E48  9C8C               	bcf	3980,6,c	;volatile
  4500                           
  4501                           ;hardware.c: 43: TRISDbits.TRISD1 = 0;
  4502  000E4A  9295               	bcf	3989,1,c	;volatile
  4503                           
  4504                           ;hardware.c: 44: LATDbits.LATD1 = 1;
  4505  000E4C  828C               	bsf	3980,1,c	;volatile
  4506                           
  4507                           ;hardware.c: 47: OpenSPI2(0b00000010, 0b00000000, 0b00000000);
  4508  000E4E  0E00               	movlw	0
  4509  000E50  0100               	movlb	0	; () banked
  4510  000E52  6F9F               	movwf	OpenSPI2@bus_mode& (0+255),b
  4511  000E54  0E00               	movlw	0
  4512  000E56  0100               	movlb	0	; () banked
  4513  000E58  6FA0               	movwf	OpenSPI2@smp_phase& (0+255),b
  4514  000E5A  0E02               	movlw	2
  4515  000E5C  ECA1  F007         	call	_OpenSPI2
  4516                           
  4517                           ;hardware.c: 48: __nop();
  4518  000E60  F000               	nop	
  4519                           
  4520                           ;hardware.c: 51: INTCONbits.INT0IF = 0;
  4521  000E62  92F2               	bcf	intcon,1,c	;volatile
  4522                           
  4523                           ;hardware.c: 53: INTCONbits.PEIE = 0;
  4524  000E64  9CF2               	bcf	intcon,6,c	;volatile
  4525                           
  4526                           ;hardware.c: 54: INTCONbits.GIE = 1;
  4527  000E66  8EF2               	bsf	intcon,7,c	;volatile
  4528                           
  4529                           ;hardware.c: 56: if( PORTBbits.RB0 == 0 )
  4530  000E68  A081               	btfss	3969,0,c	;volatile
  4531                           
  4532                           ;hardware.c: 57: INTCONbits.INT0IF = 1;
  4533  000E6A  82F2               	bsf	intcon,1,c	;volatile
  4534  000E6C  0012               	return	
  4535  000E6E                     __end_of_BoardInit:
  4536                           	opt stack 0
  4537                           prodh	equ	0xFF4
  4538                           prodl	equ	0xFF3
  4539                           intcon	equ	0xFF2
  4540                           intcon2	equ	0xFF1
  4541                           postinc0	equ	0xFEE
  4542                           wreg	equ	0xFE8
  4543                           indf1	equ	0xFE7
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           indf2	equ	0xFDF
  4547                           fsr2h	equ	0xFDA
  4548                           fsr2l	equ	0xFD9
  4549                           status	equ	0xFD8
  4550                           
  4551 ;; *************** function _OpenSPI2 *****************
  4552 ;; Defined at:
  4553 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi2open.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  sync_mode       1    wreg     unsigned char 
  4556 ;;  bus_mode        1    0[BANK0 ] unsigned char 
  4557 ;;  smp_phase       1    1[BANK0 ] unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  sync_mode       1    2[BANK0 ] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;Total ram usage:        3 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    4
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_BoardInit
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text24
  4584  000F42                     __ptext24:
  4585                           	opt stack 0
  4586  000F42                     _OpenSPI2:
  4587                           	opt stack 25
  4588                           
  4589                           ;incstack = 0
  4590                           ;OpenSPI2@sync_mode stored from wreg
  4591  000F42  0100               	movlb	0	; () banked
  4592  000F44  6FA1               	movwf	OpenSPI2@sync_mode& (0+255),b
  4593                           
  4594                           ; BSR set to: 0
  4595  000F46  0E3F               	movlw	63
  4596  000F48  1664               	andwf	3940,f,c	;volatile
  4597                           
  4598                           ; BSR set to: 0
  4599  000F4A  0E00               	movlw	0
  4600  000F4C  6E63               	movwf	3939,c	;volatile
  4601                           
  4602                           ; BSR set to: 0
  4603  000F4E  0100               	movlb	0	; () banked
  4604  000F50  51A1               	movf	OpenSPI2@sync_mode& (0+255),w,b
  4605  000F52  1263               	iorwf	3939,f,c	;volatile
  4606                           
  4607                           ; BSR set to: 0
  4608  000F54  0100               	movlb	0	; () banked
  4609  000F56  51A0               	movf	OpenSPI2@smp_phase& (0+255),w,b
  4610  000F58  1264               	iorwf	3940,f,c	;volatile
  4611  000F5A  D005               	goto	l2936
  4612  000F5C                     l335:
  4613                           
  4614                           ; BSR set to: 0
  4615  000F5C  8C64               	bsf	3940,6,c	;volatile
  4616  000F5E  D014               	goto	l2940
  4617  000F60                     l337:
  4618                           
  4619                           ; BSR set to: 0
  4620  000F60  8C64               	bsf	3940,6,c	;volatile
  4621  000F62                     l338:
  4622                           
  4623                           ; BSR set to: 0
  4624  000F62  8863               	bsf	3939,4,c	;volatile
  4625  000F64  D011               	goto	l2940
  4626  000F66                     l2936:
  4627                           
  4628                           ; BSR set to: 0
  4629  000F66  0100               	movlb	0	; () banked
  4630  000F68  519F               	movf	OpenSPI2@bus_mode& (0+255),w,b
  4631                           
  4632                           ; Switch size 1, requested type "space"
  4633                           ; Number of cases is 3, Range of values is 0 to 3
  4634                           ; switch strategies available:
  4635                           ; Name         Instructions Cycles
  4636                           ; simple_byte           10     6 (average)
  4637                           ;	Chosen strategy is simple_byte
  4638  000F6A  0A00               	xorlw	0	; case 0
  4639  000F6C  B4D8               	btfsc	status,2,c
  4640  000F6E  D7F6               	goto	l335
  4641  000F70  0A02               	xorlw	2	; case 2
  4642  000F72  B4D8               	btfsc	status,2,c
  4643  000F74  D7F5               	goto	l337
  4644  000F76  0A01               	xorlw	1	; case 3
  4645  000F78  B4D8               	btfsc	status,2,c
  4646  000F7A  D7F3               	goto	l338
  4647  000F7C  D005               	goto	l2940
  4648  000F7E                     l341:
  4649                           
  4650                           ; BSR set to: 0
  4651  000F7E  8E95               	bsf	3989,7,c	;volatile
  4652  000F80                     l343:
  4653                           
  4654                           ; BSR set to: 0
  4655  000F80  8C95               	bsf	3989,6,c	;volatile
  4656  000F82  D00B               	goto	l342
  4657  000F84                     l344:
  4658                           
  4659                           ; BSR set to: 0
  4660  000F84  9C95               	bcf	3989,6,c	;volatile
  4661  000F86  D009               	goto	l342
  4662  000F88                     l2940:
  4663                           
  4664                           ; BSR set to: 0
  4665  000F88  0100               	movlb	0	; () banked
  4666  000F8A  51A1               	movf	OpenSPI2@sync_mode& (0+255),w,b
  4667                           
  4668                           ; Switch size 1, requested type "space"
  4669                           ; Number of cases is 2, Range of values is 4 to 5
  4670                           ; switch strategies available:
  4671                           ; Name         Instructions Cycles
  4672                           ; simple_byte            7     4 (average)
  4673                           ;	Chosen strategy is simple_byte
  4674  000F8C  0A04               	xorlw	4	; case 4
  4675  000F8E  B4D8               	btfsc	status,2,c
  4676  000F90  D7F6               	goto	l341
  4677  000F92  0A01               	xorlw	1	; case 5
  4678  000F94  B4D8               	btfsc	status,2,c
  4679  000F96  D7F4               	goto	l343
  4680  000F98  D7F5               	goto	l344
  4681  000F9A                     l342:
  4682                           
  4683                           ; BSR set to: 0
  4684  000F9A  8A95               	bsf	3989,5,c	;volatile
  4685  000F9C  9895               	bcf	3989,4,c	;volatile
  4686                           
  4687                           ; BSR set to: 0
  4688  000F9E  8A63               	bsf	3939,5,c	;volatile
  4689                           
  4690                           ; BSR set to: 0
  4691  000FA0  0012               	return	
  4692  000FA2                     __end_of_OpenSPI2:
  4693                           	opt stack 0
  4694                           prodh	equ	0xFF4
  4695                           prodl	equ	0xFF3
  4696                           intcon	equ	0xFF2
  4697                           intcon2	equ	0xFF1
  4698                           postinc0	equ	0xFEE
  4699                           wreg	equ	0xFE8
  4700                           indf1	equ	0xFE7
  4701                           fsr1h	equ	0xFE2
  4702                           fsr1l	equ	0xFE1
  4703                           indf2	equ	0xFDF
  4704                           fsr2h	equ	0xFDA
  4705                           fsr2l	equ	0xFD9
  4706                           status	equ	0xFD8
  4707                           
  4708 ;; *************** function _ISR *****************
  4709 ;; Defined at:
  4710 ;;		line 607 in file "MRF24J40c.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  TXSTAT          1   28[COMRAM] unsigned char 
  4715 ;;  i               1   30[COMRAM] unsigned char 
  4716 ;;  bytes           1   29[COMRAM] unsigned char 
  4717 ;;  iflags          2   26[COMRAM] struct .
  4718 ;; Return value:  Size  Location     Type
  4719 ;;		None               void
  4720 ;; Registers used:
  4721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;Total ram usage:       21 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    3
  4734 ;; This function calls:
  4735 ;;		i2_highRead
  4736 ;;		i2_lowRead
  4737 ;;		i2_lowWrite
  4738 ;; This function is called by:
  4739 ;;		Interrupt level 2
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	intcode
  4744  000008                     __pintcode:
  4745                           	opt stack 0
  4746  000008                     _ISR:
  4747                           	opt stack 21
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;incstack = 0
  4751  000008  CFFA F032          	movff	pclath,??_ISR+2
  4752  00000C  CFFB F033          	movff	pclatu,??_ISR+3
  4753  000010  CFE9 F034          	movff	fsr0l,??_ISR+4
  4754  000014  ED1F  F004         	call	int_func,f	;refresh shadow registers
  4755                           pclatu	equ	0xFFB
  4756                           pclath	equ	0xFFA
  4757                           prodh	equ	0xFF4
  4758                           prodl	equ	0xFF3
  4759                           intcon	equ	0xFF2
  4760                           intcon2	equ	0xFF1
  4761                           postinc0	equ	0xFEE
  4762                           fsr0l	equ	0xFE9
  4763                           wreg	equ	0xFE8
  4764                           indf1	equ	0xFE7
  4765                           fsr1h	equ	0xFE2
  4766                           fsr1l	equ	0xFE1
  4767                           indf2	equ	0xFDF
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772                           	psect	intcode_body
  4773  00083E                     __pintcode_body:
  4774                           	opt stack 21
  4775  00083E                     int_func:
  4776                           	opt stack 21
  4777  00083E  0006               	pop		; remove dummy address from shadow register refresh
  4778  000840  CFEA F035          	movff	fsr0h,??_ISR+5
  4779  000844  CFE1 F036          	movff	fsr1l,??_ISR+6
  4780  000848  CFE2 F037          	movff	fsr1h,??_ISR+7
  4781  00084C  CFD9 F038          	movff	fsr2l,??_ISR+8
  4782  000850  CFDA F039          	movff	fsr2h,??_ISR+9
  4783  000854  CFF3 F03A          	movff	prodl,??_ISR+10
  4784  000858  CFF4 F03B          	movff	prodh,??_ISR+11
  4785  00085C  CFF6 F03C          	movff	tblptrl,??_ISR+12
  4786  000860  CFF7 F03D          	movff	tblptrh,??_ISR+13
  4787  000864  CFF8 F03E          	movff	tblptru,??_ISR+14
  4788  000868  CFF5 F03F          	movff	tablat,??_ISR+15
  4789                           
  4790                           ;MRF24J40c.c: 608: MRF24J40_IFREG iflags;
  4791                           ;MRF24J40c.c: 615: iflags.Val = lowRead((0x62));
  4792  00086C  0E62               	movlw	98
  4793  00086E  EC33  F009         	call	i2_lowRead
  4794  000872  6E40               	movwf	ISR@iflags,c
  4795                           
  4796                           ;MRF24J40c.c: 616: Tempbyte = iflags.Val;
  4797  000874  C040  F005         	movff	ISR@iflags,_Tempbyte
  4798                           
  4799                           ;MRF24J40c.c: 617: INTCONbits.INT0IF = 0;
  4800  000878  92F2               	bcf	intcon,1,c	;volatile
  4801                           
  4802                           ;MRF24J40c.c: 619: if (iflags.bits.RXIF)
  4803  00087A  A640               	btfss	ISR@iflags,3,c
  4804  00087C  D068               	goto	i2l2476
  4805                           
  4806                           ;MRF24J40c.c: 620: {
  4807                           ;MRF24J40c.c: 621: UINT8 i, bytes;
  4808                           ;MRF24J40c.c: 623: lowWrite((0x73), 0x04);
  4809  00087E  0E04               	movlw	4
  4810  000880  6E29               	movwf	i2lowWrite@value,c
  4811  000882  0E73               	movlw	115
  4812  000884  EC1F  F009         	call	i2_lowWrite
  4813                           
  4814                           ;MRF24J40c.c: 625: bytes = highRead(0x300) + 2;
  4815  000888  0E03               	movlw	3
  4816  00088A  6E2B               	movwf	i2highRead@address+1,c
  4817  00088C  0E00               	movlw	0
  4818  00088E  6E2A               	movwf	i2highRead@address,c
  4819  000890  ECFF  F007         	call	i2_highRead	;wreg free
  4820  000894  0F02               	addlw	2
  4821  000896  6E43               	movwf	ISR@bytes,c
  4822                           
  4823                           ;MRF24J40c.c: 627: if (bytes > (144))
  4824  000898  0E90               	movlw	144
  4825  00089A  6443               	cpfsgt	ISR@bytes,c
  4826  00089C  D005               	goto	i2l2448
  4827                           
  4828                           ;MRF24J40c.c: 628: {
  4829                           ;MRF24J40c.c: 629: RadioStatus.RXPacketTooBig++;
  4830  00089E  0100               	movlb	0	; () banked
  4831  0008A0  4B7E               	infsnz	(_RadioStatus+30)& (0+255),f,b	;volatile
  4832  0008A2  2B7F               	incf	(_RadioStatus+31)& (0+255),f,b	;volatile
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;MRF24J40c.c: 630: bytes = (144);
  4836  0008A4  0E90               	movlw	144
  4837  0008A6  6E43               	movwf	ISR@bytes,c
  4838  0008A8                     i2l2448:
  4839                           
  4840                           ;MRF24J40c.c: 631: }
  4841                           ;MRF24J40c.c: 634: if (RadioStatus.RXReadBuffer)
  4842  0008A8  0100               	movlb	0	; () banked
  4843  0008AA  5162               	movf	(_RadioStatus+2)& (0+255),w,b	;volatile
  4844  0008AC  B4D8               	btfsc	status,2,c
  4845  0008AE  D004               	goto	i2l2452
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;MRF24J40c.c: 635: RXBuffer2[0] = bytes - 4;
  4849  0008B0  5043               	movf	ISR@bytes,w,c
  4850  0008B2  0FFC               	addlw	252
  4851  0008B4  0103               	movlb	3	; () banked
  4852  0008B6  D003               	goto	L14
  4853  0008B8                     i2l2452:
  4854                           
  4855                           ;MRF24J40c.c: 636: else
  4856                           ;MRF24J40c.c: 637: RXBuffer1[0] = bytes - 4;
  4857  0008B8  5043               	movf	ISR@bytes,w,c
  4858  0008BA  0FFC               	addlw	252
  4859  0008BC  0101               	movlb	1	; () banked
  4860  0008BE                     L14:
  4861  0008BE  6F00               	movwf	0,b	;volatile
  4862                           
  4863                           ;MRF24J40c.c: 641: for (i = 1; i <= bytes; i++) {
  4864                           
  4865                           ; BSR set to: 1
  4866  0008C0  0E01               	movlw	1
  4867  0008C2  6E44               	movwf	ISR@i,c
  4868  0008C4  D02B               	goto	i2l2464
  4869  0008C6                     i2l2456:
  4870                           
  4871                           ;MRF24J40c.c: 642: if (RadioStatus.RXReadBuffer)
  4872  0008C6  0100               	movlb	0	; () banked
  4873  0008C8  5162               	movf	(_RadioStatus+2)& (0+255),w,b	;volatile
  4874  0008CA  B4D8               	btfsc	status,2,c
  4875  0008CC  D013               	goto	i2l2460
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;MRF24J40c.c: 643: RXBuffer2[i] = highRead(0x300 + i);
  4879  0008CE  5044               	movf	ISR@i,w,c
  4880  0008D0  0D01               	mullw	1
  4881  0008D2  0103               	movlb	3	; () banked
  4882  0008D4  0E00               	movlw	0	;volatile
  4883  0008D6  24F3               	addwf	prodl,w,c
  4884  0008D8  6ED9               	movwf	fsr2l,c
  4885  0008DA  0103               	movlb	3	; () banked
  4886  0008DC  0E03               	movlw	3	;volatile
  4887  0008DE  20F4               	addwfc	prodh,w,c
  4888  0008E0  6EDA               	movwf	fsr2h,c
  4889  0008E2  0E00               	movlw	0
  4890  0008E4  2444               	addwf	ISR@i,w,c
  4891  0008E6  6E2A               	movwf	i2highRead@address,c
  4892  0008E8  6A2B               	clrf	i2highRead@address+1,c
  4893  0008EA  0E03               	movlw	3
  4894  0008EC  222B               	addwfc	i2highRead@address+1,f,c
  4895  0008EE  ECFF  F007         	call	i2_highRead	;wreg free
  4896  0008F2  D012               	goto	L15
  4897  0008F4                     i2l2460:
  4898                           
  4899                           ;MRF24J40c.c: 644: else
  4900                           ;MRF24J40c.c: 645: RXBuffer1[i] = highRead(0x300 + i);
  4901  0008F4  5044               	movf	ISR@i,w,c
  4902  0008F6  0D01               	mullw	1
  4903  0008F8  0101               	movlb	1	; () banked
  4904  0008FA  0E00               	movlw	0	;volatile
  4905  0008FC  24F3               	addwf	prodl,w,c
  4906  0008FE  6ED9               	movwf	fsr2l,c
  4907  000900  0101               	movlb	1	; () banked
  4908  000902  0E01               	movlw	1	;volatile
  4909  000904  20F4               	addwfc	prodh,w,c
  4910  000906  6EDA               	movwf	fsr2h,c
  4911  000908  0E00               	movlw	0
  4912  00090A  2444               	addwf	ISR@i,w,c
  4913  00090C  6E2A               	movwf	i2highRead@address,c
  4914  00090E  6A2B               	clrf	i2highRead@address+1,c
  4915  000910  0E03               	movlw	3
  4916  000912  222B               	addwfc	i2highRead@address+1,f,c
  4917  000914  ECFF  F007         	call	i2_highRead	;wreg free
  4918  000918                     L15:
  4919  000918  6EDF               	movwf	indf2,c
  4920  00091A  2A44               	incf	ISR@i,f,c
  4921  00091C                     i2l2464:
  4922  00091C  5044               	movf	ISR@i,w,c
  4923  00091E  5C43               	subwf	ISR@bytes,w,c
  4924  000920  B0D8               	btfsc	status,0,c
  4925  000922  D7D1               	goto	i2l2456
  4926                           
  4927                           ;MRF24J40c.c: 646: }
  4928                           ;MRF24J40c.c: 648: RadioStatus.RXPacketCount++;
  4929  000924  0100               	movlb	0	; () banked
  4930  000926  2B63               	incf	(_RadioStatus+3)& (0+255),f,b	;volatile
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;MRF24J40c.c: 651: if ((RadioStatus.RXPacketCount > 2) )
  4934  000928  0100               	movlb	0	; () banked
  4935  00092A  EE20  F063         	lfsr	2,_RadioStatus+3	;volatile
  4936  00092E  0E02               	movlw	2
  4937  000930  64DF               	cpfsgt	indf2,c
  4938  000932  D003               	goto	i2l2472
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;MRF24J40c.c: 652: RadioStatus.RXBufferOverruns++;
  4942  000934  0100               	movlb	0	; () banked
  4943  000936  4B80               	infsnz	(_RadioStatus+32)& (0+255),f,b	;volatile
  4944  000938  2B81               	incf	(_RadioStatus+33)& (0+255),f,b	;volatile
  4945  00093A                     i2l2472:
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;MRF24J40c.c: 654: lowWrite((0x1B), 0x01);
  4949  00093A  0E01               	movlw	1
  4950  00093C  6E29               	movwf	i2lowWrite@value,c
  4951  00093E  0E1B               	movlw	27
  4952  000940  EC1F  F009         	call	i2_lowWrite
  4953                           
  4954                           ;MRF24J40c.c: 655: lowWrite((0x73), 0x00);
  4955  000944  0E00               	movlw	0
  4956  000946  6E29               	movwf	i2lowWrite@value,c
  4957  000948  0E73               	movlw	115
  4958  00094A  EC1F  F009         	call	i2_lowWrite
  4959  00094E                     i2l2476:
  4960                           
  4961                           ;MRF24J40c.c: 656: }
  4962                           ;MRF24J40c.c: 658: if (iflags.bits.TXIF)
  4963  00094E  A040               	btfss	ISR@iflags,0,c
  4964  000950  D037               	goto	i2l186
  4965                           
  4966                           ;MRF24J40c.c: 659: {
  4967                           ;MRF24J40c.c: 660: RadioStatus.TX_BUSY = 0;
  4968  000952  0100               	movlb	0	; () banked
  4969  000954  9160               	bcf	_RadioStatus& (0+255),0,b	;volatile
  4970                           
  4971                           ;MRF24J40c.c: 662: if (RadioStatus.TX_PENDING_ACK)
  4972  000956  0100               	movlb	0	; () banked
  4973  000958  A360               	btfss	_RadioStatus& (0+255),1,b	;volatile
  4974  00095A  D032               	goto	i2l186
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;MRF24J40c.c: 663: {
  4978                           ;MRF24J40c.c: 664: UINT8 TXSTAT = lowRead((0x48));
  4979  00095C  0E48               	movlw	72
  4980  00095E  EC33  F009         	call	i2_lowRead
  4981  000962  6E42               	movwf	ISR@TXSTAT,c
  4982                           
  4983                           ;MRF24J40c.c: 665: RadioStatus.TX_FAIL = TXSTAT & 1;
  4984  000964  C042  F030         	movff	ISR@TXSTAT,??_ISR
  4985  000968  0E01               	movlw	1
  4986  00096A  1630               	andwf	??_ISR,f,c
  4987  00096C  4630               	rlncf	??_ISR,f,c
  4988  00096E  4630               	rlncf	??_ISR,f,c
  4989  000970  0100               	movlb	0	; () banked
  4990  000972  5160               	movf	_RadioStatus& (0+255),w,b	;volatile
  4991  000974  1830               	xorwf	??_ISR,w,c
  4992  000976  0BFB               	andlw	-5
  4993  000978  1830               	xorwf	??_ISR,w,c
  4994  00097A  0100               	movlb	0	; () banked
  4995  00097C  6F60               	movwf	_RadioStatus& (0+255),b	;volatile
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;MRF24J40c.c: 666: RadioStatus.TX_RETRIES = TXSTAT >> 6;
  4999  00097E  C042  F030         	movff	ISR@TXSTAT,??_ISR
  5000  000982  0E06               	movlw	6
  5001  000984  6E31               	movwf	(??_ISR+1)& (0+255),c
  5002  000986                     i2u176_45:
  5003  000986  90D8               	bcf	status,0,c
  5004  000988  3230               	rrcf	??_ISR,f,c
  5005  00098A  2E31               	decfsz	(??_ISR+1)& (0+255),f,c
  5006  00098C  D7FC               	goto	i2u176_45
  5007  00098E  4630               	rlncf	??_ISR,f,c
  5008  000990  4630               	rlncf	??_ISR,f,c
  5009  000992  4630               	rlncf	??_ISR,f,c
  5010  000994  0100               	movlb	0	; () banked
  5011  000996  5160               	movf	_RadioStatus& (0+255),w,b	;volatile
  5012  000998  1830               	xorwf	??_ISR,w,c
  5013  00099A  0BE7               	andlw	-25
  5014  00099C  1830               	xorwf	??_ISR,w,c
  5015  00099E  0100               	movlb	0	; () banked
  5016  0009A0  6F60               	movwf	_RadioStatus& (0+255),b	;volatile
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;MRF24J40c.c: 667: RadioStatus.TX_CCAFAIL = TXSTAT & 0b00100000;
  5020  0009A2  C042  F030         	movff	ISR@TXSTAT,??_ISR
  5021  0009A6  0E20               	movlw	32
  5022  0009A8  1630               	andwf	??_ISR,f,c
  5023  0009AA  3A30               	swapf	??_ISR,f,c
  5024  0009AC  4630               	rlncf	??_ISR,f,c
  5025  0009AE  0100               	movlb	0	; () banked
  5026  0009B0  5160               	movf	_RadioStatus& (0+255),w,b	;volatile
  5027  0009B2  1830               	xorwf	??_ISR,w,c
  5028  0009B4  0BDF               	andlw	-33
  5029  0009B6  1830               	xorwf	??_ISR,w,c
  5030  0009B8  0100               	movlb	0	; () banked
  5031  0009BA  6F60               	movwf	_RadioStatus& (0+255),b	;volatile
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;MRF24J40c.c: 669: RadioStatus.TX_PENDING_ACK = 0;
  5035  0009BC  0100               	movlb	0	; () banked
  5036  0009BE  9360               	bcf	_RadioStatus& (0+255),1,b	;volatile
  5037  0009C0                     i2l186:
  5038  0009C0  C03F  FFF5         	movff	??_ISR+15,tablat
  5039  0009C4  C03E  FFF8         	movff	??_ISR+14,tblptru
  5040  0009C8  C03D  FFF7         	movff	??_ISR+13,tblptrh
  5041  0009CC  C03C  FFF6         	movff	??_ISR+12,tblptrl
  5042  0009D0  C03B  FFF4         	movff	??_ISR+11,prodh
  5043  0009D4  C03A  FFF3         	movff	??_ISR+10,prodl
  5044  0009D8  C039  FFDA         	movff	??_ISR+9,fsr2h
  5045  0009DC  C038  FFD9         	movff	??_ISR+8,fsr2l
  5046  0009E0  C037  FFE2         	movff	??_ISR+7,fsr1h
  5047  0009E4  C036  FFE1         	movff	??_ISR+6,fsr1l
  5048  0009E8  C035  FFEA         	movff	??_ISR+5,fsr0h
  5049  0009EC  C034  FFE9         	movff	??_ISR+4,fsr0l
  5050  0009F0  C033  FFFB         	movff	??_ISR+3,pclatu
  5051  0009F4  C032  FFFA         	movff	??_ISR+2,pclath
  5052  0009F8  0011               	retfie		f
  5053  0009FA                     __end_of_ISR:
  5054                           	opt stack 0
  5055                           pclatu	equ	0xFFB
  5056                           pclath	equ	0xFFA
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           intcon	equ	0xFF2
  5064                           intcon2	equ	0xFF1
  5065                           postinc0	equ	0xFEE
  5066                           fsr0h	equ	0xFEA
  5067                           fsr0l	equ	0xFE9
  5068                           wreg	equ	0xFE8
  5069                           indf1	equ	0xFE7
  5070                           fsr1h	equ	0xFE2
  5071                           fsr1l	equ	0xFE1
  5072                           indf2	equ	0xFDF
  5073                           fsr2h	equ	0xFDA
  5074                           fsr2l	equ	0xFD9
  5075                           status	equ	0xFD8
  5076                           
  5077 ;; *************** function i2_lowWrite *****************
  5078 ;; Defined at:
  5079 ;;		line 153 in file "MRF24J40c.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  address         1    wreg     unsigned char 
  5082 ;;  value           1    3[COMRAM] unsigned char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  address         1    4[COMRAM] unsigned char 
  5085 ;;  lowWrite        1    5[COMRAM] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;		None               void
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;Total ram usage:        3 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    2
  5102 ;; This function calls:
  5103 ;;		i2_spiPut
  5104 ;; This function is called by:
  5105 ;;		_ISR
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text26
  5110  00123E                     __ptext26:
  5111                           	opt stack 0
  5112  00123E                     i2_lowWrite:
  5113                           	opt stack 21
  5114                           
  5115                           ;incstack = 0
  5116                           ;i2lowWrite@address stored from wreg
  5117  00123E  6E2A               	movwf	i2lowWrite@address,c
  5118                           
  5119                           ;MRF24J40c.c: 154: UINT8 tmpRFIE = INTCONbits.INT0IE;
  5120  001240  0E00               	movlw	0
  5121  001242  B8F2               	btfsc	intcon,4,c	;volatile
  5122  001244  0E01               	movlw	1
  5123  001246  6E2B               	movwf	i2lowWrite@tmpRFIE,c
  5124                           
  5125                           ;MRF24J40c.c: 155: INTCONbits.INT0IE = 0;
  5126  001248  98F2               	bcf	intcon,4,c	;volatile
  5127                           
  5128                           ;MRF24J40c.c: 156: LATDbits.LATD0 = 0;
  5129  00124A  908C               	bcf	3980,0,c	;volatile
  5130                           
  5131                           ;MRF24J40c.c: 158: spiPut(address);
  5132  00124C  502A               	movf	i2lowWrite@address,w,c
  5133  00124E  EC94  F009         	call	i2_spiPut
  5134                           
  5135                           ;MRF24J40c.c: 159: spiPut(value);
  5136  001252  5029               	movf	i2lowWrite@value,w,c
  5137  001254  EC94  F009         	call	i2_spiPut
  5138                           
  5139                           ;MRF24J40c.c: 161: LATDbits.LATD0 = 1;
  5140  001258  808C               	bsf	3980,0,c	;volatile
  5141                           
  5142                           ;MRF24J40c.c: 162: INTCONbits.INT0IE = tmpRFIE;
  5143  00125A  B02B               	btfsc	i2lowWrite@tmpRFIE,0,c
  5144  00125C  D002               	bra	i2u163_45
  5145  00125E  98F2               	bcf	intcon,4,c	;volatile
  5146  001260  D001               	bra	i2u163_46
  5147  001262                     i2u163_45:
  5148  001262  88F2               	bsf	intcon,4,c	;volatile
  5149  001264                     i2u163_46:
  5150  001264  0012               	return	
  5151  001266                     __end_ofi2_lowWrite:
  5152                           	opt stack 0
  5153                           pclatu	equ	0xFFB
  5154                           pclath	equ	0xFFA
  5155                           tblptru	equ	0xFF8
  5156                           tblptrh	equ	0xFF7
  5157                           tblptrl	equ	0xFF6
  5158                           tablat	equ	0xFF5
  5159                           prodh	equ	0xFF4
  5160                           prodl	equ	0xFF3
  5161                           intcon	equ	0xFF2
  5162                           intcon2	equ	0xFF1
  5163                           postinc0	equ	0xFEE
  5164                           fsr0h	equ	0xFEA
  5165                           fsr0l	equ	0xFE9
  5166                           wreg	equ	0xFE8
  5167                           indf1	equ	0xFE7
  5168                           fsr1h	equ	0xFE2
  5169                           fsr1l	equ	0xFE1
  5170                           indf2	equ	0xFDF
  5171                           fsr2h	equ	0xFDA
  5172                           fsr2l	equ	0xFD9
  5173                           status	equ	0xFD8
  5174                           
  5175 ;; *************** function i2_lowRead *****************
  5176 ;; Defined at:
  5177 ;;		line 137 in file "MRF24J40c.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  address         1    wreg     unsigned char 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  address         1    4[COMRAM] unsigned char 
  5182 ;;  lowRead         1    6[COMRAM] unsigned char 
  5183 ;;  lowRead         1    5[COMRAM] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      unsigned char 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:        3 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    2
  5200 ;; This function calls:
  5201 ;;		i2_SpiTake
  5202 ;; This function is called by:
  5203 ;;		_ISR
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text27
  5208  001266                     __ptext27:
  5209                           	opt stack 0
  5210  001266                     i2_lowRead:
  5211                           	opt stack 21
  5212                           
  5213                           ;incstack = 0
  5214                           ;i2lowRead@address stored from wreg
  5215  001266  6E2A               	movwf	i2lowRead@address,c
  5216                           
  5217                           ;MRF24J40c.c: 138: UINT8 toReturn;
  5218                           ;MRF24J40c.c: 140: UINT8 tmpRFIE = INTCONbits.INT0IE;
  5219  001268  0E00               	movlw	0
  5220  00126A  B8F2               	btfsc	intcon,4,c	;volatile
  5221  00126C  0E01               	movlw	1
  5222  00126E  6E2C               	movwf	i2lowRead@tmpRFIE,c
  5223                           
  5224                           ;MRF24J40c.c: 141: INTCONbits.INT0IE = 0;
  5225  001270  98F2               	bcf	intcon,4,c	;volatile
  5226                           
  5227                           ;MRF24J40c.c: 142: LATDbits.LATD0 = 0;
  5228  001272  908C               	bcf	3980,0,c	;volatile
  5229                           
  5230                           ;MRF24J40c.c: 144: toReturn = SpiTake(address);
  5231  001274  502A               	movf	i2lowRead@address,w,c
  5232  001276  ECF3  F008         	call	i2_SpiTake
  5233  00127A  6E2B               	movwf	i2lowRead@toReturn,c
  5234                           
  5235                           ;MRF24J40c.c: 146: LATDbits.LATD0 = 1;
  5236  00127C  808C               	bsf	3980,0,c	;volatile
  5237                           
  5238                           ;MRF24J40c.c: 147: INTCONbits.INT0IE = tmpRFIE;
  5239  00127E  B02C               	btfsc	i2lowRead@tmpRFIE,0,c
  5240  001280  D002               	bra	i2u162_45
  5241  001282  98F2               	bcf	intcon,4,c	;volatile
  5242  001284  D001               	bra	i2u162_46
  5243  001286                     i2u162_45:
  5244  001286  88F2               	bsf	intcon,4,c	;volatile
  5245  001288                     i2u162_46:
  5246                           
  5247                           ;MRF24J40c.c: 148: return toReturn;
  5248  001288  502B               	movf	i2lowRead@toReturn,w,c
  5249  00128A  0012               	return	
  5250  00128C                     __end_ofi2_lowRead:
  5251                           	opt stack 0
  5252                           pclatu	equ	0xFFB
  5253                           pclath	equ	0xFFA
  5254                           tblptru	equ	0xFF8
  5255                           tblptrh	equ	0xFF7
  5256                           tblptrl	equ	0xFF6
  5257                           tablat	equ	0xFF5
  5258                           prodh	equ	0xFF4
  5259                           prodl	equ	0xFF3
  5260                           intcon	equ	0xFF2
  5261                           intcon2	equ	0xFF1
  5262                           postinc0	equ	0xFEE
  5263                           fsr0h	equ	0xFEA
  5264                           fsr0l	equ	0xFE9
  5265                           wreg	equ	0xFE8
  5266                           indf1	equ	0xFE7
  5267                           fsr1h	equ	0xFE2
  5268                           fsr1l	equ	0xFE1
  5269                           indf2	equ	0xFDF
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274 ;; *************** function i2_highRead *****************
  5275 ;; Defined at:
  5276 ;;		line 95 in file "MRF24J40c.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  address         2    4[COMRAM] unsigned short 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  highRead        1    9[COMRAM] unsigned char 
  5281 ;;  highRead        1    8[COMRAM] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      unsigned char 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;Total ram usage:        6 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    2
  5298 ;; This function calls:
  5299 ;;		i2_SpiTake
  5300 ;;		i2_spiPut
  5301 ;; This function is called by:
  5302 ;;		_ISR
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text28
  5307  000FFE                     __ptext28:
  5308                           	opt stack 0
  5309  000FFE                     i2_highRead:
  5310                           	opt stack 21
  5311                           
  5312                           ;MRF24J40c.c: 96: UINT8 toReturn, tmpRFIE;
  5313                           ;MRF24J40c.c: 97: tmpRFIE = 0;
  5314                           
  5315                           ;incstack = 0
  5316  000FFE  0E00               	movlw	0
  5317  001000  6E2F               	movwf	i2highRead@tmpRFIE,c
  5318                           
  5319                           ;MRF24J40c.c: 98: if (INTCONbits.INT0IE)
  5320  001002  A8F2               	btfss	intcon,4,c	;volatile
  5321  001004  D002               	goto	i2l2374
  5322                           
  5323                           ;MRF24J40c.c: 99: tmpRFIE = 1;
  5324  001006  0E01               	movlw	1
  5325  001008  6E2F               	movwf	i2highRead@tmpRFIE,c
  5326  00100A                     i2l2374:
  5327                           
  5328                           ;MRF24J40c.c: 101: INTCONbits.INT0IE = 0;
  5329  00100A  98F2               	bcf	intcon,4,c	;volatile
  5330                           
  5331                           ;MRF24J40c.c: 102: LATDbits.LATD0 = 0;
  5332  00100C  908C               	bcf	3980,0,c	;volatile
  5333                           
  5334                           ;MRF24J40c.c: 104: spiPut(((address >> 3)&0x7F) | 0x80);
  5335  00100E  C02A  F02C         	movff	i2highRead@address,??i2_highRead
  5336  001012  C02B  F02D         	movff	i2highRead@address+1,??i2_highRead+1
  5337  001016  90D8               	bcf	status,0,c
  5338  001018  322D               	rrcf	??i2_highRead+1,f,c
  5339  00101A  322C               	rrcf	??i2_highRead,f,c
  5340  00101C  90D8               	bcf	status,0,c
  5341  00101E  322D               	rrcf	??i2_highRead+1,f,c
  5342  001020  322C               	rrcf	??i2_highRead,f,c
  5343  001022  90D8               	bcf	status,0,c
  5344  001024  322D               	rrcf	??i2_highRead+1,f,c
  5345  001026  322C               	rrcf	??i2_highRead,f,c
  5346  001028  502C               	movf	??i2_highRead,w,c
  5347  00102A  0B7F               	andlw	127
  5348  00102C  0980               	iorlw	128
  5349  00102E  EC94  F009         	call	i2_spiPut
  5350                           
  5351                           ;MRF24J40c.c: 105: toReturn = SpiTake(((address << 5)&0xE0));
  5352  001032  382A               	swapf	i2highRead@address,w,c
  5353  001034  46E8               	rlncf	wreg,f,c
  5354  001036  0BE0               	andlw	224
  5355  001038  0BE0               	andlw	224
  5356  00103A  ECF3  F008         	call	i2_SpiTake
  5357  00103E  6E2E               	movwf	i2highRead@toReturn,c
  5358                           
  5359                           ;MRF24J40c.c: 106: LATDbits.LATD0 = 1;
  5360  001040  808C               	bsf	3980,0,c	;volatile
  5361                           
  5362                           ;MRF24J40c.c: 107: INTCONbits.INT0IE = tmpRFIE;
  5363  001042  B02F               	btfsc	i2highRead@tmpRFIE,0,c
  5364  001044  D002               	bra	i2u161_45
  5365  001046  98F2               	bcf	intcon,4,c	;volatile
  5366  001048  D001               	bra	i2u161_46
  5367  00104A                     i2u161_45:
  5368  00104A  88F2               	bsf	intcon,4,c	;volatile
  5369  00104C                     i2u161_46:
  5370                           
  5371                           ;MRF24J40c.c: 109: return toReturn;
  5372  00104C  502E               	movf	i2highRead@toReturn,w,c
  5373  00104E  0012               	return	
  5374  001050                     __end_ofi2_highRead:
  5375                           	opt stack 0
  5376                           pclatu	equ	0xFFB
  5377                           pclath	equ	0xFFA
  5378                           tblptru	equ	0xFF8
  5379                           tblptrh	equ	0xFF7
  5380                           tblptrl	equ	0xFF6
  5381                           tablat	equ	0xFF5
  5382                           prodh	equ	0xFF4
  5383                           prodl	equ	0xFF3
  5384                           intcon	equ	0xFF2
  5385                           intcon2	equ	0xFF1
  5386                           postinc0	equ	0xFEE
  5387                           fsr0h	equ	0xFEA
  5388                           fsr0l	equ	0xFE9
  5389                           wreg	equ	0xFE8
  5390                           indf1	equ	0xFE7
  5391                           fsr1h	equ	0xFE2
  5392                           fsr1l	equ	0xFE1
  5393                           indf2	equ	0xFDF
  5394                           fsr2h	equ	0xFDA
  5395                           fsr2l	equ	0xFD9
  5396                           status	equ	0xFD8
  5397                           
  5398 ;; *************** function i2_spiPut *****************
  5399 ;; Defined at:
  5400 ;;		line 45 in file "MRF24J40c.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  v               1    wreg     unsigned char 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  v               1    2[COMRAM] unsigned char 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;		None               void
  5407 ;; Registers used:
  5408 ;;		wreg, status,2, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;Total ram usage:        1 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    1
  5421 ;; This function calls:
  5422 ;;		i2_WriteSPI2
  5423 ;; This function is called by:
  5424 ;;		i2_highRead
  5425 ;;		i2_lowWrite
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text29
  5430  001328                     __ptext29:
  5431                           	opt stack 0
  5432  001328                     i2_spiPut:
  5433                           	opt stack 21
  5434                           
  5435                           ;incstack = 0
  5436                           ;i2spiPut@v stored from wreg
  5437  001328  6E28               	movwf	i2spiPut@v,c
  5438                           
  5439                           ;MRF24J40c.c: 47: LATDbits.LATD0 = 0;
  5440  00132A  908C               	bcf	3980,0,c	;volatile
  5441                           
  5442                           ;MRF24J40c.c: 48: __nop();
  5443  00132C  F000               	nop	
  5444                           
  5445                           ;MRF24J40c.c: 50: WriteSPI2(v);
  5446  00132E  5028               	movf	i2spiPut@v,w,c
  5447  001330  EC74  F009         	call	i2_WriteSPI2
  5448  001334                     i2l43:
  5449  001334  B064               	btfsc	3940,0,c	;volatile
  5450  001336  0012               	return	
  5451  001338  D7FD               	goto	i2l43
  5452  00133A                     __end_ofi2_spiPut:
  5453                           	opt stack 0
  5454                           pclatu	equ	0xFFB
  5455                           pclath	equ	0xFFA
  5456                           tblptru	equ	0xFF8
  5457                           tblptrh	equ	0xFF7
  5458                           tblptrl	equ	0xFF6
  5459                           tablat	equ	0xFF5
  5460                           prodh	equ	0xFF4
  5461                           prodl	equ	0xFF3
  5462                           intcon	equ	0xFF2
  5463                           intcon2	equ	0xFF1
  5464                           postinc0	equ	0xFEE
  5465                           fsr0h	equ	0xFEA
  5466                           fsr0l	equ	0xFE9
  5467                           wreg	equ	0xFE8
  5468                           indf1	equ	0xFE7
  5469                           fsr1h	equ	0xFE2
  5470                           fsr1l	equ	0xFE1
  5471                           indf2	equ	0xFDF
  5472                           fsr2h	equ	0xFDA
  5473                           fsr2l	equ	0xFD9
  5474                           status	equ	0xFD8
  5475                           
  5476 ;; *************** function i2_SpiTake *****************
  5477 ;; Defined at:
  5478 ;;		line 68 in file "MRF24J40c.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  v               1    wreg     unsigned char 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  v               1    2[COMRAM] unsigned char 
  5483 ;;  SpiTake         1    3[COMRAM] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      unsigned char 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;Total ram usage:        2 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    1
  5500 ;; This function calls:
  5501 ;;		i2_ReadSPI2
  5502 ;;		i2_WriteSPI2
  5503 ;; This function is called by:
  5504 ;;		i2_highRead
  5505 ;;		i2_lowRead
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text30
  5510  0011E6                     __ptext30:
  5511                           	opt stack 0
  5512  0011E6                     i2_SpiTake:
  5513                           	opt stack 21
  5514                           
  5515                           ;incstack = 0
  5516                           ;i2SpiTake@v stored from wreg
  5517  0011E6  6E28               	movwf	i2SpiTake@v,c
  5518                           
  5519                           ;MRF24J40c.c: 71: unsigned char val;
  5520                           ;MRF24J40c.c: 73: LATDbits.LATD0 = 0;
  5521  0011E8  908C               	bcf	3980,0,c	;volatile
  5522                           
  5523                           ;MRF24J40c.c: 74: __nop();
  5524  0011EA  F000               	nop	
  5525                           
  5526                           ;MRF24J40c.c: 75: WriteSPI2(v);
  5527  0011EC  5028               	movf	i2SpiTake@v,w,c
  5528  0011EE  EC74  F009         	call	i2_WriteSPI2
  5529  0011F2                     i2l57:
  5530  0011F2  A064               	btfss	3940,0,c	;volatile
  5531  0011F4  D7FE               	goto	i2l57
  5532                           
  5533                           ;MRF24J40c.c: 78: __nop();
  5534  0011F6  F000               	nop	
  5535                           
  5536                           ;MRF24J40c.c: 79: __nop();
  5537  0011F8  F000               	nop	
  5538                           
  5539                           ;MRF24J40c.c: 80: __nop();
  5540  0011FA  F000               	nop	
  5541                           
  5542                           ;MRF24J40c.c: 81: __nop();
  5543  0011FC  F000               	nop	
  5544                           
  5545                           ;MRF24J40c.c: 82: __nop();
  5546  0011FE  F000               	nop	
  5547                           
  5548                           ;MRF24J40c.c: 83: __nop();
  5549  001200  F000               	nop	
  5550  001202                     i2l60:
  5551  001202  A064               	btfss	3940,0,c	;volatile
  5552  001204  D7FE               	goto	i2l60
  5553                           
  5554                           ;MRF24J40c.c: 85: val = ReadSPI2();
  5555  001206  EC9D  F009         	call	i2_ReadSPI2	;wreg free
  5556  00120A  6E29               	movwf	i2SpiTake@val,c
  5557                           
  5558                           ;MRF24J40c.c: 86: LATDbits.LATD0 = 1;
  5559  00120C  808C               	bsf	3980,0,c	;volatile
  5560                           
  5561                           ;MRF24J40c.c: 87: __nop();
  5562  00120E  F000               	nop	
  5563                           
  5564                           ;MRF24J40c.c: 88: return (val);
  5565  001210  5029               	movf	i2SpiTake@val,w,c
  5566  001212  0012               	return	
  5567  001214                     __end_ofi2_SpiTake:
  5568                           	opt stack 0
  5569                           pclatu	equ	0xFFB
  5570                           pclath	equ	0xFFA
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           intcon2	equ	0xFF1
  5579                           postinc0	equ	0xFEE
  5580                           fsr0h	equ	0xFEA
  5581                           fsr0l	equ	0xFE9
  5582                           wreg	equ	0xFE8
  5583                           indf1	equ	0xFE7
  5584                           fsr1h	equ	0xFE2
  5585                           fsr1l	equ	0xFE1
  5586                           indf2	equ	0xFDF
  5587                           fsr2h	equ	0xFDA
  5588                           fsr2l	equ	0xFD9
  5589                           status	equ	0xFD8
  5590                           
  5591 ;; *************** function i2_WriteSPI2 *****************
  5592 ;; Defined at:
  5593 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi2writ.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  data_out        1    wreg     unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  data_out        1    1[COMRAM] unsigned char 
  5598 ;;  WriteSPI2       1    0[COMRAM] unsigned char 
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      char 
  5601 ;; Registers used:
  5602 ;;		wreg
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;Total ram usage:        2 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		i2_spiPut
  5618 ;;		i2_SpiTake
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text31
  5623  0012E8                     __ptext31:
  5624                           	opt stack 0
  5625  0012E8                     i2_WriteSPI2:
  5626                           	opt stack 21
  5627                           
  5628                           ;incstack = 0
  5629                           ;i2WriteSPI2@data_out stored from wreg
  5630  0012E8  6E27               	movwf	i2WriteSPI2@data_out,c
  5631  0012EA  CF66 F026          	movff	3942,i2WriteSPI2@TempVar	;volatile
  5632  0012EE  9EA4               	bcf	4004,7,c	;volatile
  5633  0012F0  9E63               	bcf	3939,7,c	;volatile
  5634  0012F2  C027  FF66         	movff	i2WriteSPI2@data_out,3942	;volatile
  5635  0012F6  BE63               	btfsc	3939,7,c	;volatile
  5636  0012F8  D002               	goto	i2l367
  5637  0012FA                     i2l369:
  5638  0012FA  AEA4               	btfss	4004,7,c	;volatile
  5639  0012FC  D7FE               	goto	i2l369
  5640  0012FE                     i2l367:
  5641  0012FE  0012               	return	
  5642  001300                     __end_ofi2_WriteSPI2:
  5643                           	opt stack 0
  5644                           pclatu	equ	0xFFB
  5645                           pclath	equ	0xFFA
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           intcon	equ	0xFF2
  5653                           intcon2	equ	0xFF1
  5654                           postinc0	equ	0xFEE
  5655                           fsr0h	equ	0xFEA
  5656                           fsr0l	equ	0xFE9
  5657                           wreg	equ	0xFE8
  5658                           indf1	equ	0xFE7
  5659                           fsr1h	equ	0xFE2
  5660                           fsr1l	equ	0xFE1
  5661                           indf2	equ	0xFDF
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function i2_ReadSPI2 *****************
  5667 ;; Defined at:
  5668 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi2read.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  ReadSPI2        1    0[COMRAM] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      unsigned char 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;Total ram usage:        1 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		i2_SpiTake
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text32
  5696  00133A                     __ptext32:
  5697                           	opt stack 0
  5698  00133A                     i2_ReadSPI2:
  5699                           	opt stack 21
  5700                           
  5701                           ;incstack = 0
  5702  00133A  CF66 F026          	movff	3942,i2ReadSPI2@TempVar	;volatile
  5703  00133E  9EA4               	bcf	4004,7,c	;volatile
  5704  001340  0E00               	movlw	0
  5705  001342  6E66               	movwf	3942,c	;volatile
  5706  001344                     i2l352:
  5707  001344  AEA4               	btfss	4004,7,c	;volatile
  5708  001346  D7FE               	goto	i2l352
  5709  001348  5066               	movf	3942,w,c	;volatile
  5710  00134A  0012               	return	
  5711  00134C                     __end_ofi2_ReadSPI2:
  5712                           	opt stack 0
  5713  0000                     pclatu	equ	0xFFB
  5714                           pclath	equ	0xFFA
  5715                           tblptru	equ	0xFF8
  5716                           tblptrh	equ	0xFF7
  5717                           tblptrl	equ	0xFF6
  5718                           tablat	equ	0xFF5
  5719                           prodh	equ	0xFF4
  5720                           prodl	equ	0xFF3
  5721                           intcon	equ	0xFF2
  5722                           intcon2	equ	0xFF1
  5723                           postinc0	equ	0xFEE
  5724                           fsr0h	equ	0xFEA
  5725                           fsr0l	equ	0xFE9
  5726                           wreg	equ	0xFE8
  5727                           indf1	equ	0xFE7
  5728                           fsr1h	equ	0xFE2
  5729                           fsr1l	equ	0xFE1
  5730                           indf2	equ	0xFDF
  5731                           fsr2h	equ	0xFDA
  5732                           fsr2l	equ	0xFD9
  5733                           status	equ	0xFD8
  5734                           pclatu	equ	0xFFB
  5735                           pclath	equ	0xFFA
  5736                           tblptru	equ	0xFF8
  5737                           tblptrh	equ	0xFF7
  5738                           tblptrl	equ	0xFF6
  5739                           tablat	equ	0xFF5
  5740                           prodh	equ	0xFF4
  5741                           prodl	equ	0xFF3
  5742                           intcon	equ	0xFF2
  5743                           intcon2	equ	0xFF1
  5744                           postinc0	equ	0xFEE
  5745                           fsr0h	equ	0xFEA
  5746                           fsr0l	equ	0xFE9
  5747                           wreg	equ	0xFE8
  5748                           indf1	equ	0xFE7
  5749                           fsr1h	equ	0xFE2
  5750                           fsr1l	equ	0xFE1
  5751                           indf2	equ	0xFDF
  5752                           fsr2h	equ	0xFDA
  5753                           fsr2l	equ	0xFD9
  5754                           status	equ	0xFD8
  5755                           
  5756                           	psect	rparam
  5757  0000                     pclatu	equ	0xFFB
  5758                           pclath	equ	0xFFA
  5759                           tblptru	equ	0xFF8
  5760                           tblptrh	equ	0xFF7
  5761                           tblptrl	equ	0xFF6
  5762                           tablat	equ	0xFF5
  5763                           prodh	equ	0xFF4
  5764                           prodl	equ	0xFF3
  5765                           intcon	equ	0xFF2
  5766                           intcon2	equ	0xFF1
  5767                           postinc0	equ	0xFEE
  5768                           fsr0h	equ	0xFEA
  5769                           fsr0l	equ	0xFE9
  5770                           wreg	equ	0xFE8
  5771                           indf1	equ	0xFE7
  5772                           fsr1h	equ	0xFE2
  5773                           fsr1l	equ	0xFE1
  5774                           indf2	equ	0xFDF
  5775                           fsr2h	equ	0xFDA
  5776                           fsr2l	equ	0xFD9
  5777                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      68
    BANK0           160     27      90
    BANK1           112      0     103
    BANK2           256      0       0
    BANK3           112      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 34
		 -> RadioStatus(BANK0[34]), 

    memset@p	PTR unsigned char  size(2) Largest target is 34
		 -> RadioStatus(BANK0[34]), 

    RadioRXPacket@readPoint	PTR unsigned char  size(2) Largest target is 144
		 -> RXBuffer1(BIGRAMl[144]), RXBuffer2(BIGRAMhl[144]), 

    sp__memset	PTR void  size(2) Largest target is 34
		 -> RadioStatus(BANK0[34]), 

    toTXfifo@source	PTR unsigned char  size(2) Largest target is 144
		 -> txPayload(BANK1[103]), payLoad(COMRAM[1]), RXBuffer1(BIGRAMl[144]), RXBuffer2(BIGRAMhl[144]), 
		 -> Tx(COMRAM[29]), 

    sp__readBytes	PTR unsigned char  size(2) Largest target is 144
		 -> RXBuffer1(BIGRAMl[144]), RXBuffer2(BIGRAMhl[144]), 

    readBytes@srcPtr	PTR unsigned char  size(2) Largest target is 144
		 -> RXBuffer1(BIGRAMl[144]), RXBuffer2(BIGRAMhl[144]), 

    readBytes@dstPtr	PTR unsigned char  size(2) Largest target is 30
		 -> Rx(BANK0[29]), 

    Rx.payload	PTR unsigned char  size(2) Largest target is 144
		 -> txPayload(BANK1[103]), payLoad(COMRAM[1]), RXBuffer1(BIGRAMl[144]), RXBuffer2(BIGRAMhl[144]), 

    S43$payload	PTR unsigned char  size(2) Largest target is 144
		 -> txPayload(BANK1[103]), payLoad(COMRAM[1]), RXBuffer1(BIGRAMl[144]), RXBuffer2(BIGRAMhl[144]), 

    Tx.payload	PTR unsigned char  size(2) Largest target is 144
		 -> txPayload(BANK1[103]), payLoad(COMRAM[1]), RXBuffer1(BIGRAMl[144]), RXBuffer2(BIGRAMhl[144]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->i2_highRead
    i2_lowWrite->i2_spiPut
    i2_lowRead->i2_SpiTake
    i2_highRead->i2_SpiTake
    i2_spiPut->i2_WriteSPI2
    i2_SpiTake->i2_WriteSPI2

Critical Paths under _main in BANK0

    _main->_RadioRXPacket
    _RadioTXPacket->_initMRF24J40
    _RadioTXRaw->_toTXfifo
    _toTXfifo->_highWrite
    _RadioSetSleep->_initMRF24J40
    _RadioRXPacket->_initMRF24J40
    _RadioInit->_initMRF24J40
    _initMRF24J40->_RadioSetAddress
    _lowRead->_SpiTake
    _highRead->_SpiTake
    _SpiTake->_WriteSPI2
    _RadioSetChannel->_highWrite
    _highWrite->_spiPut
    _RadioSetAddress->_lowWrite
    _lowWrite->_spiPut
    _spiPut->_WriteSPI2
    _BoardInit->_OpenSPI2

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   72520
                          _BoardInit
                       _Delay10KTCYx
                 _RadioDiscardPacket
                          _RadioInit
                       _RadioInitP2P
                      _RadioRXPacket
                      _RadioSetSleep
                      _RadioTXPacket
 ---------------------------------------------------------------------------------
 (1) _RadioTXPacket                                        2     2      0   24091
                                             21 BANK0      2     2      0
                         _RadioTXRaw
                       _initMRF24J40
 ---------------------------------------------------------------------------------
 (2) _RadioTXRaw                                           2     2      0   10523
                                             14 BANK0      2     2      0
                          _highWrite
                           _lowWrite
                           _toTXfifo
 ---------------------------------------------------------------------------------
 (3) _toTXfifo                                             5     0      5    5327
                                              9 BANK0      5     0      5
                          _highWrite
 ---------------------------------------------------------------------------------
 (1) _RadioSetSleep                                        1     1      0   18322
                                             21 BANK0      1     1      0
                          _highWrite
                       _initMRF24J40
                           _lowWrite
 ---------------------------------------------------------------------------------
 (1) _RadioRXPacket                                        6     6      0   15920
                                             21 BANK0      6     6      0
                 _RadioDiscardPacket
                       _initMRF24J40
                          _readBytes
 ---------------------------------------------------------------------------------
 (2) _readBytes                                            6     0      6    1978
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _RadioDiscardPacket                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RadioInitP2P                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RadioInit                                            1     1      0   13878
                                             21 BANK0      1     1      0
                       _initMRF24J40
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     368
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _initMRF24J40                                         2     2      0   13500
                                             19 BANK0      2     2      0
                    _RadioSetAddress
                    _RadioSetChannel
                           _highRead
                          _highWrite
                            _lowRead
                           _lowWrite
 ---------------------------------------------------------------------------------
 (3) _lowRead                                              3     3      0     201
                                              4 BANK0      3     3      0
                            _SpiTake
 ---------------------------------------------------------------------------------
 (3) _highRead                                             6     4      2     503
                                              4 BANK0      6     4      2
                            _SpiTake
                             _spiPut
 ---------------------------------------------------------------------------------
 (4) _SpiTake                                              2     2      0     102
                                              2 BANK0      2     2      0
                           _ReadSPI2
                          _WriteSPI2
 ---------------------------------------------------------------------------------
 (5) _ReadSPI2                                             1     1      0       3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RadioSetChannel                                      1     1      0    4946
                                              9 BANK0      1     1      0
                          _highWrite
                           _lowWrite
 ---------------------------------------------------------------------------------
 (3) _highWrite                                            6     3      3    2656
                                              3 BANK0      6     3      3
                             _spiPut
 ---------------------------------------------------------------------------------
 (3) _RadioSetAddress                                     13     1     12    3025
                                              6 BANK0     13     1     12
                           _lowWrite
 ---------------------------------------------------------------------------------
 (3) _lowWrite                                             3     2      1    2135
                                              3 BANK0      3     2      1
                             _spiPut
 ---------------------------------------------------------------------------------
 (4) _spiPut                                               1     1      0      65
                                              2 BANK0      1     1      0
                          _WriteSPI2
 ---------------------------------------------------------------------------------
 (5) _WriteSPI2                                            2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0     278
                           _OpenSPI2
 ---------------------------------------------------------------------------------
 (2) _OpenSPI2                                             3     1      2     278
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 21    21      0     946
                                             10 COMRAM    21    21      0
                         i2_highRead
                          i2_lowRead
                         i2_lowWrite
 ---------------------------------------------------------------------------------
 (8) i2_lowWrite                                           3     2      1     190
                                              3 COMRAM     3     2      1
                           i2_spiPut
 ---------------------------------------------------------------------------------
 (8) i2_lowRead                                            3     3      0     137
                                              4 COMRAM     3     3      0
                          i2_SpiTake
 ---------------------------------------------------------------------------------
 (8) i2_highRead                                           6     4      2     283
                                              4 COMRAM     6     4      2
                          i2_SpiTake
                           i2_spiPut
 ---------------------------------------------------------------------------------
 (9) i2_spiPut                                             1     1      0      45
                                              2 COMRAM     1     1      0
                        i2_WriteSPI2
 ---------------------------------------------------------------------------------
 (9) i2_SpiTake                                            2     2      0      69
                                              2 COMRAM     2     2      0
                         i2_ReadSPI2
                        i2_WriteSPI2
 ---------------------------------------------------------------------------------
 (10) i2_WriteSPI2                                         2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_ReadSPI2                                          1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _OpenSPI2
   _Delay10KTCYx
   _RadioDiscardPacket
   _RadioInit
     _initMRF24J40
       _RadioSetAddress
         _lowWrite
           _spiPut
             _WriteSPI2
       _RadioSetChannel
         _highWrite
           _spiPut
             _WriteSPI2
         _lowWrite
           _spiPut
             _WriteSPI2
       _highRead
         _SpiTake
           _ReadSPI2
           _WriteSPI2
         _spiPut
           _WriteSPI2
       _highWrite
         _spiPut
           _WriteSPI2
       _lowRead
         _SpiTake
           _ReadSPI2
           _WriteSPI2
       _lowWrite
         _spiPut
           _WriteSPI2
     _memset
   _RadioInitP2P
   _RadioRXPacket
     _RadioDiscardPacket
     _initMRF24J40
       _RadioSetAddress
         _lowWrite
           _spiPut
             _WriteSPI2
       _RadioSetChannel
         _highWrite
           _spiPut
             _WriteSPI2
         _lowWrite
           _spiPut
             _WriteSPI2
       _highRead
         _SpiTake
           _ReadSPI2
           _WriteSPI2
         _spiPut
           _WriteSPI2
       _highWrite
         _spiPut
           _WriteSPI2
       _lowRead
         _SpiTake
           _ReadSPI2
           _WriteSPI2
       _lowWrite
         _spiPut
           _WriteSPI2
     _readBytes
   _RadioSetSleep
     _highWrite
       _spiPut
         _WriteSPI2
     _initMRF24J40
       _RadioSetAddress
         _lowWrite
           _spiPut
             _WriteSPI2
       _RadioSetChannel
         _highWrite
           _spiPut
             _WriteSPI2
         _lowWrite
           _spiPut
             _WriteSPI2
       _highRead
         _SpiTake
           _ReadSPI2
           _WriteSPI2
         _spiPut
           _WriteSPI2
       _highWrite
         _spiPut
           _WriteSPI2
       _lowRead
         _SpiTake
           _ReadSPI2
           _WriteSPI2
       _lowWrite
         _spiPut
           _WriteSPI2
     _lowWrite
       _spiPut
         _WriteSPI2
   _RadioTXPacket
     _RadioTXRaw
       _highWrite
         _spiPut
           _WriteSPI2
       _lowWrite
         _spiPut
           _WriteSPI2
       _toTXfifo
         _highWrite
           _spiPut
             _WriteSPI2
     _initMRF24J40
       _RadioSetAddress
         _lowWrite
           _spiPut
             _WriteSPI2
       _RadioSetChannel
         _highWrite
           _spiPut
             _WriteSPI2
         _lowWrite
           _spiPut
             _WriteSPI2
       _highRead
         _SpiTake
           _ReadSPI2
           _WriteSPI2
         _spiPut
           _WriteSPI2
       _highWrite
         _spiPut
           _WriteSPI2
       _lowRead
         _SpiTake
           _ReadSPI2
           _WriteSPI2
       _lowWrite
         _spiPut
           _WriteSPI2

 _ISR (ROOT)
   i2_highRead
     i2_SpiTake
       i2_ReadSPI2
       i2_WriteSPI2
     i2_spiPut
       i2_WriteSPI2
   i2_lowRead
     i2_SpiTake
       i2_ReadSPI2
       i2_WriteSPI2
   i2_lowWrite
     i2_spiPut
       i2_WriteSPI2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhh           BD0      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BIGRAMhl           170      0       0      38        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BIGRAMl             FF      0       0      39        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      5A       5       56.3%
BITBANK3            70      0       0      10        0.0%
BANK3               70      0       0      11        0.0%
BITBANK1            70      0       0       6        0.0%
BANK1               70      0      67       7       92.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     105      30        0.0%
DATA                 0      0     105       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 12 15:01:34 2015

                          _i 0003              ReadSPI2@TempVar 009F                           l43 1310  
                         l60 116C                           l57 115C               RadioTXPacket@i 00B4  
                         _Rx 0082                           _Tx 0008                  __CFG_BORV$3 000000  
     __size_of_RadioRXPacket 03C8               RadioTXRaw@wReg 00AE                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                __CFG_OSC$HS 000000                 __CFG_CP4$OFF 000000                 __CFG_CP5$OFF 000000  
               __CFG_CP6$OFF 000000       __size_of_RadioTXPacket 00A4                 __CFG_CP7$OFF 000000  
                        l112 0ED6                          l106 0FFC                          l150 0086  
                        l126 0CB6                          l128 0CF4                          l153 008C  
                        l233 0A3E                          l234 0A62                          l171 12AA  
                        l260 0B42                          l341 0F7E                          l157 00F4  
                        l149 03E2                          l245 0AA2                          l342 0F9A  
                        l254 0B80                          l343 0F80                          l335 0F5C  
                        l255 0B10                          l239 0AD0                          l344 0F84  
                        l352 1320                          l337 0F60                          l338 0F62  
                        l259 0B7A                          l367 12CA                          l369 12C4  
                        l597 12D0                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        _ISR 0008                 main@ReadData 0006                          prod 000FF3  
                        wreg 000FE8                 __CFG_MODE$MC 000000                  i2_WriteSPI2 12E8  
               __CFG_LVP$OFF 000000                   i2_highRead 0FFE                         ?_ISR 0026  
                       ISR@i 0044                 __CFG_WDT$OFF 000000                         l3002 0CFA  
                       l3016 0056                         l3008 003C                         l3042 0130  
                       l3060 0232                         l3036 00DC                         l3204 0A4E  
                       l3046 01AE                         l3206 0A52                         l3064 0270  
                       l3068 02F0                         l3244 0ACA                         l2710 0EE8  
                       l3078 036C                         l2800 10B8                         l2820 0662  
                       l2910 059A                         l2902 0514                         l2744 1102  
                       l2770 0BF4                         l2738 10DC                         l2906 0544  
                       l2940 0F88                         l2780 0FB8                         l2924 12A4  
                       l2758 0BB6                         l2936 0F66                         l2856 07BC  
                       l2882 1136                         l2794 1098                         l2890 045C  
                       l2878 1122                         l2982 0ED2                         l2894 04D4  
                       l2990 0C88                         l2996 0CC0                         u2300 060E  
                       _LATA 000F89                         _LATB 000F8A                         u2055 0DEC  
                       _LATC 000F8B                         u2056 0DEE                         _LATD 000F8C  
                       u2065 11E2                         _LATE 000F8D                         u2066 11E4  
                       _LATF 000F8E                         _LATG 000F8F                         u2308 0612  
                       _LATH 000F90                         u2085 0F3A                         u2086 0F3C  
                       u2095 11AC                         u2096 11AE                         u2295 05FE  
                       u2297 0602                         u2797 12D8                         i2l43 1334  
                       i2l60 1202                         i2l57 11F2       __size_of_RadioSetSleep 006A  
                       _main 09FA                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         indf1 000FE7  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
    RadioSetSleep@powerState 00B4                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 0018                __CFG_IESO$OFF 000000  
                 i2_lowWrite 123E                __CFG_MCLRE$ON 000000               RadioInit@radio 00B4  
         i2highRead@toReturn 002E                        ??_ISR 0030                ?_initMRF24J40 0026  
            __end_of_SpiTake 1182                __CFG_WAIT$OFF 000000                        ?_main 0026  
                      i2l352 1344                        i2l186 09C0                        i2l367 12FE  
                      i2l369 12FA                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TRISF 000F97                        _TRISG 000F98                        _TRISH 000F99  
      __size_of_Delay10KTCYx 001C                __CFG_PWRT$OFF 000000                ?_RadioInitP2P 0026  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000                __CFG_WRT4$OFF 000000                __CFG_WRT5$OFF 000000  
              __CFG_WRT6$OFF 000000                __CFG_WRT7$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000               __CFG_EBTR4$OFF 000000               __CFG_EBTR5$OFF 000000  
             __CFG_EBTR6$OFF 000000               __CFG_EBTR7$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
            __end_of_lowRead 11B4               __CFG_BOREN$OFF 000000                        tablat 000FF5  
              _RadioRXPacket 001C                  ?i2_ReadSPI2 0026                _RadioTXPacket 0C5C  
         __size_ofi2_SpiTake 002E                        status 000FD8              readBytes@dstPtr 009F  
           __end_ofi2_spiPut 133A              readBytes@srcPtr 00A1              __initialization 1214  
               __end_of_main 0B86               ??_initMRF24J40 00B2                   _RadioTXRaw 03E4  
RadioSetAddress@shortAddress 00A5             __end_of_ReadSPI2 1328                 _Delay10KTCYx 12CC  
              _RadioSetSleep 0E6E           __size_ofi2_lowRead 0026           __size_of_BoardInit 0070  
           __end_of_OpenSPI2 0FA2                       ??_main 00BA                __activetblptr 000003  
             ??_RadioInitP2P 009F     __size_of_RadioSetAddress 00D6     __size_of_RadioSetChannel 005C  
                     _ADCON1 000FC1                  ?i2_highRead 002A               ?_RadioRXPacket 0026  
            __CFG_BBSIZ$BB2K 000000                       i2l2460 08F4                       i2l2452 08B8  
                     i2l2374 100A                       i2l2472 093A                       i2l2456 08C6  
                     i2l2464 091C                       i2l2448 08A8                       i2l2476 094E  
             ?_RadioTXPacket 0026                   SpiTake@val 00A2           __size_of_RadioInit 008A  
                ?i2_lowWrite 0029               __CFG_XINST$OFF 000000             __end_of_highRead 0F42  
                  ??_SpiTake 00A1               highWrite@value 00A4               ?_RadioSetSleep 0026  
           OpenSPI2@bus_mode 009F                       _memset 1114                       clear_0 121A  
                     clear_1 1226                       clear_2 1232                       _spiPut 1300  
        __size_ofi2_ReadSPI2 0012             __end_of_toTXfifo 1114            __end_ofi2_SpiTake 1214  
           __end_of_lowWrite 11E6                    ??_lowRead 00A3                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8            __end_ofi2_lowRead 128C  
                 __accesstop 0060      __end_of__initialization 1238            __end_of_BoardInit 0E6E  
         __size_of_WriteSPI2 0020             i2lowRead@address 002A  __size_of_RadioDiscardPacket 0020  
             __pcstackCOMRAM 0026                  ?_RadioTXRaw 0026             i2lowRead@tmpRFIE 002C  
        __size_ofi2_highRead 0052                toTXfifo@count 00AC                  _RadioStatus 0060  
          __end_of_RadioInit 0D8A                    ISR@TXSTAT 0042                 ?i2_WriteSPI2 0026  
                  ?i2_spiPut 0026           __size_of_highWrite 0074          __size_ofi2_lowWrite 0028  
            ??_RadioRXPacket 00B4              ??_RadioTXPacket 00B4         __end_of_initMRF24J40 083E  
                 __pbssBANK0 0060                   __pbssBANK1 0190                    ?_ReadSPI2 0026  
           WriteSPI2@TempVar 009F            ??_RadioSetAddress 00B1                    ISR@iflags 0040  
          ??_RadioSetChannel 00A8                  toTXfifo@reg 00A8           __size_of_readBytes 0044  
                  ?_OpenSPI2 009F         __end_of_RadioInitP2P 1096              ??_RadioSetSleep 00B4  
                    ?_memset 009F                      ?_spiPut 0026            __end_of_WriteSPI2 12CC  
        i2WriteSPI2@data_out 0027                   ??i2_spiPut 0028                      _SSP2BUF 000F66  
                  ?_highRead 00A3                      _SPI_Brg 0001          __size_of_RadioTXRaw 0248  
               ??i2_ReadSPI2 0026                   ??_ReadSPI2 009F                   ??_OpenSPI2 00A1  
                  ?_toTXfifo 00A8                      __Hparam 0000                    ?_lowWrite 00A2  
                    __Lparam 0000                      _SpiTake 114C            __end_of_highWrite 0DFE  
           RadioSetAddress@i 00B1              __CFG_STVREN$OFF 000000                      __pcinit 1214  
            __size_of_memset 0038               lowRead@address 00A3                      __ramtop 1000  
                    __ptext0 09FA                      __ptext1 0C5C                      __ptext2 03E4  
                    __ptext3 10DA                      __ptext4 0E6E                      __ptext5 001C  
                    __ptext6 1096                      __ptext7 128C                      __ptext8 1050  
                    __ptext9 0D00              __size_of_spiPut 0016           __end_ofi2_ReadSPI2 134C  
               __size_of_ISR 09F2            __end_of_readBytes 10DA                      _payLoad 0025  
                    _lowRead 1182               lowRead@tmpRFIE 00A5                 ??i2_highRead 002C  
                 ??_highRead 00A5               __pintcode_body 083E         end_of_initialization 1238  
              initMRF24J40@i 00B3                      memset@c 00A1                      memset@n 00A3  
                    memset@p 00A5                      int_func 083E                   ??_toTXfifo 00AD  
               ??i2_lowWrite 002A                   ??_lowWrite 00A3                      spiPut@v 00A1  
          OpenSPI2@smp_phase 00A0                      postinc0 000FEE           __end_ofi2_highRead 1050  
        main@lastFrameNumber 0007                    _PORTBbits 000F81                    _PORTCbits 000F82  
          OpenSPI2@sync_mode 00A1        __size_of_initMRF24J40 0212                lowWrite@value 00A2  
                  _TRISBbits 000F93                    _TRISCbits 000F94                    _TRISDbits 000F95  
                  i2_SpiTake 11E6           __end_ofi2_lowWrite 1266         __size_ofi2_WriteSPI2 0018  
          i2highRead@address 002A        __size_of_RadioInitP2P 0046         RadioSetAddress@panID 00AF  
                  _RXBuffer1 000100                    _RXBuffer2 000300                    i2_lowRead 1266  
                  _BoardInit 0DFE            i2highRead@tmpRFIE 002F                 ??_RadioTXRaw 00AD  
               _initMRF24J40 062C            i2lowRead@toReturn 002B               __end_of_memset 114C  
             __end_of_spiPut 1316              _RadioSetAddress 0B86          start_initialization 1214  
             readBytes@count 00A3                 _RadioInitP2P 1050              _RadioSetChannel 0FA2  
                __end_of_ISR 09FA                   ?i2_SpiTake 0026                    i2spiPut@v 0028  
                  _RadioInit 0D00            __size_ofi2_spiPut 0012   __end_of_RadioDiscardPacket 12AC  
         __end_of_RadioTXRaw 062C               toTXfifo@source 00AA            __size_of_ReadSPI2 0012  
                 ?i2_lowRead 0026                   ?_BoardInit 0026            __size_of_OpenSPI2 0060  
           __CFG_LPT1OSC$OFF 000000                     ??_memset 00A5                     ??_spiPut 00A1  
                __pbssCOMRAM 0001                __pcstackBANK0 009F                    _WriteSPI2 12AC  
                 ?_RadioInit 0026            i2lowWrite@address 002A        __end_of_RadioRXPacket 03E4  
      __end_of_RadioTXPacket 0D00            __size_of_highRead 006A            i2lowWrite@tmpRFIE 002B  
                   ISR@bytes 0043            __CFG_CCP2MX$PORTC 000000                     ?_SpiTake 0026  
          WriteSPI2@data_out 00A0           i2WriteSPI2@TempVar 0026            __size_of_toTXfifo 003A  
                  __pintcode 0008            __size_of_lowWrite 0032        __end_of_RadioSetSleep 0ED8  
              ?_Delay10KTCYx 0026      __end_of_RadioSetAddress 0C5C      __end_of_RadioSetChannel 0FFE  
          i2ReadSPI2@TempVar 0026                    _highWrite 0D8A                     ?_lowRead 0026  
                ??i2_SpiTake 0028                   ?_WriteSPI2 0026                    _readBytes 1096  
           highRead@toReturn 00A7                     _LATDbits 000F8C                  ??i2_lowRead 002A  
                ??_BoardInit 00A2                     i2u161_45 104A                     i2u161_46 104C  
                   i2u162_45 1286                     i2u162_46 1288                     i2u163_45 1262  
                   i2u163_46 1264                     i2u176_45 0986                     _PIR3bits 000FA4  
      __CFG_DATABW$DATA16BIT 000000                     _RCONbits 000FD0             __CFG_WDTPS$32768 000000  
             ??_Delay10KTCYx 009F                     _SSP2CON1 000F63                     _SSP2STAT 000F64  
                  _txPayload 0190                   ?_highWrite 00A2            __CFG_ECCPMX$PORTE 000000  
           Delay10KTCYx@unit 00A0                     i2_spiPut 1328                   ?_readBytes 009F  
                ??_RadioInit 00B4                  _INTCON2bits 000FF1                     _ReadSPI2 1316  
     RadioRXPacket@readPoint 00B8                     _OpenSPI2 0F42                     SpiTake@v 00A1  
                   __Hrparam 0000                     __Lrparam 0000                     _Tempbyte 0005  
           __size_of_SpiTake 0036             highWrite@address 00A2             ?_RadioSetAddress 00A5  
           ?_RadioSetChannel 0026       RadioSetChannel@channel 00A8             highWrite@tmpRFIE 00A7  
              ??i2_WriteSPI2 0026                  ??_WriteSPI2 009F             __size_of_lowRead 0032  
                   __ptext10 1114                     __ptext11 062C                     __ptext20 1300  
                   __ptext12 1182                     __ptext21 12AC                     __ptext13 0ED8  
                   __ptext30 11E6                     __ptext22 12CC                     __ptext14 114C  
                   __ptext31 12E8                     __ptext23 0DFE                     __ptext15 1316  
                   __ptext32 133A                     __ptext24 0F42                     __ptext16 0FA2  
                   __ptext17 0D8A                     __ptext26 123E                     __ptext18 0B86  
                   __ptext27 1266                     __ptext19 11B4                     __ptext28 0FFE  
                   __ptext29 1328                     _highRead 0ED8              highRead@address 00A3  
               _SSP2CON1bits 000F63                __size_of_main 018C              highRead@tmpRFIE 00A8  
                   _toTXfifo 10DA                     _lowWrite 11B4           _RadioDiscardPacket 128C  
            lowRead@toReturn 00A4                  ??_highWrite 00A5                 _SSP2STATbits 000F64  
        ?_RadioDiscardPacket 0026        __CFG_ADDRBW$ADDR20BIT 000000                   _INTCONbits 000FF2  
RadioSetAddress@longAddress1 00A7  RadioSetAddress@longAddress2 00AB                  ??_readBytes 00A5  
                   memset@p1 009F         __end_of_Delay10KTCYx 12E8                     intlevel2 0000  
            i2lowWrite@value 0029          __end_ofi2_WriteSPI2 1300         ??_RadioDiscardPacket 009F  
            lowWrite@address 00A3                   i2_ReadSPI2 133A              lowWrite@tmpRFIE 00A4  
               i2SpiTake@val 0029               RadioRXPacket@i 00B6                   i2SpiTake@v 0028  
